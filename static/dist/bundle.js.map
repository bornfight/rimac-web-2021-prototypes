{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/Dummy.js","static/js/components/GradientBg.js","static/js/components/NavigationController.js","static/js/components/ScrollProgress.js","static/js/components/TimelineSlider.js","static/js/components/VideoScrub.js","static/js/helpers/DarkModeHelper.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;ICAqB,K;AACjB,mBAAc;AAAA;AAAE;;;;2BAET;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,SAAZ;AACH;;;;;;;;;;;;;;;;ACLL;;AACA;;;;;;;;AAEA,WAAK,cAAL,CAAoB,4BAApB;;IAEqB,U;AACjB,wBAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,WAAW,EAAE,aADN;AAEP,MAAA,EAAE,EAAE,gBAFG;AAGP,MAAA,mBAAmB,EAAE,gCAHd;AAIP,MAAA,eAAe,EAAE,4BAJV;AAKP,MAAA,MAAM,EAAE;AALD,KAAX;AAQA,SAAK,EAAL,GAAU,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,EAAhC,CAAV;AACA,SAAK,eAAL,GAAuB,QAAQ,CAAC,gBAAT,CACnB,KAAK,GAAL,CAAS,eADU,CAAvB;AAGA,SAAK,mBAAL,GAA2B,QAAQ,CAAC,aAAT,CACvB,KAAK,GAAL,CAAS,mBADc,CAA3B;AAGH;;;;2BAEM;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AAEA,WAAK,aAAL;AACA,WAAK,WAAL;AACH;;;oCAEe;AACZ,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,eAAL,CAAqB,MAAzC,EAAiD,CAAC,GAAG,CAArD,EAAwD,CAAC,EAAzD,EAA6D;AACzD,YAAI,QAAQ,GAAG,WAAK,EAAL,CAAQ,KAAK,EAAb,EAAiB;AAC5B,UAAA,QAAQ,EAAE,GADkB;AAE5B,UAAA,SAAS,EAAE,KAAK,eAAL,CAAqB,CAArB,EAAwB,YAAxB,CACP,iBADO,CAFiB;AAK5B,UAAA,IAAI,EAAE,MALsB;AAM5B,UAAA,OAAO,EAAE,mBAAM,CAAE,CANW;AAO5B,UAAA,QAAQ,EAAE,oBAAM,CAAE;AAPU,SAAjB,CAAf;;AAUA,qCAAc,MAAd,CAAqB;AACjB,UAAA,OAAO,EAAE,KAAK,eAAL,CAAqB,CAArB,CADQ;AAEjB,UAAA,SAAS,EAAE,QAFM;AAGjB;AACA,UAAA,KAAK,EAAE,YAJU;AAKjB,UAAA,GAAG,EAAE,OALY;AAMjB,UAAA,KAAK,EAAE,IANU;AAOjB,UAAA,OAAO,EAAE,mBAAM;AACX,YAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACH,WATgB;AAUjB,UAAA,WAAW,EAAE,uBAAM;AACf,YAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACH,WAZgB;AAajB,UAAA,OAAO,EAAE,mBAAM;AACX,YAAA,OAAO,CAAC,GAAR,CAAY,OAAZ;AACH,WAfgB;AAgBjB,UAAA,WAAW,EAAE,uBAAM;AACf,YAAA,OAAO,CAAC,GAAR,CAAY,WAAZ;AACH;AAlBgB,SAArB;AAoBH;AACJ;;;kCAEa;AAAA;;AACV,MAAA,QAAQ,CAAC,gBAAT,CAA0B,WAA1B,EAAuC,UAAC,GAAD,EAAS;AAC5C,YAAI,CAAC,GAAG,GAAG,CAAC,OAAJ,GAAc,UAAtB;AACA,YAAI,CAAC,GAAG,GAAG,CAAC,OAAJ,GAAc,WAAtB;AAEA,YAAI,QAAQ,GAAG,GAAG,CAAC,OAAJ,GAAc,MAAM,CAAC,UAArB,GAAkC,GAAjD;AACA,YAAI,QAAQ,GAAG,GAAG,CAAC,OAAJ,GAAc,MAAM,CAAC,WAArB,GAAmC,GAAlD;;AAEA,mBAAK,EAAL,CAAQ,MAAR,EAAgB;AACZ,UAAA,QAAQ,EAAE,GADE;AAEZ,uBAAa,CAFD;AAGZ,UAAA,IAAI,EAAE;AAHM,SAAhB;;AAMA,mBAAK,EAAL,CAAQ,MAAR,EAAgB;AACZ,UAAA,QAAQ,EAAE,GADE;AAEZ,uBAAa,CAFD;AAGZ,UAAA,IAAI,EAAE;AAHM,SAAhB;;AAMA,mBAAK,EAAL,CAAQ,KAAI,CAAC,mBAAb,EAAkC;AAC9B,UAAA,QAAQ,EAAE,GADoB;AAE9B,UAAA,SAAS,EAAE,IAAI,QAFe;AAG9B,UAAA,CAAC,EAAE,KAAK,QAHsB;AAI9B,UAAA,SAAS,EAAE,MAAM,QAJa;AAK9B,UAAA,CAAC,EAAE,CAAC,GAAD,GAAO,QALoB;AAM9B,UAAA,IAAI,EAAE,aANwB;AAO9B,UAAA,oBAAoB,EAAE,GAPQ;AAQ9B,UAAA,eAAe,EAAE;AARa,SAAlC;AAUH,OA7BD;AA8BH;;;;;;;;;;;;;;;;;;;;;;ACjGL;;;;IAIqB,oB;AACjB,kCAAc;AAAA;;AACV;;;;;AAMA,SAAK,GAAL,GAAW;AACP,MAAA,UAAU,EAAE,wBADL;AAEP,MAAA,MAAM,EAAE;AACJ,QAAA,kBAAkB,EAAE,cADhB;AAEJ,QAAA,eAAe,EAAE,UAFb;AAGJ,QAAA,iBAAiB,EAAE;AAHf;AAFD,KAAX;AASA;;;;;AAIA,SAAK,SAAL,GAAiB,KAAjB;AACA;;;;;AAIA,SAAK,sBAAL,GAA8B,GAA9B;AACA;;;;;AAIA,SAAK,WAAL,GAAmB,CAAnB;AACA;;;;;AAIA,SAAK,UAAL,GAAkB,CAAlB;AACA,SAAK,WAAL,GAAmB,CAAnB;AACA,SAAK,YAAL,GAAoB,CAApB;AAEA;;;;;AAIA,SAAK,UAAL,GAAkB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,UAAhC,CAAlB;AACH,G,CAED;;AACA;;;;;;;2BAGO;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;;AAEA,UAAI,KAAK,UAAL,KAAoB,IAAxB,EAA8B;AAC1B,aAAK,oBAAL;AACH,OAFD,MAEO;AACH,QAAA,OAAO,CAAC,KAAR,WAAiB,KAAK,GAAL,CAAS,UAA1B;AACH;AACJ;AAED;;;;;;2CAGuB;AAAA;;AACnB,MAAA,QAAQ,CAAC,gBAAT,CAA0B,QAA1B,EAAoC,YAAM;AACtC,YAAI,CAAC,KAAI,CAAC,SAAV,EAAqB;AACjB,UAAA,KAAI,CAAC,SAAL,GAAiB,IAAjB;;AAEA,cAAI,CAAC,MAAM,CAAC,qBAAZ,EAAmC;AAC/B,YAAA,UAAU,CAAC,KAAI,CAAC,WAAL,EAAD,EAAqB,GAArB,CAAV;AACH,WAFD,MAEO;AACH,YAAA,qBAAqB,CAAC;AAAA,qBAAM,KAAI,CAAC,WAAL,EAAN;AAAA,aAAD,CAArB;AACH;AACJ;AACJ,OAVD;AAWH;AAED;;;;;;kCAGc;AACV;;;;AAIA,UAAI,UAAU,GAAG,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,IAAT,CAAc,SAApD;AAEA,WAAK,qBAAL,CAA2B,UAA3B;AAEA,WAAK,WAAL,GAAmB,UAAnB;AACA,WAAK,SAAL,GAAiB,KAAjB;AACH;AAED;;;;;;;0CAIsB,U,EAAY;AAC9B,UAAI,UAAU,GAAG,KAAK,sBAAtB,EAA8C;AAC1C,aAAK,UAAL,CAAgB,SAAhB,CAA0B,GAA1B,CAA8B,KAAK,GAAL,CAAS,MAAT,CAAgB,kBAA9C;AACH,OAFD,MAEO;AACH,aAAK,UAAL,CAAgB,SAAhB,CAA0B,MAA1B,CACI,KAAK,GAAL,CAAS,MAAT,CAAgB,kBADpB;AAGH;;AAED,UAAI,KAAK,WAAL,IAAoB,UAAxB,EAAoC;AAChC,aAAK,WAAL,CAAiB,UAAjB;AACH,OAFD,MAEO;AACH,aAAK,aAAL,CAAmB,UAAnB;AACH;AACJ;AAED;;;;;;;gCAIY,U,EAAY;AACpB,UAAI,UAAU,GAAG,KAAK,sBAAtB,EAA8C;AAC1C,aAAK,UAAL,CAAgB,SAAhB,CAA0B,MAA1B,CAAiC,KAAK,GAAL,CAAS,MAAT,CAAgB,iBAAjD;AACH,OAFD,MAEO,IAAI,KAAK,WAAL,GAAmB,UAAnB,GAAgC,KAAK,WAAzC,EAAsD;AACzD,aAAK,UAAL,CAAgB,SAAhB,CAA0B,MAA1B,CAAiC,KAAK,GAAL,CAAS,MAAT,CAAgB,iBAAjD;AACH;AACJ;AAED;;;;;;;kCAIc,U,EAAY;AACtB,UAAI,UAAU,GAAG,KAAK,sBAAL,GAA8B,KAAK,YAApD,EAAkE;AAC9D,aAAK,UAAL,CAAgB,SAAhB,CAA0B,GAA1B,CAA8B,KAAK,GAAL,CAAS,MAAT,CAAgB,iBAA9C;AACH,OAFD,MAEO,IAAI,UAAU,GAAG,KAAK,sBAAtB,EAA8C;AACjD,aAAK,UAAL,CAAgB,SAAhB,CAA0B,MAA1B,CAAiC,KAAK,GAAL,CAAS,MAAT,CAAgB,iBAAjD;AACH;AACJ,K,CAED;;;;;;;;;;;;;;;;;AC9IJ;;AACA;;;;;;;;AAEA,WAAK,cAAL,CAAoB,4BAApB;;IAEqB,c;AACjB,4BAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,cAAc,EAAE,qBADT;AAEP,MAAA,kBAAkB,EAAE,0BAFb;AAGP,MAAA,qBAAqB,EAAE,6BAHhB;AAIP,MAAA,MAAM,EAAE;AACJ,QAAA,QAAQ,EAAE;AADN;AAJD,KAAX;AASA,SAAK,cAAL,GAAsB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,cAAhC,CAAtB;AACA,SAAK,mBAAL,GAA2B,QAAQ,CAAC,gBAAT,CACvB,KAAK,GAAL,CAAS,kBADc,CAA3B;AAGA,SAAK,sBAAL,GAA8B,QAAQ,CAAC,gBAAT,CAC1B,KAAK,GAAL,CAAS,qBADiB,CAA9B;AAGH;;;;2BAEM;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ;;AAEA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,mBAAL,CAAyB,MAA7C,EAAqD,CAAC,GAAG,CAAzD,EAA4D,CAAC,EAA7D,EAAiE;AAC7D,YAAI,QAAQ,GAAG,WAAK,EAAL,CAAQ,KAAK,mBAAL,CAAyB,CAAzB,CAAR,EAAqC;AAChD,UAAA,QAAQ,EAAE,CADsC;AAEhD,UAAA,MAAM,EAAE,CAFwC;AAGhD,UAAA,IAAI,EAAE,MAH0C;AAIhD,UAAA,QAAQ,EAAE,oBAAM,CACZ;AACH;AAN+C,SAArC,CAAf;;AASA,qCAAc,MAAd,CAAqB;AACjB,UAAA,OAAO,EAAE,KAAK,sBAAL,CAA4B,CAA5B,CADQ;AAEjB;AACA,UAAA,KAAK,EAAE,YAHU;AAIjB,UAAA,GAAG,EAAE,eAJY;AAKjB,UAAA,SAAS,EAAE,QALM;AAMjB,UAAA,KAAK,EAAE;AANU,SAArB;AAQH;AACJ;;;;;;;;;;;;;;;;;;AC/CL;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;IAEqB,c;AACjB,4BAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,QAAQ,EAAE,cADH;AAGP,MAAA,cAAc,EAAE,qBAHT;AAIP,MAAA,qBAAqB,EAAE,6BAJhB;AAKP,MAAA,kBAAkB,EAAE,0BALb;AAMP,MAAA,kBAAkB,EAAE,8BANb;AAOP,MAAA,mBAAmB,EAAE,sCAPd;AAQP,MAAA,uBAAuB,EAAE,0CARlB;AAUP,MAAA,KAAK,EAAE,oBAVA;AAWP,MAAA,UAAU,EAAE,0BAXL;AAYP,MAAA,SAAS,EAAE,yBAZJ;AAaP,MAAA,UAAU,EAAE,0BAbL;AAcP,MAAA,YAAY,EAAE,4BAdP;AAeP,MAAA,MAAM,EAAE;AAfD,KAAX;AAkBA,SAAK,OAAL,GAAe;AACX,MAAA,eAAe,EAAE;AADN,KAAf;AAIA,SAAK,KAAL,GAAa;AACT,MAAA,CAAC,EAAE,CADM;AAET,MAAA,CAAC,EAAE;AAFM,KAAb;AAKA,SAAK,QAAL,GAAgB,MAAM,CAAC,UAAvB;AACA,SAAK,SAAL,GAAiB,MAAM,CAAC,WAAxB;AAEA,SAAK,WAAL,GAAmB,CAAnB;AAEA,SAAK,QAAL,GAAgB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,QAAhC,CAAhB;AACA,SAAK,MAAL,GAAc,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,cAAhC,CAAd;AACA,SAAK,WAAL,GAAmB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,mBAAhC,CAAnB;AACA,SAAK,eAAL,GAAuB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,uBAAhC,CAAvB;AACA,SAAK,aAAL,GAAqB,QAAQ,CAAC,aAAT,CACjB,KAAK,GAAL,CAAS,qBADQ,CAArB;AAIA,SAAK,KAAL,GAAa,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,KAAhC,CAAb;AACA,SAAK,UAAL,GAAkB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,UAAhC,CAAlB;AACA,SAAK,SAAL,GAAiB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,SAAhC,CAAjB;AACA,SAAK,UAAL,GAAkB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,UAAhC,CAAlB;AACA,SAAK,YAAL,GAAoB,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,YAAhC,CAApB;AAEA,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,WAAL,GAAmB,KAAnB;AAEA,SAAK,sBAAL,GAA8B,gBAA9B;AACA,SAAK,aAAL,GAAqB,CACjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,wBAHX;AAII,MAAA,IAAI,EACA;AALR,KADiB,EAQjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,oCAHX;AAII,MAAA,IAAI,EACA;AALR,KARiB,EAejB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,mBAHX;AAII,MAAA,IAAI,EACA;AALR,KAfiB,EAsBjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,wBAHX;AAII,MAAA,IAAI,EACA;AALR,KAtBiB,EA6BjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,oCAHX;AAII,MAAA,IAAI,EACA;AALR,KA7BiB,EAoCjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,mBAHX;AAII,MAAA,IAAI,EACA;AALR,KApCiB,EA2CjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,wBAHX;AAII,MAAA,IAAI,EACA;AALR,KA3CiB,EAkDjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,oCAHX;AAII,MAAA,IAAI,EACA;AALR,KAlDiB,EAyDjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,mBAHX;AAII,MAAA,IAAI,EACA;AALR,KAzDiB,EAgEjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,wBAHX;AAII,MAAA,IAAI,EACA;AALR,KAhEiB,EAuEjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,oCAHX;AAII,MAAA,IAAI,EACA;AALR,KAvEiB,EA8EjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,mBAHX;AAII,MAAA,IAAI,EACA;AALR,KA9EiB,EAqFjB;AACI,MAAA,KAAK,EAAE,iBADX;AAEI,MAAA,IAAI,EAAE,MAFV;AAGI,MAAA,KAAK,EAAE,wBAHX;AAII,MAAA,IAAI,EACA;AALR,KArFiB,CAArB,CAnDU,CAiJV;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,KAAL,GAAa,IAAb;AACA,SAAK,QAAL,GAAgB,IAAhB;AACA,SAAK,cAAL,GAAsB,EAAtB;AACA,SAAK,UAAL,GAAkB,EAAlB;AAEA,SAAK,IAAL;AACH;;;;2BAEM;AAAA;;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,uBAAZ;AAEA,WAAK,KAAL,GAAa,IAAI,KAAK,CAAC,KAAV,EAAb;AAEA,UAAM,OAAO,GAAG;AACZ,QAAA,MAAM,EAAE;AACJ,UAAA,GAAG,EAAE,EADD;AAEJ,UAAA,IAAI,EAAE,EAFF;AAGJ,UAAA,GAAG,EAAE,IAHD;AAIJ,UAAA,IAAI,EAAE,CAAC,GAJH;AAKJ,UAAA,IAAI,EAAE,GALF;AAMJ,UAAA,IAAI,EAAE;AANF;AADI,OAAhB;AAWA,WAAK,MAAL,GAAc,IAAI,KAAK,CAAC,iBAAV,CACV,OAAO,CAAC,MAAR,CAAe,GADL,EAEV,KAAK,QAAL,GAAgB,KAAK,SAFX,EAGV,OAAO,CAAC,MAAR,CAAe,IAHL,EAIV,OAAO,CAAC,MAAR,CAAe,GAJL,CAAd;AAOA,WAAK,gBAAL,GAAwB,IAAxB;AAEA,WAAK,sBAAL,GAA8B,IAA9B;AAEA,WAAK,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB;AAEA,WAAK,MAAL,CAAY,QAAZ,CAAqB,CAArB,GAAyB,CAAzB;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,CAArB,GAAyB,CAAzB;AACA,WAAK,MAAL,CAAY,QAAZ,CAAqB,CAArB,GAAyB,KAAK,sBAA9B;AAEA,WAAK,4BAAL,GAAoC,GAApC;AACA,WAAK,4BAAL,GAAoC,IAApC;AAEA,WAAK,aAAL,GAAqB,IAAI,KAAK,CAAC,QAAV,EAArB;AACA,WAAK,aAAL,CAAmB,QAAnB,CAA4B,GAA5B,CACI,CADJ,EAEI,KAAK,4BAFT,EAGI,CAHJ;AAKA,WAAK,aAAL,CAAmB,QAAnB,CAA4B,CAA5B,GAAgC,KAAK,4BAArC;AACA,WAAK,aAAL,CAAmB,IAAnB,GAA0B,gBAA1B;AACA,WAAK,aAAL,CAAmB,GAAnB,CAAuB,KAAK,MAA5B;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,KAAK,aAApB;AAEA,WAAK,MAAL,GAAc,IAAI,KAAK,CAAC,OAAV,EAAd;AAEA,UAAM,iBAAiB,GAAG,IAAI,KAAK,CAAC,iBAAV,CAA4B;AAClD,QAAA,KAAK,EAAE,QAD2C;AAElD,QAAA,WAAW,EAAE;AAFqC,OAA5B,CAA1B;AAKA,WAAK,mBAAL,GAA2B,KAAK,CAAhC;AACA,UAAM,aAAa,GAAG,IAAI,KAAK,CAAC,aAAV,CAAwB,GAAxB,EAA6B,GAA7B,EAAkC,CAAlC,EAAqC,CAArC,CAAtB;AACA,UAAI,iBAAiB,GAAG,aAAa,CAAC,KAAd,EAAxB;AACA,MAAA,iBAAiB,CAAC,WAAlB,CACI,IAAI,KAAK,CAAC,OAAV,GAAoB,aAApB,CAAkC,IAAI,CAAC,EAAvC,CADJ,EAzDG,CA6DH;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,aAAL,CAAmB,MAAvC,EAA+C,CAAC,GAAG,CAAnD,EAAsD,CAAC,EAAvD,EAA2D;AACvD,aAAK,WAAL,CACI,CADJ,EAEI,KAAK,aAAL,CAAmB,CAAnB,CAFJ,EAGI,iBAHJ,EAII,iBAJJ,EAKI,aALJ;AAOH;;AAED,UAAM,aAAa,GAAG,KAAK,UAAL,CAAgB,CAAhB,EAAmB,QAAnB,CAA4B,CAAlD;AACA,UAAM,gBAAgB,GAAG,KAAK,UAAL,CAAgB,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAzC,EAA4C,QAA5C,CAAqD,CAA9E;AACA,UAAM,WAAW,GACb,IAAI,CAAC,GAAL,CAAS,gBAAT,IAA6B,IAAI,CAAC,GAAL,CAAS,aAAT,CADjC;AAEA,WAAK,iBAAL,GACI,WAAW,IAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAA7B,CADf,CA5EG,CA+EH;;AACA,WAAK,cAAL,GAAsB,IAAI,KAAK,CAAC,aAAV,EAAtB;AACA,WAAK,cAAL,CAAoB,aAApB,CAAkC,MAAM,CAAC,gBAAzC;AACA,WAAK,cAAL,CAAoB,OAApB,CAA4B,KAAK,QAAjC,EAA2C,KAAK,SAAhD;AACA,WAAK,QAAL,CAAc,WAAd,CAA0B,KAAK,cAAL,CAAoB,UAA9C;AAEA,MAAA,MAAM,CAAC,gBAAP,CACI,QADJ,EAEI,YAAM;AACF,QAAA,KAAI,CAAC,cAAL;AACH,OAJL,EAKI,KALJ;AAQA,WAAK,GAAL,GA7FG,CA+FH;;AACA,UAAM,gBAAgB,GAAG;AACrB,QAAA,KAAK,EAAE,GADc;AAErB,QAAA,QAAQ,EAAE,GAFW;AAGrB,QAAA,OAAO,EAAE;AAHY,OAAzB;;AAMA,UAAI,UAAU,GAAG,SAAb,UAAa,GAAM;AACnB,QAAA,KAAI,CAAC,cAAL,CAAoB,KAApB,CAA0B,QAA1B,CAAmC,OAAnC,EAA4C,KAA5C,GACI,gBAAgB,CAAC,KADrB;AAEA,QAAA,KAAI,CAAC,cAAL,CAAoB,KAApB,CAA0B,QAA1B,CAAmC,UAAnC,EAA+C,KAA/C,GACI,gBAAgB,CAAC,QAAjB,GAA4B,OADhC;AAEA,QAAA,KAAI,CAAC,cAAL,CAAoB,KAApB,CAA0B,QAA1B,CAAmC,SAAnC,EAA8C,KAA9C,GACI,gBAAgB,CAAC,OADrB;AAEH,OAPD;;AASA,UAAM,GAAG,GAAG,IAAI,iBAAJ,EAAZ;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAR,EAA0B,OAA1B,EAAmC,IAAnC,EAAyC,MAAzC,EAAiD,EAAjD,EAAqD,QAArD,CACI,UADJ;AAGA,MAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAR,EAA0B,UAA1B,EAAsC,CAAtC,EAAyC,EAAzC,EAA6C,GAA7C,EAAkD,QAAlD,CAA2D,UAA3D;AACA,MAAA,GAAG,CAAC,GAAJ,CAAQ,gBAAR,EAA0B,SAA1B,EAAqC,GAArC,EAA0C,IAA1C,EAAgD,KAAhD,EAAuD,QAAvD,CACI,UADJ;AAGA,MAAA,GAAG,CAAC,KAAJ;AAEA,MAAA,UAAU,GAzHP,CA0HH;;AAEA,WAAK,OAAL;AACA,WAAK,SAAL,GA7HG,CA+HH;;AACA,WAAK,UAAL;AAEA,WAAK,UAAL;AAEA,WAAK,eAAL;AACH;;;qCAEgB;AACb,WAAK,MAAL,CAAY,MAAZ,GAAqB,KAAK,QAAL,GAAgB,KAAK,SAA1C;AACA,WAAK,MAAL,CAAY,sBAAZ;AACA,WAAK,cAAL,CAAoB,QAApB,CAA6B,OAA7B,CAAqC,KAAK,QAA1C,EAAoD,KAAK,SAAzD;AACH;;;8BAES;AAAA;;AACN,MAAA,qBAAqB,CAAC;AAAA,eAAM,MAAI,CAAC,OAAL,EAAN;AAAA,OAAD,CAArB;AACA,WAAK,cAAL,CAAoB,QAApB,CAA6B,MAA7B,CAAoC,GAApC;AACH;;;gCAGG,C,EACA,gB,EACA,iB,EACA,iB,EACA,a,EACF;AAAA;;AACE,UAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAnB;AACA,MAAA,YAAY,CAAC,SAAb,GAAyB,8BAAzB;AAEA,UAAI,iBAAiB,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAxB;AACA,MAAA,iBAAiB,CAAC,SAAlB,GAA8B,wBAA9B;AACA,MAAA,YAAY,CAAC,WAAb,CAAyB,iBAAzB;AAEA,UAAI,IAAI,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAX;AACA,MAAA,IAAI,CAAC,SAAL,GAAiB,uBAAjB;AACA,MAAA,IAAI,CAAC,WAAL,GAAmB,gBAAgB,CAAC,IAApC;AACA,MAAA,iBAAiB,CAAC,WAAlB,CAA8B,IAA9B;AAEA,UAAI,KAAK,GAAG,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,MAAA,KAAK,CAAC,SAAN,GAAkB,wBAAlB;AACA,MAAA,KAAK,CAAC,WAAN,GAAoB,gBAAgB,CAAC,KAArC;AACA,MAAA,iBAAiB,CAAC,WAAlB,CAA8B,KAA9B;AAEA,WAAK,aAAL,CAAmB,WAAnB,CAA+B,YAA/B;AAEA,UAAI,KAAK,GAAG,CAAC,GAAG,KAAK,gBAAT,GAA4B,IAAI,CAAC,EAA7C;AACA,UAAI,CAAC,GAAG,EAAE,CAAC,GAAG,GAAN,IAAa,GAArB,CArBF,CAuBE;;AACA,UAAM,UAAU,GAAG,IAAI,KAAK,CAAC,QAAV,EAAnB;AACA,UAAM,OAAO,GAAG,IAAI,KAAK,CAAC,aAAV,GAA0B,IAA1B,CACZ,KAAK,sBAAL,GAA8B,gBAAgB,CAAC,KADnC,EAEZ,YAAM;AACF;AACA,YAAM,gBAAgB,GAClB,OAAO,CAAC,KAAR,CAAc,KAAd,GAAsB,OAAO,CAAC,KAAR,CAAc,MADxC;AAEA,QAAA,OAAO,CAAC,KAAR,GAAgB,KAAK,CAAC,cAAtB;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,CAAf,GAAmB,MAAI,CAAC,mBAAL,GAA2B,gBAA9C;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,CAAf,GAAmB,OAAO,IAAI,OAAO,CAAC,MAAR,CAAe,CAA1B,CAAnB;AACH,OATW,CAAhB;AAYA,UAAM,aAAa,GAAG,IAAI,KAAK,CAAC,iBAAV,CAA4B;AAC9C,QAAA,GAAG,EAAE,OADyC;AAE9C,QAAA,WAAW,EAAE;AAFiC,OAA5B,CAAtB;AAKA,MAAA,UAAU,CAAC,QAAX,CAAoB,wBAApB,CAA6C,GAA7C,EAAkD,KAAlD,EAAyD,CAAzD;AAEA,WAAK,MAAL,CAAY,CAAZ,GAAgB,UAAU,CAAC,QAAX,CAAoB,CAApB,GAAwB,CAAxC;AACA,WAAK,MAAL,CAAY,CAAZ,GAAgB,UAAU,CAAC,QAAX,CAAoB,CAApC;AACA,WAAK,MAAL,CAAY,CAAZ,GAAgB,UAAU,CAAC,QAAX,CAAoB,CAApB,GAAwB,CAAxC;AAEA,UAAM,SAAS,GAAG,IAAI,KAAK,CAAC,IAAV,CAAe,iBAAf,EAAkC,iBAAlC,CAAlB;AACA,MAAA,SAAS,CAAC,IAAV,GAAiB,iBAAjB;AACA,UAAM,SAAS,GAAG,IAAI,KAAK,CAAC,IAAV,CAAe,aAAf,EAA8B,aAA9B,CAAlB;AACA,MAAA,SAAS,CAAC,IAAV,GAAiB,YAAjB;AACA,MAAA,UAAU,CAAC,IAAX,0BAAkC,gBAAgB,CAAC,KAAnD,sBAAoE,CAApE;AAEA,MAAA,UAAU,CAAC,GAAX,CAAe,SAAf;AACA,MAAA,UAAU,CAAC,GAAX,CAAe,SAAf;AACA,WAAK,KAAL,CAAW,GAAX,CAAe,UAAf;AAEA,MAAA,UAAU,CAAC,QAAX,CAAoB,wBAApB,CAA6C,GAA7C,EAAkD,KAAlD,EAAyD,CAAzD;AAEA,MAAA,UAAU,CAAC,MAAX,CAAkB,KAAK,MAAvB;AACA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,UAArB;AACH;;;iCAEY;AAAA;;AACT,UAAM,IAAI,GAAG,IAAb;AACA,UAAI,aAAa,GAAG,KAAK,eAAL,CAAqB,WAAzC;AAEA,WAAK,MAAL,GAAc,IAAI,eAAJ,CAAW,KAAK,MAAhB,EAAwB;AAClC,QAAA,IAAI,EAAE,KAD4B;AAElC,QAAA,aAAa,EAAE,CAFmB;AAGlC;AACA,QAAA,cAAc,EAAE,IAJkB;AAKlC,QAAA,KAAK,EAAE,GAL2B;AAMlC,QAAA,UAAU,EAAE,IANsB;AAOlC,QAAA,mBAAmB,EAAE,IAPa;AAQlC,QAAA,iBAAiB,EAAE,IARe;AASlC,QAAA,UAAU,EAAE,IATsB;AAUlC;AACA,QAAA,QAAQ,EAAE,IAXwB;AAYlC,QAAA,cAAc,EAAE,IAZkB;AAalC,QAAA,gBAAgB,EAAE,IAbgB;AAclC,QAAA,qBAAqB,EAAE,CAdW;AAelC,QAAA,6BAA6B,EAAE,CAfG;AAgBlC,QAAA,sBAAsB,EAAE,IAhBU;AAiBlC,QAAA,2BAA2B,EAAE,CAjBK;AAkBlC,QAAA,uBAAuB,EAAE,IAlBS;AAmBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAA,UAAU,EAAE;AACR,UAAA,EAAE,EAAE,yBADI;AAER,UAAA,SAAS,EAAE,IAFH;AAGR,UAAA,YAAY,EAAE,sBAAC,KAAD,EAAQ,SAAR,EAAsB;AAChC,yEAAqD,SAArD,gBAAmE,MAAI,CAAC,aAAL,CAAmB,KAAnB,EAA0B,IAA7F;AACH;AALO,SA3BsB;AAkClC,QAAA,EAAE,EAAE;AACA,UAAA,QAAQ,EAAE,oBAAY;AAClB,gBAAI,MAAM,GAAG,IAAb;;AAEA,uBAAK,EAAL,CAAQ,IAAI,CAAC,WAAb,EAA0B;AACtB,cAAA,CAAC,EAAE,MAAM,CAAC,QAAP,GAAkB;AADC,aAA1B;;AAIA,uBAAK,EAAL,CAAQ,IAAI,CAAC,aAAL,CAAmB,QAA3B,EAAqC;AACjC,cAAA,QAAQ,EAAE,GADuB;AAEjC,cAAA,IAAI,EAAE,YAF2B;AAGjC,cAAA,CAAC,EACG,CAAC,MAAM,CAAC,MAAP,CAAc,MAAd,GAAuB,CAAxB,IACA,IAAI,CAAC,gBADL,GAEA,MAAM,CAAC,QAFP,GAGA,IAAI,CAAC;AAPwB,aAArC;;AAUA,uBAAK,EAAL,CAAQ,IAAI,CAAC,aAAL,CAAmB,QAA3B,EAAqC;AACjC,cAAA,QAAQ,EAAE,CADuB;AAEjC,cAAA,IAAI,EAAE,YAF2B;AAGjC,cAAA,CAAC,EACG,IAAI,CAAC,4BAAL,GACA,CAAC,MAAM,CAAC,MAAP,CAAc,MAAd,GAAuB,CAAxB,IACA,IAAI,CAAC,iBADL,GAEA,MAAM,CAAC;AAPsB,aAArC;AASH,WA3BD;AA4BA,UAAA,IAAI,EAAE,gBAAM;AACR;AACA,YAAA,UAAU,CAAC,YAAM;AACb,cAAA,aAAa,GAAG,MAAI,CAAC,eAAL,CAAqB,WAArC;AACH,aAFS,EAEP,GAFO,CAAV;AAGH;AAjCD;AAlC8B,OAAxB,CAAd;AAsEH;;;0BAEK;AACF,UAAI,UAAU,GAAG,IAAI,sBAAJ,CAAe,KAAK,KAApB,EAA2B,KAAK,MAAhC,CAAjB;AAEA,UAAI,SAAS,GAAG,IAAI,oBAAJ,CAAc,KAAK,KAAnB,EAA0B,KAAK,MAA/B,EAAuC;AACnD,QAAA,KAAK,EAAE,KAAK,QADuC;AAEnD,QAAA,MAAM,EAAE,KAAK;AAFsC,OAAvC,CAAhB;AAKA,UAAM,QAAQ,GAAG,IAAI,8BAAJ,CAAmB,KAAK,cAAxB,CAAjB;AAEA,MAAA,QAAQ,CAAC,OAAT,CAAiB,UAAjB;AACA,MAAA,QAAQ,CAAC,OAAT,CAAiB,SAAjB;AAEA,WAAK,cAAL,CAAoB,QAApB,GAA+B,QAA/B;AACA,WAAK,cAAL,CAAoB,KAApB,GAA4B,SAA5B;AACH;;;gCAEW;AAAA;;AACR,MAAA,MAAM,CAAC,gBAAP,CAAwB,WAAxB,EAAqC,UAAC,EAAD,EAAQ;AACzC,QAAA,MAAI,CAAC,KAAL,CAAW,CAAX,GACK,KAAK,MAAI,CAAC,QAAX,IAAwB,EAAE,CAAC,OAAH,GAAa,MAAI,CAAC,QAAL,GAAgB,CAArD,CADJ;AAEA,QAAA,MAAI,CAAC,KAAL,CAAW,CAAX,GACK,KAAK,MAAI,CAAC,SAAX,IAAyB,EAAE,CAAC,OAAH,GAAa,MAAI,CAAC,SAAL,GAAiB,CAAvD,CADJ;;AAGA,mBAAK,EAAL,CAAQ,MAAI,CAAC,MAAL,CAAY,QAApB,EAA8B;AAC1B,UAAA,CAAC,EAAE,MAAI,CAAC,KAAL,CAAW,CADY;AAE1B,UAAA,CAAC,EAAE,MAAI,CAAC,KAAL,CAAW,CAFY;AAG1B,UAAA,QAAQ,EAAE,GAHgB;AAI1B,UAAA,IAAI,EAAE;AAJoB,SAA9B;;AAOA,mBAAK,EAAL,CAAQ,MAAI,CAAC,MAAb,EAAqB;AACjB,UAAA,CAAC,EAAE,CAAC,MAAI,CAAC,KAAL,CAAW,CAAZ,GAAgB,CADF;AAEjB,UAAA,CAAC,EAAE,MAAI,CAAC,KAAL,CAAW,CAAX,GAAe,CAFD;AAGjB,UAAA,QAAQ,EAAE,CAHO;AAIjB,UAAA,IAAI,EAAE;AAJW,SAArB;AAMH,OAnBD;AAoBH;;;iCAEY;AAAA;;AACT,UAAI,OAAO,GAAG,IAAI,KAAK,CAAC,aAAV,GAA0B,IAA1B,CACV,KAAK,sBAAL,GAA8B,yBADpB,EAEV,YAAM;AACF;AACA,YAAM,gBAAgB,GAClB,OAAO,CAAC,KAAR,CAAc,KAAd,GAAsB,OAAO,CAAC,KAAR,CAAc,MADxC;AAEA,QAAA,OAAO,CAAC,KAAR,GAAgB,KAAK,CAAC,cAAtB;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,CAAf,GAAmB,MAAI,CAAC,mBAAL,GAA2B,gBAA9C;AACA,QAAA,OAAO,CAAC,MAAR,CAAe,CAAf,GAAmB,OAAO,IAAI,OAAO,CAAC,MAAR,CAAe,CAA1B,CAAnB;AACH,OATS,CAAd;AAYA,UAAI,UAAU,GAAG,IAAI,KAAK,CAAC,iBAAV,CAA4B;AACzC,QAAA,GAAG,EAAE;AADoC,OAA5B,CAAjB;AAIA,UAAM,UAAU,GAAG,IAAI,KAAK,CAAC,aAAV,CAAwB,IAAxB,EAA8B,IAA9B,EAAoC,CAApC,EAAuC,CAAvC,CAAnB;AACA,UAAM,EAAE,GAAG,IAAI,KAAK,CAAC,IAAV,CAAe,UAAf,EAA2B,UAA3B,CAAX;AACA,MAAA,EAAE,CAAC,QAAH,CAAY,GAAZ,CAAgB,CAAhB,EAAmB,GAAnB,EAAwB,CAAC,IAAzB;AACA,WAAK,aAAL,CAAmB,GAAnB,CAAuB,EAAvB;AACH;;;sCAEiB;AAAA;;AACd,UAAI,KAAK,MAAL,IAAe,IAAnB,EAAyB;AACrB;AACH;;AAHa,iCAKL,CALK;AAMV,QAAA,MAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,CAAnB,EAAsB,gBAAtB,CAAuC,OAAvC,EAAgD,YAAM;AAClD,cAAI,CAAC,MAAI,CAAC,WAAV,EAAuB;AACnB,YAAA,MAAI,CAAC,SAAL;;AACA,YAAA,MAAI,CAAC,cAAL,CAAoB,MAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,CAAnB,CAApB,EAA2C,CAA3C;;AACA,YAAA,MAAI,CAAC,SAAL,CAAe,CAAf;AACH;AACJ,SAND;AANU;;AAKd,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,MAAL,CAAY,MAAZ,CAAmB,MAAvC,EAA+C,CAAC,EAAhD,EAAoD;AAAA,cAA3C,CAA2C;AAQnD;;AAED,WAAK,UAAL,CAAgB,gBAAhB,CAAiC,OAAjC,EAA0C,YAAM;AAC5C,YAAI,MAAI,CAAC,WAAT,EAAsB;AAClB,UAAA,MAAI,CAAC,SAAL;;AACA,UAAA,MAAI,CAAC,UAAL;;AACA,UAAA,MAAI,CAAC,cAAL;AACH;AACJ,OAND;AAQA,MAAA,MAAM,CAAC,gBAAP,CAAwB,OAAxB,EAAiC,UAAC,EAAD,EAAQ;AACrC,YAAI,EAAE,CAAC,GAAH,KAAW,QAAX,IAAuB,MAAI,CAAC,WAAhC,EAA6C;AACzC,UAAA,MAAI,CAAC,SAAL;;AACA,UAAA,MAAI,CAAC,UAAL;;AACA,UAAA,MAAI,CAAC,cAAL;AACH;AACJ,OAND;AAOH;;;8BAES,K,EAAO;AAAA;;AACb,WAAK,WAAL,GAAmB,IAAnB;;AACA,iBAAK,EAAL,CAAQ,KAAK,KAAb,EAAoB;AAChB,QAAA,SAAS,EAAE,CADK;AAEhB,QAAA,KAAK,EAAE,GAFS;AAGhB,QAAA,UAAU,EAAE,sBAAM;AACd,UAAA,MAAI,CAAC,KAAL,CAAW,SAAX,CAAqB,GAArB,CAAyB,WAAzB;AACH;AALe,OAApB;;AAQA,WAAK,SAAL,CAAe,SAAf,GAA2B,KAAK,aAAL,CAAmB,KAAnB,EAA0B,IAArD;AACA,WAAK,UAAL,CAAgB,SAAhB,GAA4B,KAAK,aAAL,CAAmB,KAAnB,EAA0B,KAAtD;AACA,WAAK,YAAL,CAAkB,SAAlB,GAA8B,KAAK,aAAL,CAAmB,KAAnB,EAA0B,IAAxD;;AAEA,iBAAK,EAAL,CAAQ,CAAC,yBAAD,EAA4B,cAA5B,EAA4C,KAAK,MAAL,CAAY,MAAxD,EAAgE,KAAK,eAArE,CAAR,EAA+F;AAC3F,QAAA,SAAS,EAAE,CADgF;AAE3F,QAAA,QAAQ,EAAE;AAFiF,OAA/F;AAIH;;;iCAEY;AACT,WAAK,WAAL,GAAmB,KAAnB;AACA,WAAK,SAAL,CAAe,SAAf,GAA2B,EAA3B;AACA,WAAK,UAAL,CAAgB,SAAhB,GAA4B,EAA5B;AACA,WAAK,YAAL,CAAkB,SAAlB,GAA8B,EAA9B;AACA,WAAK,KAAL,CAAW,SAAX,CAAqB,MAArB,CAA4B,WAA5B;;AAEA,iBAAK,EAAL,CAAQ,KAAK,KAAb,EAAoB;AAChB,QAAA,SAAS,EAAE;AADK,OAApB;;AAIA,iBAAK,EAAL,CAAQ,CAAC,yBAAD,EAA4B,cAA5B,EAA4C,KAAK,MAAL,CAAY,MAAxD,EAAgE,KAAK,eAArE,CAAR,EAA+F;AAC3F,QAAA,SAAS,EAAE,CADgF;AAE3F,QAAA,QAAQ,EAAE;AAFiF,OAA/F;AAIH;;;gCAEW;AACR,UAAM,6BAA6B,GAAG,KAAK,4BAAL,GAAoC,CAAC,KAAK,MAAL,CAAY,MAAZ,CAAmB,MAAnB,GAA4B,CAA7B,IAAkC,KAAK,iBAAvC,GAA2D,KAAK,MAAL,CAAY,QAAjJ;;AAEA,UAAI,KAAK,WAAT,EAAsB;AAClB,mBAAK,EAAL,CAAQ,KAAK,MAAL,CAAY,QAApB,EAA8B;AAC1B,UAAA,QAAQ,EAAE,GADgB;AAE1B,UAAA,CAAC,EAAE,KAAK,sBAFkB;AAG1B,UAAA,IAAI,EAAE;AAHoB,SAA9B;;AAMA,mBAAK,EAAL,CAAQ,KAAK,aAAL,CAAmB,QAA3B,EAAqC;AACjC,UAAA,QAAQ,EAAE,GADuB;AAEjC,UAAA,CAAC,EAAE,6BAF8B;AAGjC,UAAA,IAAI,EAAE;AAH2B,SAArC;;AAMA,mBAAK,EAAL,CAAQ,KAAK,cAAL,CAAoB,KAApB,CAA0B,QAA1B,CAAmC,OAAnC,CAAR,EAAqD;AACjD,UAAA,QAAQ,EAAE,GADuC;AAEjD,UAAA,KAAK,EAAE,GAF0C;AAGjD,UAAA,IAAI,EAAE;AAH2C,SAArD;;AAMA;AACH;;AAED,iBAAK,EAAL,CAAQ,KAAK,MAAL,CAAY,QAApB,EAA8B;AAC1B,QAAA,QAAQ,EAAE,GADgB;AAE1B,QAAA,CAAC,EAAE,GAFuB;AAG1B,QAAA,IAAI,EAAE;AAHoB,OAA9B;;AAMA,iBAAK,EAAL,CAAQ,KAAK,aAAL,CAAmB,QAA3B,EAAqC;AACjC,QAAA,QAAQ,EAAE,GADuB;AAEjC,QAAA,CAAC,EAAE,6BAA6B,GAAG,EAFF;AAGjC,QAAA,IAAI,EAAE;AAH2B,OAArC;;AAMA,iBAAK,EAAL,CAAQ,KAAK,cAAL,CAAoB,KAApB,CAA0B,QAA1B,CAAmC,OAAnC,CAAR,EAAqD;AACjD,QAAA,QAAQ,EAAE,GADuC;AAEjD,QAAA,KAAK,EAAE,GAF0C;AAGjD,QAAA,IAAI,EAAE;AAH2C,OAArD;AAKH;;;mCAEc,K,EAAO,K,EAAO;AACzB,WAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAC,KAAD,EAAQ,CAAR,EAAc;AAClC,YAAI,CAAC,KAAK,KAAV,EAAiB;AACb,cAAI,KAAK,CAAC,QAAN,CAAe,CAAf,CAAJ,EAAuB;AACnB,uBAAK,EAAL,CAAQ,KAAK,CAAC,QAAN,CAAe,CAAf,EAAkB,QAA1B,EAAoC;AAChC,cAAA,OAAO,EAAE;AADuB,aAApC;AAGH;;AAED,cAAI,KAAK,CAAC,QAAN,CAAe,CAAf,CAAJ,EAAuB;AACnB,uBAAK,EAAL,CAAQ,KAAK,CAAC,QAAN,CAAe,CAAf,EAAkB,QAA1B,EAAoC;AAChC,cAAA,OAAO,EAAE;AADuB,aAApC;AAGH;AACJ;AACJ,OAdD;AAeH;;;qCAEgB;AACb,WAAK,UAAL,CAAgB,OAAhB,CAAwB,UAAC,KAAD,EAAW;AAC/B,YAAI,KAAK,CAAC,QAAN,CAAe,CAAf,CAAJ,EAAuB;AACnB,qBAAK,EAAL,CAAQ,KAAK,CAAC,QAAN,CAAe,CAAf,EAAkB,QAA1B,EAAoC;AAChC,YAAA,OAAO,EAAE;AADuB,WAApC;AAGH;;AAED,YAAI,KAAK,CAAC,QAAN,CAAe,CAAf,CAAJ,EAAuB;AACnB,qBAAK,EAAL,CAAQ,KAAK,CAAC,QAAN,CAAe,CAAf,EAAkB,QAA1B,EAAoC;AAChC,YAAA,OAAO,EAAE;AADuB,WAApC;AAGH;AACJ,OAZD;AAaH;;;;;;;;;;;;;;;;ACjqBL;;AACA;;;;;;;;AAEA,WAAK,cAAL,CAAoB,4BAApB;;IAEqB,U;AACjB,wBAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,KAAK,EAAE,iBADA;AAEP,MAAA,IAAI,EAAE,cAFC;AAGP,MAAA,iBAAiB,EAAE,yBAHZ;AAIP,MAAA,MAAM,EAAE;AACJ,QAAA,SAAS,EAAE;AADP;AAJD,KAAX;AASA,SAAK,KAAL,GAAa,QAAQ,CAAC,aAAT,CAAuB,KAAK,GAAL,CAAS,KAAhC,CAAb;AACH;;;;2BAEM;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACA,WAAK,0BAAL;AACH;;;iDAC4B;AAAA;;AACzB,WAAK,KAAL,CAAW,gBAAX,CAA4B,YAA5B,EAA0C,YAAM;AAC5C,QAAA,KAAI,CAAC,KAAL,CAAW,KAAX;;AAEA,YAAI,UAAU,GAAG,WAAK,EAAL,CAAQ,KAAI,CAAC,KAAb,EAAoB;AACjC,UAAA,QAAQ,EAAE,KAAI,CAAC,KAAL,CAAW,QADY;AAEjC,UAAA,WAAW,EAAE,KAAI,CAAC,KAAL,CAAW,QAFS;AAGjC,UAAA,IAAI,EAAE,MAH2B;AAIjC,UAAA,SAAS,EAAE,IAJsB;AAKjC,UAAA,KAAK,EAAE,IAL0B;AAMjC,UAAA,QAAQ,EAAE,oBAAM,CACZ;AACA;AACH;AATgC,SAApB,CAAjB;;AAYA,qCAAc,MAAd,CAAqB;AACjB;AACA;AACA,UAAA,SAAS,EAAE,UAHM;AAIjB,UAAA,KAAK,EAAE;AAJU,SAArB;AAMH,OArBD;AAsBH;;;;;;;;;;;;;;;;;;;;;;IC9CgB,c;AACjB;;;AAGA,4BAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,IAAI,EAAE,MADC;AAEP,MAAA,MAAM,EAAE;AACJ,QAAA,OAAO,EAAE;AADL;AAFD,KAAX;AAOA,QAAM,eAAe,GAAG,CACpB,2BADoB,EAEpB,cAFoB,EAGpB,gBAHoB,EAIpB,mBAJoB,EAKpB,oBALoB,EAMpB,2BANoB,EAOpB,mBAPoB,EAQtB,IARsB,CAQjB,GARiB,CAAxB;AAUA,SAAK,IAAL,GAAY,QAAQ,CAAC,oBAAT,CAA8B,KAAK,GAAL,CAAS,IAAvC,EAA6C,CAA7C,CAAZ;AAEA,IAAA,OAAO,CAAC,IAAR,CAAa,sCAAb,EAAqD,eAArD;AACH;;;;2BAEM;AACH;AACA,WAAK,cAAL;AACH;;;qCAEgB;AAAA;;AACb,MAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,UAAC,EAAD,EAAQ;AACvC,YAAI,EAAE,CAAC,OAAH,KAAe,EAAf,IAAqB,EAAE,CAAC,MAA5B,EAAoC;AAChC,cAAI,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,QAApB,CAA6B,KAAI,CAAC,GAAL,CAAS,MAAT,CAAgB,OAA7C,CAAJ,EAA2D;AACvD,YAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,MAApB,CAA2B,KAAI,CAAC,GAAL,CAAS,MAAT,CAAgB,OAA3C;AACH,WAFD,MAEO;AACH,YAAA,KAAI,CAAC,IAAL,CAAU,SAAV,CAAoB,GAApB,CAAwB,KAAI,CAAC,GAAL,CAAS,MAAT,CAAgB,OAAxC;AACH;AACJ;AACJ,OARD;AASH;;;;;;;;;;;;;;;;;;;;;;IC1CgB,U;AACjB;;;AAGA,wBAAc;AAAA;;AACV,SAAK,GAAL,GAAW;AACP,MAAA,IAAI,EAAE;AADC,KAAX;AAIA,SAAK,WAAL,GAAmB;AACf,MAAA,cAAc,EAAE,MADD;AACS;AACxB,MAAA,SAAS,EAAE,IAFI;AAEE;AACjB,MAAA,WAAW,EAAE,EAHE;AAIf,MAAA,SAAS,EAAE,wBAJI;AAKf,MAAA,aAAa,EAAE,yBALA;AAMf,MAAA,WAAW,EAAE,CANE;AAMC;AAChB,MAAA,WAAW,EAAE;AAPE,KAAnB;AAUA,QAAM,eAAe,GAAG,CACpB,2BADoB,EAEpB,cAFoB,EAGpB,gBAHoB,EAIpB,mBAJoB,EAKpB,oBALoB,EAMpB,2BANoB,EAOpB,mBAPoB,EAQtB,IARsB,CAQjB,GARiB,CAAxB;AAUA,IAAA,OAAO,CAAC,IAAR,CAAa,iCAAb,EAAgD,eAAhD;AAEA,SAAK,IAAL,GAAY,IAAZ;AAEA,SAAK,WAAL,GACI,CAAC,KAAK,WAAL,CAAiB,SAAjB,GACG,CAAC,KAAK,WAAL,CAAiB,WAAjB,GAA+B,CAAhC,IACI,KAAK,WAAL,CAAiB,WAFzB,IAGA,KAAK,WAAL,CAAiB,WAJrB;AAMA,SAAK,qBAAL,aACK,KAAK,WAAL,GAAmB,KAAK,WAAL,CAAiB,SAArC,GAAkD,GADtD;AAIA,SAAK,qBAAL,aACK,KAAK,WAAL,CAAiB,WAAjB,GAA+B,KAAK,WAAL,CAAiB,SAAjD,GAA8D,GADlE;AAGH;;;;2BAEM;AACH,MAAA,OAAO,CAAC,GAAR,CAAY,mBAAZ;AACA,WAAK,QAAL;AACA,WAAK,gBAAL;AACH;;;+BAEU;AACP;AACA,WAAK,IAAL,GAAY,QAAQ,CAAC,aAAT,CAAuB,KAAvB,CAAZ;AACA,WAAK,IAAL,CAAU,EAAV,GAAe,KAAK,GAAL,CAAS,IAAxB,CAHO,CAKP;;AACA,WAAK,IAAL,CAAU,KAAV,CAAgB,OAAhB,uEAEe,KAAK,WAAL,CAAiB,cAFhC,mGAKiB,KAAK,WAAL,CAAiB,SALlC;;AAcA,UAAI,CAAC,KAAK,WAAL,CAAiB,WAAlB,GAAgC,CAApC,EAAuC;AACnC,aAAK,IAAL,CAAU,KAAV,CAAgB,UAAhB,GAA6B,MAA7B;AACH,OAtBM,CAwBP;;;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,WAAd,CAA0B,KAAK,IAA/B,EAzBO,CA2BP;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,WAAL,CAAiB,WAArC,EAAkD,CAAC,EAAnD,EAAuD;AACnD,YAAI,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAb;AACA,aAAK,IAAL,CAAU,WAAV,CAAsB,MAAtB;AAEA,QAAA,MAAM,CAAC,KAAP,CAAa,OAAb,+GAGwB,KAAK,WAAL,CAAiB,aAHzC,uDAI6B,KAAK,WAAL,CAAiB,SAJ9C;;AAOA,YAAI,KAAK,WAAL,CAAiB,WAAjB,GAA+B,CAAnC,EAAsC;AAClC,UAAA,MAAM,CAAC,KAAP,CAAa,WAAb,uBAAwC,KAAK,WAAL,CAAiB,SAAzD;AACH,SAFD,MAEO;AACH,eAAK,IAAL,CAAU,KAAV,CAAgB,WAAhB,uBAA2C,KAAK,WAAL,CAAiB,SAA5D;AACH;;AAED,YAAI,KAAK,WAAL,CAAiB,WAAjB,KAAiC,IAArC,EAA2C;AACvC,UAAA,MAAM,CAAC,KAAP,CAAa,WAAb,aAA8B,KAAK,WAAL,CAAiB,WAA/C;AACH,SAFD,MAEO;AACH,UAAA,MAAM,CAAC,KAAP,CAAa,WAAb,GAA2B,KAAK,qBAAhC;AACA,UAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,KAAK,qBAA1B;AACH;AACJ;;AAED,WAAK,IAAL,CAAU,SAAV,CAAoB,KAApB,CAA0B,WAA1B,GAAwC,CAAxC;AACH;AAED;;;;;;uCAGmB;AAAA;;AACf,MAAA,QAAQ,CAAC,gBAAT,CAA0B,OAA1B,EAAmC,UAAC,EAAD,EAAQ;AACvC,YAAI,EAAE,CAAC,OAAH,KAAe,EAAf,IAAqB,EAAE,CAAC,MAA5B,EAAoC;AAChC,cAAI,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,OAAhB,KAA4B,MAAhC,EAAwC;AACpC,YAAA,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,OAAhB,GAA0B,MAA1B;AACH,WAFD,MAEO;AACH,YAAA,KAAI,CAAC,IAAL,CAAU,KAAV,CAAgB,OAAhB,GAA0B,MAA1B;AACH;AACJ;AACJ,OARD;AASH;;;;;;;;;;;AC3HL;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,YAAD,EAAkB;AAC5B,MAAI,QAAQ,CAAC,UAAT,KAAwB,SAA5B,EAAuC;AACnC;;;AAGA,IAAA,YAAY;AACf,GALD,MAKO,IAAI,QAAQ,CAAC,gBAAb,EAA+B;AAClC;;;AAGA,IAAA,QAAQ,CAAC,gBAAT,CAA0B,kBAA1B,EAA8C,YAA9C;AACH,GALM,MAKA;AACH;;;AAGA,IAAA,QAAQ,CAAC,WAAT,CAAqB,oBAArB,EAA2C,YAAY;AACnD,UAAI,QAAQ,CAAC,UAAT,KAAwB,UAA5B,EAAwC;AACpC,QAAA,YAAY;AACf;AACJ,KAJD;AAKH;AACJ,CArBD;AAuBA;;;;;AAGA,KAAK,CAAC,YAAM;AACR,MAAM,OAAO,GAAG,CACZ,2BADY,EAEZ,cAFY,EAGZ,gBAHY,EAIZ,mBAJY,EAKZ,oBALY,EAMZ,2BANY,EAOZ,mBAPY,EAQd,IARc,CAQT,GARS,CAAhB;AAUA,EAAA,OAAO,CAAC,IAAR,CAAa,uBAAb,EAAsC,OAAtC;AAEA,MAAM,UAAU,GAAG,IAAI,mBAAJ,EAAnB;AACA,EAAA,UAAU,CAAC,IAAX;AAEA,MAAM,cAAc,GAAG,IAAI,uBAAJ,EAAvB;AACA,EAAA,cAAc,CAAC,IAAf;AAEA,MAAM,KAAK,GAAG,IAAI,cAAJ,EAAd;AACA,EAAA,KAAK,CAAC,IAAN;AAEA,MAAM,UAAU,GAAG,IAAI,6BAAJ,EAAnB;AACA,EAAA,UAAU,CAAC,IAAX;;AAEA,MAAI,QAAQ,CAAC,cAAT,CAAwB,iBAAxB,MAA+C,IAAnD,EAAyD;AACrD,QAAM,cAAc,GAAG,IAAI,uBAAJ,EAAvB;AACH;;AAED,MAAI,QAAQ,CAAC,cAAT,CAAwB,aAAxB,MAA2C,IAA/C,EAAqD;AACjD,QAAM,UAAU,GAAG,IAAI,mBAAJ,EAAnB;AACA,IAAA,UAAU,CAAC,IAAX;AACH;;AAED,MAAI,QAAQ,CAAC,cAAT,CAAwB,iBAAxB,MAA+C,IAAnD,EAAyD;AACrD,QAAM,cAAc,GAAG,IAAI,uBAAJ,EAAvB;AACA,IAAA,cAAc,CAAC,IAAf;AACH;;AAED,MAAI,QAAQ,CAAC,cAAT,CAAwB,UAAxB,MAAwC,IAA5C,EAAkD;AAC9C,QAAM,UAAU,GAAG,IAAI,mBAAJ,EAAnB;AACA,IAAA,UAAU,CAAC,IAAX;AACH;AACJ,CA3CI,CAAL","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class Dummy {\n    constructor() {}\n\n    init() {\n        console.log(\"Loaded!\");\n    }\n}\n","import { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class GradientBg {\n    constructor() {\n        this.DOM = {\n            bgContainer: \".js-page-bg\",\n            bg: \".js-page-bg-bg\",\n            bgGradientMouseMove: \".js-page-bg-gradient-mousemove\",\n            bgChangeTrigger: \".js-page-bg-change-trigger\",\n            states: {},\n        };\n\n        this.bg = document.querySelector(this.DOM.bg);\n        this.bgChangeTrigger = document.querySelectorAll(\n            this.DOM.bgChangeTrigger,\n        );\n        this.bgGradientMouseMove = document.querySelector(\n            this.DOM.bgGradientMouseMove,\n        );\n    }\n\n    init() {\n        console.log(\"GradientBg init()\");\n\n        this.bgColorChange();\n        this.onMouseMove();\n    }\n\n    bgColorChange() {\n        for (let i = 0, l = this.bgChangeTrigger.length; i < l; i++) {\n            let bgChange = gsap.to(this.bg, {\n                duration: 0.8,\n                autoAlpha: this.bgChangeTrigger[i].getAttribute(\n                    \"data-bg-opacity\",\n                ),\n                ease: \"none\",\n                onStart: () => {},\n                onUpdate: () => {},\n            });\n\n            ScrollTrigger.create({\n                trigger: this.bgChangeTrigger[i],\n                animation: bgChange,\n                // markers: true,\n                start: \"top bottom\",\n                end: \"+=200\",\n                scrub: true,\n                onEnter: () => {\n                    console.log(\"enter\");\n                },\n                onEnterBack: () => {\n                    console.log(\"enterBack\");\n                },\n                onLeave: () => {\n                    console.log(\"leave\");\n                },\n                onLeaveBack: () => {\n                    console.log(\"leaveBack\");\n                },\n            });\n        }\n    }\n\n    onMouseMove() {\n        document.addEventListener(\"mousemove\", (evt) => {\n            let x = evt.clientX / innerWidth;\n            let y = evt.clientY / innerHeight;\n\n            let decimalX = evt.clientX / window.innerWidth - 0.5;\n            let decimalY = evt.clientY / window.innerHeight - 0.5;\n\n            gsap.to(\"html\", {\n                duration: 1.4,\n                \"--mouse-x\": x,\n                ease: \"power3.easIn\",\n            });\n\n            gsap.to(\"html\", {\n                duration: 1.4,\n                \"--mouse-y\": y,\n                ease: \"power3.easIn\",\n            });\n\n            gsap.to(this.bgGradientMouseMove, {\n                duration: 1.4,\n                rotationY: 5 * decimalY,\n                x: 50 * decimalX,\n                rotationX: 2.5 * decimalX,\n                y: -100 * decimalY,\n                ease: \"quad.easOut\",\n                transformPerspective: 700,\n                transformOrigin: \"center\",\n            });\n        });\n    }\n}\n","/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n\n        this.DOM = {\n            navigation: \".js-navigation-wrapper\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n    /**\n     *\n     */\n    init() {\n        console.log(\"Navigation init()\");\n\n        if (this.navigation !== null) {\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(\n                this.DOM.states.navigationScrolled,\n            );\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","import { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class ScrollProgress {\n    constructor() {\n        this.DOM = {\n            scrollProgress: \".js-scroll-progress\",\n            scrollProgressItem: \".js-scroll-progress-item\",\n            scrollProgressTrigger: \".js-scroll-progress-trigger\",\n            states: {\n                isActive: \"is-active\",\n            },\n        };\n\n        this.scrollProgress = document.querySelector(this.DOM.scrollProgress);\n        this.scrollProgressItems = document.querySelectorAll(\n            this.DOM.scrollProgressItem,\n        );\n        this.scrollProgressTriggers = document.querySelectorAll(\n            this.DOM.scrollProgressTrigger,\n        );\n    }\n\n    init() {\n        console.log(\"ScrollProgress init()\");\n\n        for (let i = 0, l = this.scrollProgressItems.length; i < l; i++) {\n            let progress = gsap.to(this.scrollProgressItems[i], {\n                duration: 1,\n                scaleY: 1,\n                ease: \"none\",\n                onUpdate: () => {\n                    // console.log(\"tutu\");\n                },\n            });\n\n            ScrollTrigger.create({\n                trigger: this.scrollProgressTriggers[i],\n                // markers: true,\n                start: \"top bottom\",\n                end: \"bottom bottom\",\n                animation: progress,\n                scrub: 0.4,\n            });\n        }\n    }\n}\n","import * as THREE from \"three\";\n\nimport {EffectComposer} from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\nimport {BokehPass} from \"three/examples/jsm/postprocessing/BokehPass\";\nimport {GUI} from \"three/examples/jsm/libs/dat.gui.module.js\";\n\nimport {gsap} from \"gsap\";\n\nimport Swiper from \"swiper\";\n\nexport default class TimelineSlider {\n    constructor() {\n        this.DOM = {\n            timeline: \".js-timeline\",\n\n            timelineSlider: \".js-timeline-slider\",\n            timelineSliderWrapper: \".js-timeline-slider-wrapper\",\n            timelineSliderNext: \".js-timeline-slider-next\",\n            timelineSliderPrev: \".js-timeline-slider-previous\",\n            timelineProgressDot: \".js-timeline-pagination-progress-dot\",\n            timelineProgressWrapper: \".js-timeline-pagination-progress-wrapper\",\n\n            popup: \".js-timeline-popup\",\n            popupClose: \".js-timeline-popup-close\",\n            popupYear: \".js-timeline-popup-year\",\n            popupTitle: \".js-timeline-popup-title\",\n            popupContent: \".js-timeline-popup-content\",\n            states: {},\n        };\n\n        this.options = {\n            transitionSpeed: 1000,\n        };\n\n        this.mouse = {\n            x: 0,\n            y: 0,\n        };\n\n        this.winWidth = window.innerWidth;\n        this.winHeight = window.innerHeight;\n\n        this.activeIndex = 0;\n\n        this.timeline = document.querySelector(this.DOM.timeline);\n        this.slider = document.querySelector(this.DOM.timelineSlider);\n        this.progressDot = document.querySelector(this.DOM.timelineProgressDot);\n        this.progressWrapper = document.querySelector(this.DOM.timelineProgressWrapper);\n        this.sliderWrapper = document.querySelector(\n            this.DOM.timelineSliderWrapper,\n        );\n\n        this.popup = document.querySelector(this.DOM.popup);\n        this.popupClose = document.querySelector(this.DOM.popupClose);\n        this.popupYear = document.querySelector(this.DOM.popupYear);\n        this.popupTitle = document.querySelector(this.DOM.popupTitle);\n        this.popupContent = document.querySelector(this.DOM.popupContent);\n\n        this.swiper = null;\n        this.popupOpened = false;\n\n        this.timelineItemsImagePath = \"static/images/\";\n        this.timelineItems = [\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2008\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2009\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2010\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2011\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2012\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2013\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2014\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2015\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2016\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2017\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2018\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2019\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2020\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n        ];\n\n        // this.timelineSliderPrev = document.querySelector(\n        //     this.DOM.timelineSliderPrev,\n        // );\n        // this.timelineSliderNext = document.querySelector(\n        //     this.DOM.timelineSliderNext,\n        // );\n\n        this.camera = null;\n        this.scene = null;\n        this.renderer = null;\n        this.postprocessing = {};\n        this.helixItems = [];\n\n        this.init();\n    }\n\n    init() {\n        console.log(\"TimelineSlider init()\");\n\n        this.scene = new THREE.Scene();\n\n        const options = {\n            camera: {\n                fov: 60,\n                near: 10,\n                far: 3000,\n                posX: -180,\n                posY: 100,\n                posZ: 1080,\n            },\n        };\n\n        this.camera = new THREE.PerspectiveCamera(\n            options.camera.fov,\n            this.winWidth / this.winHeight,\n            options.camera.near,\n            options.camera.far,\n        );\n\n        this.itemRadiusOffset = 0.85;\n\n        this.initialCameraZPosition = 1020;\n\n        this.camera.lookAt(0, 0, 0);\n\n        this.camera.position.x = 0;\n        this.camera.position.y = 0;\n        this.camera.position.z = this.initialCameraZPosition;\n\n        this.initialCameraWrapperPosition = 550;\n        this.initialCameraWrapperRotation = 3.15;\n\n        this.cameraWrapper = new THREE.Object3D();\n        this.cameraWrapper.position.set(\n            0,\n            this.initialCameraWrapperPosition,\n            0,\n        );\n        this.cameraWrapper.rotation.y = this.initialCameraWrapperRotation;\n        this.cameraWrapper.name = \"camera wrapper\";\n        this.cameraWrapper.add(this.camera);\n        this.scene.add(this.cameraWrapper);\n\n        this.vector = new THREE.Vector3();\n\n        const planeBackMaterial = new THREE.MeshBasicMaterial({\n            color: 0x333333,\n            transparent: true,\n        });\n\n        this.geometryAspectRatio = 16 / 9;\n        const planeGeometry = new THREE.PlaneGeometry(330, 186, 1, 1);\n        let planeGeometryBack = planeGeometry.clone();\n        planeGeometryBack.applyMatrix(\n            new THREE.Matrix4().makeRotationY(Math.PI),\n        );\n\n        // create items\n        for (let i = 0, l = this.timelineItems.length; i < l; i++) {\n            this.cretateItem(\n                i,\n                this.timelineItems[i],\n                planeGeometryBack,\n                planeBackMaterial,\n                planeGeometry,\n            );\n        }\n\n        const topOfTheHelix = this.helixItems[0].position.y;\n        const bottomOfTheHelix = this.helixItems[this.helixItems.length - 1].position.y;\n        const helixHeight =\n            Math.abs(bottomOfTheHelix) + Math.abs(topOfTheHelix);\n        this.helixOffsetByItem =\n            helixHeight / (this.helixItems.length - 1);\n\n        // canvas renderer\n        this.canvasRenderer = new THREE.WebGLRenderer();\n        this.canvasRenderer.setPixelRatio(window.devicePixelRatio);\n        this.canvasRenderer.setSize(this.winWidth, this.winHeight);\n        this.timeline.appendChild(this.canvasRenderer.domElement);\n\n        window.addEventListener(\n            \"resize\",\n            () => {\n                this.onWindowResize;\n            },\n            false,\n        );\n\n        this.dof();\n\n        // DAT gui controls\n        const effectController = {\n            focus: 360,\n            aperture: 4.7,\n            maxblur: 0.007,\n        };\n\n        var matChanger = () => {\n            this.postprocessing.bokeh.uniforms[\"focus\"].value =\n                effectController.focus;\n            this.postprocessing.bokeh.uniforms[\"aperture\"].value =\n                effectController.aperture * 0.00001;\n            this.postprocessing.bokeh.uniforms[\"maxblur\"].value =\n                effectController.maxblur;\n        };\n\n        const gui = new GUI();\n        gui.add(effectController, \"focus\", 10.0, 3000.0, 10).onChange(\n            matChanger,\n        );\n        gui.add(effectController, \"aperture\", 0, 10, 0.1).onChange(matChanger);\n        gui.add(effectController, \"maxblur\", 0.0, 0.01, 0.001).onChange(\n            matChanger,\n        );\n        gui.close();\n\n        matChanger();\n        // end DAT gui controls\n\n        this.animate();\n        this.mouseMove();\n\n        // background\n        this.addBgImage();\n\n        this.swiperInit();\n\n        this.popupController();\n    }\n\n    onWindowResize() {\n        this.camera.aspect = this.winWidth / this.winHeight;\n        this.camera.updateProjectionMatrix();\n        this.postprocessing.composer.setSize(this.winWidth, this.winHeight);\n    }\n\n    animate() {\n        requestAnimationFrame(() => this.animate());\n        this.postprocessing.composer.render(0.1);\n    }\n\n    cretateItem(\n        i,\n        timelineLoopItem,\n        planeGeometryBack,\n        planeBackMaterial,\n        planeGeometry,\n    ) {\n        let timelineItem = document.createElement(\"div\");\n        timelineItem.className = \"c-timeline-item swiper-slide\";\n\n        let timelineItemInner = document.createElement(\"div\");\n        timelineItemInner.className = \"c-timeline-item__inner\";\n        timelineItem.appendChild(timelineItemInner);\n\n        let year = document.createElement(\"div\");\n        year.className = \"c-timeline-item__year\";\n        year.textContent = timelineLoopItem.year;\n        timelineItemInner.appendChild(year);\n\n        let title = document.createElement(\"div\");\n        title.className = \"c-timeline-item__title\";\n        title.textContent = timelineLoopItem.title;\n        timelineItemInner.appendChild(title);\n\n        this.sliderWrapper.appendChild(timelineItem);\n\n        let theta = i * this.itemRadiusOffset + Math.PI;\n        let y = -(i * 200) + 600;\n\n        // canvas\n        const planeGroup = new THREE.Object3D();\n        const texture = new THREE.TextureLoader().load(\n            this.timelineItemsImagePath + timelineLoopItem.image,\n            () => {\n                // image position to cover the plane\n                const imageAspectRatio =\n                    texture.image.width / texture.image.height;\n                texture.wrapT = THREE.RepeatWrapping;\n                texture.repeat.x = this.geometryAspectRatio / imageAspectRatio;\n                texture.offset.x = 0.5 * (1 - texture.repeat.x);\n            },\n        );\n\n        const planeMaterial = new THREE.MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n        });\n\n        planeGroup.position.setFromCylindricalCoords(640, theta, y);\n\n        this.vector.x = planeGroup.position.x * 2;\n        this.vector.y = planeGroup.position.y;\n        this.vector.z = planeGroup.position.z * 2;\n\n        const planeBack = new THREE.Mesh(planeGeometryBack, planeBackMaterial);\n        planeBack.name = \"item image back\";\n        const helixItem = new THREE.Mesh(planeGeometry, planeMaterial);\n        helixItem.name = \"item image\";\n        planeGroup.name = `canvas-plane-${timelineLoopItem.title}, index: ${i}`;\n\n        planeGroup.add(helixItem);\n        planeGroup.add(planeBack);\n        this.scene.add(planeGroup);\n\n        planeGroup.position.setFromCylindricalCoords(640, theta, y);\n\n        planeGroup.lookAt(this.vector);\n        this.helixItems.push(planeGroup);\n    }\n\n    swiperInit() {\n        const self = this;\n        let progressWidth = this.progressWrapper.clientWidth;\n\n        this.swiper = new Swiper(this.slider, {\n            loop: false,\n            slidesPerView: 1,\n            // direction: \"vertical\",\n            centeredSlides: true,\n            speed: 800,\n            grabCursor: true,\n            watchSlidesProgress: true,\n            mousewheelControl: true,\n            mousewheel: true,\n            // TODO: @Tomo — proucit malo kaj i kak rade ovi optioni za freeMode\n            freeMode: true,\n            freeModeSticky: true,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumVelocityRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeMinimumVelocity: 0.02,\n            // effect: \"fade\",\n            // fadeEffect: {\n            //     crossFade: true,\n            // },\n            // navigation: {\n            //     nextEl: this.timelineSliderNext,\n            //     prevEl: this.timelineSliderPrev,\n            // },\n            pagination: {\n                el: '.js-timeline-pagination',\n                clickable: true,\n                renderBullet: (index, className) => {\n                    return `<span class=\"c-timeline__pagination-bullet ${className}\">${this.timelineItems[index].year}</span>`;\n                },\n            },\n            on: {\n                progress: function () {\n                    let swiper = this;\n\n                    gsap.to(self.progressDot, {\n                        x: swiper.progress * progressWidth,\n                    });\n\n                    gsap.to(self.cameraWrapper.rotation, {\n                        duration: 0.8,\n                        ease: \"power2.out\",\n                        y:\n                            (swiper.slides.length - 1) *\n                            self.itemRadiusOffset *\n                            swiper.progress +\n                            self.initialCameraWrapperRotation,\n                    });\n\n                    gsap.to(self.cameraWrapper.position, {\n                        duration: 1,\n                        ease: \"power2.out\",\n                        y:\n                            self.initialCameraWrapperPosition -\n                            (swiper.slides.length - 1) *\n                            self.helixOffsetByItem *\n                            swiper.progress,\n                    });\n                },\n                init: () => {\n                    // trebamo timeout zbog doma (dok se ne stvor i paginacia)\n                    setTimeout(() => {\n                        progressWidth = this.progressWrapper.clientWidth;\n                    }, 300);\n                },\n            },\n        });\n    }\n\n    dof() {\n        var renderPass = new RenderPass(this.scene, this.camera);\n\n        var bokehPass = new BokehPass(this.scene, this.camera, {\n            width: this.winWidth,\n            height: this.winHeight,\n        });\n\n        const composer = new EffectComposer(this.canvasRenderer);\n\n        composer.addPass(renderPass);\n        composer.addPass(bokehPass);\n\n        this.postprocessing.composer = composer;\n        this.postprocessing.bokeh = bokehPass;\n    }\n\n    mouseMove() {\n        window.addEventListener(\"mousemove\", (ev) => {\n            this.mouse.x =\n                (20 / this.winWidth) * (ev.clientX - this.winWidth / 2);\n            this.mouse.y =\n                (20 / this.winHeight) * (ev.clientY - this.winHeight / 2);\n\n            gsap.to(this.camera.position, {\n                x: this.mouse.x,\n                y: this.mouse.y,\n                duration: 1.5,\n                ease: \"power3.out\",\n            });\n\n            gsap.to(this.slider, {\n                x: -this.mouse.x * 3,\n                y: this.mouse.y * 3,\n                duration: 1,\n                ease: \"power3.out\",\n            });\n        });\n    }\n\n    addBgImage() {\n        let texture = new THREE.TextureLoader().load(\n            this.timelineItemsImagePath + \"timeline-background.png\",\n            () => {\n                // image position to cover the plane\n                const imageAspectRatio =\n                    texture.image.width / texture.image.height;\n                texture.wrapT = THREE.RepeatWrapping;\n                texture.repeat.x = this.geometryAspectRatio / imageAspectRatio;\n                texture.offset.x = 0.5 * (1 - texture.repeat.x);\n            },\n        );\n\n        let bgMaterial = new THREE.MeshBasicMaterial({\n            map: texture,\n        });\n\n        const bgGeometry = new THREE.PlaneGeometry(6400, 3600, 1, 1);\n        const bg = new THREE.Mesh(bgGeometry, bgMaterial);\n        bg.position.set(0, 200, -1000);\n        this.cameraWrapper.add(bg);\n    }\n\n    popupController() {\n        if (this.swiper == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.swiper.slides.length; i++) {\n            this.swiper.slides[i].addEventListener(\"click\", () => {\n                if (!this.popupOpened) {\n                    this.slideZoom();\n                    this.hideHelixItems(this.swiper.slides[i], i);\n                    this.openPopup(i);\n                }\n            });\n        }\n\n        this.popupClose.addEventListener(\"click\", () => {\n            if (this.popupOpened) {\n                this.slideZoom();\n                this.closePopup();\n                this.showHelixItems();\n            }\n        });\n\n        window.addEventListener(\"keyup\", (ev) => {\n            if (ev.key === \"Escape\" && this.popupOpened) {\n                this.slideZoom();\n                this.closePopup();\n                this.showHelixItems();\n            }\n        });\n    }\n\n    openPopup(index) {\n        this.popupOpened = true;\n        gsap.to(this.popup, {\n            autoAlpha: 1,\n            delay: 0.5,\n            onComplete: () => {\n                this.popup.classList.add(\"is-active\");\n            },\n        });\n\n        this.popupYear.innerText = this.timelineItems[index].year;\n        this.popupTitle.innerText = this.timelineItems[index].title;\n        this.popupContent.innerText = this.timelineItems[index].text;\n\n        gsap.to([\".js-timeline-pagination\", \".js-back-btn\", this.swiper.slides, this.progressWrapper], {\n            autoAlpha: 0,\n            duration: 0.2,\n        });\n    }\n\n    closePopup() {\n        this.popupOpened = false;\n        this.popupYear.innerText = \"\";\n        this.popupTitle.innerText = \"\";\n        this.popupContent.innerText = \"\";\n        this.popup.classList.remove(\"is-active\");\n\n        gsap.to(this.popup, {\n            autoAlpha: 0,\n        });\n\n        gsap.to([\".js-timeline-pagination\", \".js-back-btn\", this.swiper.slides, this.progressWrapper], {\n            autoAlpha: 1,\n            duration: 0.2,\n        });\n    }\n\n    slideZoom() {\n        const currentCameraWrapperYPosition = this.initialCameraWrapperPosition - (this.swiper.slides.length - 1) * this.helixOffsetByItem * this.swiper.progress;\n\n        if (this.popupOpened) {\n            gsap.to(this.camera.position, {\n                duration: 0.8,\n                z: this.initialCameraZPosition,\n                ease: \"power4.inOut\",\n            });\n\n            gsap.to(this.cameraWrapper.position, {\n                duration: 0.8,\n                y: currentCameraWrapperYPosition,\n                ease: \"power4.inOut\",\n            });\n\n            gsap.to(this.postprocessing.bokeh.uniforms[\"focus\"], {\n                duration: 0.8,\n                value: 360,\n                ease: \"power4.inOut\",\n            });\n\n            return;\n        }\n\n        gsap.to(this.camera.position, {\n            duration: 0.8,\n            z: 850,\n            ease: \"power4.out\",\n        });\n\n        gsap.to(this.cameraWrapper.position, {\n            duration: 0.8,\n            y: currentCameraWrapperYPosition + 50,\n            ease: \"power4.out\",\n        });\n\n        gsap.to(this.postprocessing.bokeh.uniforms[\"focus\"], {\n            duration: 0.8,\n            value: 200,\n            ease: \"power4.out\",\n        });\n    }\n\n    hideHelixItems(slide, index) {\n        this.helixItems.forEach((plane, i) => {\n            if (i !== index) {\n                if (plane.children[0]) {\n                    gsap.to(plane.children[0].material, {\n                        opacity: 0,\n                    });\n                }\n\n                if (plane.children[1]) {\n                    gsap.to(plane.children[1].material, {\n                        opacity: 0,\n                    });\n                }\n            }\n        });\n    }\n\n    showHelixItems() {\n        this.helixItems.forEach((plane) => {\n            if (plane.children[0]) {\n                gsap.to(plane.children[0].material, {\n                    opacity: 1,\n                });\n            }\n\n            if (plane.children[1]) {\n                gsap.to(plane.children[1].material, {\n                    opacity: 1,\n                });\n            }\n        });\n    }\n}\n","import { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class VideoScrub {\n    constructor() {\n        this.DOM = {\n            video: \".js-video-scrub\",\n            page: \"#video-scrub\",\n            videoScrubTrigger: \".js-video-scrub-trigger\",\n            states: {\n                isPlaying: \"is-video-playing\",\n            },\n        };\n\n        this.video = document.querySelector(this.DOM.video);\n    }\n\n    init() {\n        console.log(\"VideoScrub init()\");\n        this.gsapScrollTriggerVideoPlay();\n    }\n    gsapScrollTriggerVideoPlay() {\n        this.video.addEventListener(\"loadeddata\", () => {\n            this.video.pause();\n\n            let videoScrub = gsap.to(this.video, {\n                duration: this.video.duration,\n                currentTime: this.video.duration,\n                ease: \"none\",\n                overwrite: true,\n                pause: true,\n                onUpdate: () => {\n                    // console.log(this.video.currentTime);\n                    // console.log(this.video.duration);\n                },\n            });\n\n            ScrollTrigger.create({\n                // trigger: this.DOM.videoScrubTrigger,\n                // markers: true,\n                animation: videoScrub,\n                scrub: 0.1,\n            });\n        });\n    }\n}\n","export default class DarkModeHelper {\n    /**\n     *\n     */\n    constructor() {\n        this.DOM = {\n            body: \"body\",\n            states: {\n                isLight: \"is-light\",\n            },\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        this.body = document.getElementsByTagName(this.DOM.body)[0];\n\n        console.info(\"toggle dark mode: %c Alt/Option + D \", consoleLogStyle);\n    }\n\n    init() {\n        // console.log(\"DarkModeHelper init()\");\n        this.toggleDarkMode();\n    }\n\n    toggleDarkMode() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 68 && ev.altKey) {\n                if (this.body.classList.contains(this.DOM.states.isLight)) {\n                    this.body.classList.remove(this.DOM.states.isLight);\n                } else {\n                    this.body.classList.add(this.DOM.states.isLight);\n                }\n            }\n        });\n    }\n}\n","export default class GridHelper {\n    /**\n     *\n     */\n    constructor() {\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        this.gridOptions = {\n            initialDisplay: \"none\", //\"flex\" or \"none\"\n            gridWidth: 1440, // px\n            columnCount: 24,\n            gridColor: \"rgb(255, 0, 255, 0.15)\",\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n            gutterWidth: 0, // px\n            gutterFixed: false,\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth -\n                (this.gridOptions.columnCount - 1) *\n                    this.gridOptions.gutterWidth) /\n            this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${\n            (this.columnWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n\n        this.gutterWidthPercentage = `${\n            (this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            max-width: ${this.gridOptions.gridWidth}px;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    /**\n     *\n     */\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","import GridHelper from \"./helpers/GridHelper\";\nimport DarkModeHelper from \"./helpers/DarkModeHelper\";\nimport NavigationController from \"./components/NavigationController\";\nimport TimelineSlider from \"./components/TimelineSlider\";\nimport VideoScrub from \"./components/VideoScrub\";\nimport ScrollProgress from \"./components/ScrollProgress\";\nimport Dummy from \"./components/Dummy\";\nimport GradientBg from \"./components/GradientBg\";\n\nconst ready = (callbackFunc) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callbackFunc();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callbackFunc);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callbackFunc();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n\n    console.info(\"dev by: %c Bornfight \", credits);\n\n    const gridHelper = new GridHelper();\n    gridHelper.init();\n\n    const darkModeHelper = new DarkModeHelper();\n    darkModeHelper.init();\n\n    const dummy = new Dummy();\n    dummy.init();\n\n    const navigation = new NavigationController();\n    navigation.init();\n\n    if (document.getElementById(\"timeline-slider\") !== null) {\n        const timelineSlider = new TimelineSlider();\n    }\n\n    if (document.getElementById(\"video-scrub\") !== null) {\n        const videoScrub = new VideoScrub();\n        videoScrub.init();\n    }\n\n    if (document.getElementById(\"scroll-progress\") !== null) {\n        const scrollProgress = new ScrollProgress();\n        scrollProgress.init();\n    }\n\n    if (document.getElementById(\"gradient\") !== null) {\n        const gradientBg = new GradientBg();\n        gradientBg.init();\n    }\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzdGF0aWMvanMvY29tcG9uZW50cy9EdW1teS5qcyIsInN0YXRpYy9qcy9jb21wb25lbnRzL0dyYWRpZW50QmcuanMiLCJzdGF0aWMvanMvY29tcG9uZW50cy9OYXZpZ2F0aW9uQ29udHJvbGxlci5qcyIsInN0YXRpYy9qcy9jb21wb25lbnRzL1Njcm9sbFByb2dyZXNzLmpzIiwic3RhdGljL2pzL2NvbXBvbmVudHMvVGltZWxpbmVTbGlkZXIuanMiLCJzdGF0aWMvanMvY29tcG9uZW50cy9WaWRlb1NjcnViLmpzIiwic3RhdGljL2pzL2hlbHBlcnMvRGFya01vZGVIZWxwZXIuanMiLCJzdGF0aWMvanMvaGVscGVycy9HcmlkSGVscGVyLmpzIiwic3RhdGljL2pzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7OztJQ0FxQixLO0FBQ2pCLG1CQUFjO0FBQUE7QUFBRTs7OzsyQkFFVDtBQUNILE1BQUEsT0FBTyxDQUFDLEdBQVIsQ0FBWSxTQUFaO0FBQ0g7Ozs7Ozs7Ozs7Ozs7Ozs7QUNMTDs7QUFDQTs7Ozs7Ozs7QUFFQSxXQUFLLGNBQUwsQ0FBb0IsNEJBQXBCOztJQUVxQixVO0FBQ2pCLHdCQUFjO0FBQUE7O0FBQ1YsU0FBSyxHQUFMLEdBQVc7QUFDUCxNQUFBLFdBQVcsRUFBRSxhQUROO0FBRVAsTUFBQSxFQUFFLEVBQUUsZ0JBRkc7QUFHUCxNQUFBLG1CQUFtQixFQUFFLGdDQUhkO0FBSVAsTUFBQSxlQUFlLEVBQUUsNEJBSlY7QUFLUCxNQUFBLE1BQU0sRUFBRTtBQUxELEtBQVg7QUFRQSxTQUFLLEVBQUwsR0FBVSxRQUFRLENBQUMsYUFBVCxDQUF1QixLQUFLLEdBQUwsQ0FBUyxFQUFoQyxDQUFWO0FBQ0EsU0FBSyxlQUFMLEdBQXVCLFFBQVEsQ0FBQyxnQkFBVCxDQUNuQixLQUFLLEdBQUwsQ0FBUyxlQURVLENBQXZCO0FBR0EsU0FB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SUFBSSx1QkFBSixFQUF2QjtBQUNBLElBQUEsY0FBYyxDQUFDLElBQWY7QUFDSDs7QUFFRCxNQUFJLFFBQVEsQ0FBQyxjQUFULENBQXdCLFVBQXhCLE1BQXdDLElBQTVDLEVBQWtEO0FBQzlDLFFBQU0sVUFBVSxHQUFHLElBQUksbUJBQUosRUFBbkI7QUFDQSxJQUFBLFVBQVUsQ0FBQyxJQUFYO0FBQ0g7QUFDSixDQTNDSSxDQUFMIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRHVtbXkge1xuICAgIGNvbnN0cnVjdG9yKCkge31cblxuICAgIGluaXQoKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiTG9hZGVkIVwiKTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBnc2FwIH0gZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5cbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyYWRpZW50Qmcge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgIGJnQ29udGFpbmVyOiBcIi5qcy1wYWdlLWJnXCIsXG4gICAgICAgICAgICBiZzogXCIuanMtcGFnZS1iZy1iZ1wiLFxuICAgICAgICAgICAgYmdHcmFkaWVudE1vdXNlTW92ZTogXCIuanMtcGFnZS1iZy1ncmFkaWVudC1tb3VzZW1vdmVcIixcbiAgICAgICAgICAgIGJnQ2hhbmdlVHJpZ2dlcjogXCIuanMtcGFnZS1iZy1jaGFuZ2UtdHJpZ2dlclwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7fSxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmJnID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS5iZyk7XG4gICAgICAgIHRoaXMuYmdDaGFuZ2VUcmlnZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbiAgICAgICAgICAgIHRoaXMuRE9NLmJnQ2hhbmdlVHJpZ2dlcixcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5iZ0dyYWRpZW50TW91c2VNb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgIHRoaXMuRE9NLmJnR3JhZGllbnRNb3VzZU1vdmUsXG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJHcmFkaWVudEJnIGluaXQoKVwiKTtcblxuICAgICAgICB0aGlzLmJnQ29sb3JDaGFuZ2UoKTtcbiAgICAgICAgdGhpcy5vbk1vdXNlTW92ZSgpO1xuICAgIH1cblxuICAgIGJnQ29sb3JDaGFuZ2UoKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy5iZ0NoYW5nZVRyaWdnZXIubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICAgICAgICBsZXQgYmdDaGFuZ2UgPSBnc2FwLnRvKHRoaXMuYmcsIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMC44LFxuICAgICAgICAgICAgICAgIGF1dG9BbHBoYTogdGhpcy5iZ0NoYW5nZVRyaWdnZXJbaV0uZ2V0QXR0cmlidXRlKFxuICAgICAgICAgICAgICAgICAgICBcImRhdGEtYmctb3BhY2l0eVwiLFxuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgZWFzZTogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgb25TdGFydDogKCkgPT4ge30sXG4gICAgICAgICAgICAgICAgb25VcGRhdGU6ICgpID0+IHt9LFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyOiB0aGlzLmJnQ2hhbmdlVHJpZ2dlcltpXSxcbiAgICAgICAgICAgICAgICBhbmltYXRpb246IGJnQ2hhbmdlLFxuICAgICAgICAgICAgICAgIC8vIG1hcmtlcnM6IHRydWUsXG4gICAgICAgICAgICAgICAgc3RhcnQ6IFwidG9wIGJvdHRvbVwiLFxuICAgICAgICAgICAgICAgIGVuZDogXCIrPTIwMFwiLFxuICAgICAgICAgICAgICAgIHNjcnViOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uRW50ZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJlbnRlclwiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uRW50ZXJCYWNrOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiZW50ZXJCYWNrXCIpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25MZWF2ZTogKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImxlYXZlXCIpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgb25MZWF2ZUJhY2s6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJsZWF2ZUJhY2tcIik7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgb25Nb3VzZU1vdmUoKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW1vdmVcIiwgKGV2dCkgPT4ge1xuICAgICAgICAgICAgbGV0IHggPSBldnQuY2xpZW50WCAvIGlubmVyV2lkdGg7XG4gICAgICAgICAgICBsZXQgeSA9IGV2dC5jbGllbnRZIC8gaW5uZXJIZWlnaHQ7XG5cbiAgICAgICAgICAgIGxldCBkZWNpbWFsWCA9IGV2dC5jbGllbnRYIC8gd2luZG93LmlubmVyV2lkdGggLSAwLjU7XG4gICAgICAgICAgICBsZXQgZGVjaW1hbFkgPSBldnQuY2xpZW50WSAvIHdpbmRvdy5pbm5lckhlaWdodCAtIDAuNTtcblxuICAgICAgICAgICAgZ3NhcC50byhcImh0bWxcIiwge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLjQsXG4gICAgICAgICAgICAgICAgXCItLW1vdXNlLXhcIjogeCxcbiAgICAgICAgICAgICAgICBlYXNlOiBcInBvd2VyMy5lYXNJblwiLFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGdzYXAudG8oXCJodG1sXCIsIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMS40LFxuICAgICAgICAgICAgICAgIFwiLS1tb3VzZS15XCI6IHksXG4gICAgICAgICAgICAgICAgZWFzZTogXCJwb3dlcjMuZWFzSW5cIixcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBnc2FwLnRvKHRoaXMuYmdHcmFkaWVudE1vdXNlTW92ZSwge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLjQsXG4gICAgICAgICAgICAgICAgcm90YXRpb25ZOiA1ICogZGVjaW1hbFksXG4gICAgICAgICAgICAgICAgeDogNTAgKiBkZWNpbWFsWCxcbiAgICAgICAgICAgICAgICByb3RhdGlvblg6IDIuNSAqIGRlY2ltYWxYLFxuICAgICAgICAgICAgICAgIHk6IC0xMDAgKiBkZWNpbWFsWSxcbiAgICAgICAgICAgICAgICBlYXNlOiBcInF1YWQuZWFzT3V0XCIsXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtUGVyc3BlY3RpdmU6IDcwMCxcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm1PcmlnaW46IFwiY2VudGVyXCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwiLyoqXG4gKiBcInNtYXJ0XCIgbmF2aWdhdGlvbiB3aGljaCBnb2VzIG9mZiBzY3JlZW4gd2hlbiBzY3JvbGxpbmcgZG93biBmb3IgYSBiZXR0ZXIgb3ZlcnZpZXcgb2YgY29udGVudCBhbmQgVVhcbiAqIG5hdmlnYXRpb24gYXBwZWFycyB3aGVuIHNjcm9sbGluZyB1cFxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOYXZpZ2F0aW9uQ29udHJvbGxlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOYXZpZ2F0aW9uIERPTSBzZWxlY3RvcnNcbiAgICAgICAgICogTmF2aWdhdGlvbiBET00gc3RhdGUgQ1NTIGNsYXNzZXNcbiAgICAgICAgICogQHR5cGUge3tuYXZpZ2F0aW9uOiBzdHJpbmcsIHN0YXRlczoge25hdmlnYXRpb25TbGlkZVVwOiBzdHJpbmcsIG5hdmlnYXRpb25TY3JvbGxlZDogc3RyaW5nLCBuYXZpZ2F0aW9uRml4ZWQ6IHN0cmluZ319fVxuICAgICAgICAgKi9cblxuICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgIG5hdmlnYXRpb246IFwiLmpzLW5hdmlnYXRpb24td3JhcHBlclwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICAgICAgbmF2aWdhdGlvblNjcm9sbGVkOiBcImhhcy1zY3JvbGxlZFwiLFxuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25GaXhlZDogXCJpcy1maXhlZFwiLFxuICAgICAgICAgICAgICAgIG5hdmlnYXRpb25TbGlkZVVwOiBcInNsaWRlLXVwXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuXG4gICAgICAgIC8qKlxuICAgICAgICAgKiBmbGFnLCBzdGF0ZSB2YXJpYWJsZSBmb3Igc2Nyb2xsaW5nIGV2ZW50XG4gICAgICAgICAqIEB0eXBlIHtib29sZWFufVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zY3JvbGxpbmcgPSBmYWxzZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIGFtb3VudCBvZiBwaXhlbHMgdG8gc2Nyb2xsIGZyb20gdG9wIGZvciBhZGRpbmcgXCJoYXMtc2Nyb2xsZWRcIiBzdGF0ZSBjbGFzc1xuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5zY3JvbGxOYXZpZ2F0aW9uT2Zmc2V0ID0gMjAwO1xuICAgICAgICAvKipcbiAgICAgICAgICogdmFyaWFibGUgZm9yIHN0b3JpbmcgYW1vdW50IG9mIHNjcm9sbCBmcm9tIHRvcCBwb3NpdGlvbiB2YWx1ZVxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5wcmV2aW91c1RvcCA9IDA7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiB2YXJpYWJsZSBmb3Igc3RvcmluZyBjdXJyZW50IHNjcm9sbCBwb3NpdGlvbiB2YWx1ZVxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5jdXJyZW50VG9wID0gMDtcbiAgICAgICAgdGhpcy5zY3JvbGxEZWx0YSA9IDA7XG4gICAgICAgIHRoaXMuc2Nyb2xsT2Zmc2V0ID0gMDtcblxuICAgICAgICAvKipcbiAgICAgICAgICogZmV0Y2ggbmF2aWdhdGlvbiBlbGVtZW50IERPTSBlbGVtZW50XG4gICAgICAgICAqIEB0eXBlIHtFbGVtZW50fVxuICAgICAgICAgKi9cbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS5uYXZpZ2F0aW9uKTtcbiAgICB9XG5cbiAgICAvL3JlZ2lvbiBtZXRob2RzXG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBpbml0KCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIk5hdmlnYXRpb24gaW5pdCgpXCIpO1xuXG4gICAgICAgIGlmICh0aGlzLm5hdmlnYXRpb24gIT09IG51bGwpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbkNvbnRyb2xsZXIoKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoYCR7dGhpcy5ET00ubmF2aWdhdGlvbn0gZG9lcyBub3QgZXhpc3QgaW4gdGhlIERPTSFgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgbmF2aWdhdGlvbkNvbnRyb2xsZXIoKSB7XG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzY3JvbGxcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKCF0aGlzLnNjcm9sbGluZykge1xuICAgICAgICAgICAgICAgIHRoaXMuc2Nyb2xsaW5nID0gdHJ1ZTtcblxuICAgICAgICAgICAgICAgIGlmICghd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KHRoaXMuY2hlY2tTY3JvbGwoKSwgMjUwKTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5jaGVja1Njcm9sbCgpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqXG4gICAgICovXG4gICAgY2hlY2tTY3JvbGwoKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKlxuICAgICAgICAgKiBAdHlwZSB7bnVtYmVyfVxuICAgICAgICAgKi9cbiAgICAgICAgbGV0IGN1cnJlbnRUb3AgPSB3aW5kb3cucGFnZVlPZmZzZXQgfCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDtcblxuICAgICAgICB0aGlzLmNoYW5nZU5hdmlnYXRpb25TdGF0ZShjdXJyZW50VG9wKTtcblxuICAgICAgICB0aGlzLnByZXZpb3VzVG9wID0gY3VycmVudFRvcDtcbiAgICAgICAgdGhpcy5zY3JvbGxpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjdXJyZW50VG9wXG4gICAgICovXG4gICAgY2hhbmdlTmF2aWdhdGlvblN0YXRlKGN1cnJlbnRUb3ApIHtcbiAgICAgICAgaWYgKGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QuYWRkKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2Nyb2xsZWQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5uYXZpZ2F0aW9uLmNsYXNzTGlzdC5yZW1vdmUoXG4gICAgICAgICAgICAgICAgdGhpcy5ET00uc3RhdGVzLm5hdmlnYXRpb25TY3JvbGxlZCxcbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAodGhpcy5wcmV2aW91c1RvcCA+PSBjdXJyZW50VG9wKSB7XG4gICAgICAgICAgICB0aGlzLnNjcm9sbGluZ1VwKGN1cnJlbnRUb3ApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxpbmdEb3duKGN1cnJlbnRUb3ApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY3VycmVudFRvcFxuICAgICAqL1xuICAgIHNjcm9sbGluZ1VwKGN1cnJlbnRUb3ApIHtcbiAgICAgICAgaWYgKGN1cnJlbnRUb3AgPCB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2xpZGVVcCk7XG4gICAgICAgIH0gZWxzZSBpZiAodGhpcy5wcmV2aW91c1RvcCAtIGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbERlbHRhKSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb24uY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkRPTS5zdGF0ZXMubmF2aWdhdGlvblNsaWRlVXApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gY3VycmVudFRvcFxuICAgICAqL1xuICAgIHNjcm9sbGluZ0Rvd24oY3VycmVudFRvcCkge1xuICAgICAgICBpZiAoY3VycmVudFRvcCA+IHRoaXMuc2Nyb2xsTmF2aWdhdGlvbk9mZnNldCArIHRoaXMuc2Nyb2xsT2Zmc2V0KSB7XG4gICAgICAgICAgICB0aGlzLm5hdmlnYXRpb24uY2xhc3NMaXN0LmFkZCh0aGlzLkRPTS5zdGF0ZXMubmF2aWdhdGlvblNsaWRlVXApO1xuICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnRUb3AgPiB0aGlzLnNjcm9sbE5hdmlnYXRpb25PZmZzZXQpIHtcbiAgICAgICAgICAgIHRoaXMubmF2aWdhdGlvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuRE9NLnN0YXRlcy5uYXZpZ2F0aW9uU2xpZGVVcCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvL2VuZHJlZ2lvblxufVxuIiwiaW1wb3J0IHsgZ3NhcCB9IGZyb20gXCJnc2FwXCI7XG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xuXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTY3JvbGxQcm9ncmVzcyB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuRE9NID0ge1xuICAgICAgICAgICAgc2Nyb2xsUHJvZ3Jlc3M6IFwiLmpzLXNjcm9sbC1wcm9ncmVzc1wiLFxuICAgICAgICAgICAgc2Nyb2xsUHJvZ3Jlc3NJdGVtOiBcIi5qcy1zY3JvbGwtcHJvZ3Jlc3MtaXRlbVwiLFxuICAgICAgICAgICAgc2Nyb2xsUHJvZ3Jlc3NUcmlnZ2VyOiBcIi5qcy1zY3JvbGwtcHJvZ3Jlc3MtdHJpZ2dlclwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICAgICAgaXNBY3RpdmU6IFwiaXMtYWN0aXZlXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMuc2Nyb2xsUHJvZ3Jlc3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuRE9NLnNjcm9sbFByb2dyZXNzKTtcbiAgICAgICAgdGhpcy5zY3JvbGxQcm9ncmVzc0l0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbiAgICAgICAgICAgIHRoaXMuRE9NLnNjcm9sbFByb2dyZXNzSXRlbSxcbiAgICAgICAgKTtcbiAgICAgICAgdGhpcy5zY3JvbGxQcm9ncmVzc1RyaWdnZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcbiAgICAgICAgICAgIHRoaXMuRE9NLnNjcm9sbFByb2dyZXNzVHJpZ2dlcixcbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICBpbml0KCkge1xuICAgICAgICBjb25zb2xlLmxvZyhcIlNjcm9sbFByb2dyZXNzIGluaXQoKVwiKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMCwgbCA9IHRoaXMuc2Nyb2xsUHJvZ3Jlc3NJdGVtcy5sZW5ndGg7IGkgPCBsOyBpKyspIHtcbiAgICAgICAgICAgIGxldCBwcm9ncmVzcyA9IGdzYXAudG8odGhpcy5zY3JvbGxQcm9ncmVzc0l0ZW1zW2ldLCB7XG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDEsXG4gICAgICAgICAgICAgICAgc2NhbGVZOiAxLFxuICAgICAgICAgICAgICAgIGVhc2U6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgIG9uVXBkYXRlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwidHV0dVwiKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICB0cmlnZ2VyOiB0aGlzLnNjcm9sbFByb2dyZXNzVHJpZ2dlcnNbaV0sXG4gICAgICAgICAgICAgICAgLy8gbWFya2VyczogdHJ1ZSxcbiAgICAgICAgICAgICAgICBzdGFydDogXCJ0b3AgYm90dG9tXCIsXG4gICAgICAgICAgICAgICAgZW5kOiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgICAgICAgICAgICBhbmltYXRpb246IHByb2dyZXNzLFxuICAgICAgICAgICAgICAgIHNjcnViOiAwLjQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gXCJ0aHJlZVwiO1xuXG5pbXBvcnQge0VmZmVjdENvbXBvc2VyfSBmcm9tIFwidGhyZWUvZXhhbXBsZXMvanNtL3Bvc3Rwcm9jZXNzaW5nL0VmZmVjdENvbXBvc2VyXCI7XG5pbXBvcnQge1JlbmRlclBhc3N9IGZyb20gXCJ0aHJlZS9leGFtcGxlcy9qc20vcG9zdHByb2Nlc3NpbmcvUmVuZGVyUGFzc1wiO1xuaW1wb3J0IHtCb2tlaFBhc3N9IGZyb20gXCJ0aHJlZS9leGFtcGxlcy9qc20vcG9zdHByb2Nlc3NpbmcvQm9rZWhQYXNzXCI7XG5pbXBvcnQge0dVSX0gZnJvbSBcInRocmVlL2V4YW1wbGVzL2pzbS9saWJzL2RhdC5ndWkubW9kdWxlLmpzXCI7XG5cbmltcG9ydCB7Z3NhcH0gZnJvbSBcImdzYXBcIjtcblxuaW1wb3J0IFN3aXBlciBmcm9tIFwic3dpcGVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpbWVsaW5lU2xpZGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ET00gPSB7XG4gICAgICAgICAgICB0aW1lbGluZTogXCIuanMtdGltZWxpbmVcIixcblxuICAgICAgICAgICAgdGltZWxpbmVTbGlkZXI6IFwiLmpzLXRpbWVsaW5lLXNsaWRlclwiLFxuICAgICAgICAgICAgdGltZWxpbmVTbGlkZXJXcmFwcGVyOiBcIi5qcy10aW1lbGluZS1zbGlkZXItd3JhcHBlclwiLFxuICAgICAgICAgICAgdGltZWxpbmVTbGlkZXJOZXh0OiBcIi5qcy10aW1lbGluZS1zbGlkZXItbmV4dFwiLFxuICAgICAgICAgICAgdGltZWxpbmVTbGlkZXJQcmV2OiBcIi5qcy10aW1lbGluZS1zbGlkZXItcHJldmlvdXNcIixcbiAgICAgICAgICAgIHRpbWVsaW5lUHJvZ3Jlc3NEb3Q6IFwiLmpzLXRpbWVsaW5lLXBhZ2luYXRpb24tcHJvZ3Jlc3MtZG90XCIsXG4gICAgICAgICAgICB0aW1lbGluZVByb2dyZXNzV3JhcHBlcjogXCIuanMtdGltZWxpbmUtcGFnaW5hdGlvbi1wcm9ncmVzcy13cmFwcGVyXCIsXG5cbiAgICAgICAgICAgIHBvcHVwOiBcIi5qcy10aW1lbGluZS1wb3B1cFwiLFxuICAgICAgICAgICAgcG9wdXBDbG9zZTogXCIuanMtdGltZWxpbmUtcG9wdXAtY2xvc2VcIixcbiAgICAgICAgICAgIHBvcHVwWWVhcjogXCIuanMtdGltZWxpbmUtcG9wdXAteWVhclwiLFxuICAgICAgICAgICAgcG9wdXBUaXRsZTogXCIuanMtdGltZWxpbmUtcG9wdXAtdGl0bGVcIixcbiAgICAgICAgICAgIHBvcHVwQ29udGVudDogXCIuanMtdGltZWxpbmUtcG9wdXAtY29udGVudFwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7fSxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLm9wdGlvbnMgPSB7XG4gICAgICAgICAgICB0cmFuc2l0aW9uU3BlZWQ6IDEwMDAsXG4gICAgICAgIH07XG5cbiAgICAgICAgdGhpcy5tb3VzZSA9IHtcbiAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICB5OiAwLFxuICAgICAgICB9O1xuXG4gICAgICAgIHRoaXMud2luV2lkdGggPSB3aW5kb3cuaW5uZXJXaWR0aDtcbiAgICAgICAgdGhpcy53aW5IZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cbiAgICAgICAgdGhpcy5hY3RpdmVJbmRleCA9IDA7XG5cbiAgICAgICAgdGhpcy50aW1lbGluZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5ET00udGltZWxpbmUpO1xuICAgICAgICB0aGlzLnNsaWRlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5ET00udGltZWxpbmVTbGlkZXIpO1xuICAgICAgICB0aGlzLnByb2dyZXNzRG90ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS50aW1lbGluZVByb2dyZXNzRG90KTtcbiAgICAgICAgdGhpcy5wcm9ncmVzc1dyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuRE9NLnRpbWVsaW5lUHJvZ3Jlc3NXcmFwcGVyKTtcbiAgICAgICAgdGhpcy5zbGlkZXJXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcbiAgICAgICAgICAgIHRoaXMuRE9NLnRpbWVsaW5lU2xpZGVyV3JhcHBlcixcbiAgICAgICAgKTtcblxuICAgICAgICB0aGlzLnBvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS5wb3B1cCk7XG4gICAgICAgIHRoaXMucG9wdXBDbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5ET00ucG9wdXBDbG9zZSk7XG4gICAgICAgIHRoaXMucG9wdXBZZWFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS5wb3B1cFllYXIpO1xuICAgICAgICB0aGlzLnBvcHVwVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuRE9NLnBvcHVwVGl0bGUpO1xuICAgICAgICB0aGlzLnBvcHVwQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5ET00ucG9wdXBDb250ZW50KTtcblxuICAgICAgICB0aGlzLnN3aXBlciA9IG51bGw7XG4gICAgICAgIHRoaXMucG9wdXBPcGVuZWQgPSBmYWxzZTtcblxuICAgICAgICB0aGlzLnRpbWVsaW5lSXRlbXNJbWFnZVBhdGggPSBcInN0YXRpYy9pbWFnZXMvXCI7XG4gICAgICAgIHRoaXMudGltZWxpbmVJdGVtcyA9IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMS5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMDhcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJMb3JlbSBpcHN1bSBkb2xvciBzaXQuXCIsXG4gICAgICAgICAgICAgICAgdGV4dDpcbiAgICAgICAgICAgICAgICAgICAgXCJNYWtlcyBleGFtcGxlIHBvc3RzLCBwYWdlcywgY3VzdG9tIHRlcm1zLCBoZWxwcyB0byBzdHlsZSBhbmQgZGV2ZWxvcCBuZXcgYW5kIGN1cnJlbnQgdGhlbWVzLlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMi5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMDlcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJSaW1hYyBncm93cyB0byBvdmVyIDEwMCBlbXBsb3llZXMuXCIsXG4gICAgICAgICAgICAgICAgdGV4dDpcbiAgICAgICAgICAgICAgICAgICAgXCJBIHNpbXBsZSB0byB1c2UgTG9yZW0gSXBzdW0gZ2VuZXJhdG9yLiBBIHNpbXBsZSB0byB1c2UgTG9yZW0gSXBzdW0gZ2VuZXJhdG9yLlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMy5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMTBcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJSaW1hYyBoYXMgMTkxNEhQLlwiLFxuICAgICAgICAgICAgICAgIHRleHQ6XG4gICAgICAgICAgICAgICAgICAgIFwiSXQncyBiYXNlZCBvbiB0aGUgTG9saXRhIGZyYW1ld29yay4gQSBzaW1wbGUgdG8gdXNlIExvcmVtIElwc3VtIGdlbmVyYXRvci5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwidGltZWxpbmUtMDEuanBnXCIsXG4gICAgICAgICAgICAgICAgeWVhcjogXCIyMDExXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiTG9yZW0gaXBzdW0gZG9sb3Igc2l0LlwiLFxuICAgICAgICAgICAgICAgIHRleHQ6XG4gICAgICAgICAgICAgICAgICAgIFwiTWFrZXMgZXhhbXBsZSBwb3N0cywgcGFnZXMsIGN1c3RvbSB0ZXJtcywgaGVscHMgdG8gc3R5bGUgYW5kIGRldmVsb3AgbmV3IGFuZCBjdXJyZW50IHRoZW1lcy5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwidGltZWxpbmUtMDIuanBnXCIsXG4gICAgICAgICAgICAgICAgeWVhcjogXCIyMDEyXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiUmltYWMgZ3Jvd3MgdG8gb3ZlciAxMDAgZW1wbG95ZWVzLlwiLFxuICAgICAgICAgICAgICAgIHRleHQ6XG4gICAgICAgICAgICAgICAgICAgIFwiQSBzaW1wbGUgdG8gdXNlIExvcmVtIElwc3VtIGdlbmVyYXRvci4gQSBzaW1wbGUgdG8gdXNlIExvcmVtIElwc3VtIGdlbmVyYXRvci5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwidGltZWxpbmUtMDMuanBnXCIsXG4gICAgICAgICAgICAgICAgeWVhcjogXCIyMDEzXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiUmltYWMgaGFzIDE5MTRIUC5cIixcbiAgICAgICAgICAgICAgICB0ZXh0OlxuICAgICAgICAgICAgICAgICAgICBcIkl0J3MgYmFzZWQgb24gdGhlIExvbGl0YSBmcmFtZXdvcmsuIEEgc2ltcGxlIHRvIHVzZSBMb3JlbSBJcHN1bSBnZW5lcmF0b3IuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltYWdlOiBcInRpbWVsaW5lLTAxLmpwZ1wiLFxuICAgICAgICAgICAgICAgIHllYXI6IFwiMjAxNFwiLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIkxvcmVtIGlwc3VtIGRvbG9yIHNpdC5cIixcbiAgICAgICAgICAgICAgICB0ZXh0OlxuICAgICAgICAgICAgICAgICAgICBcIk1ha2VzIGV4YW1wbGUgcG9zdHMsIHBhZ2VzLCBjdXN0b20gdGVybXMsIGhlbHBzIHRvIHN0eWxlIGFuZCBkZXZlbG9wIG5ldyBhbmQgY3VycmVudCB0aGVtZXMuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltYWdlOiBcInRpbWVsaW5lLTAyLmpwZ1wiLFxuICAgICAgICAgICAgICAgIHllYXI6IFwiMjAxNVwiLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlJpbWFjIGdyb3dzIHRvIG92ZXIgMTAwIGVtcGxveWVlcy5cIixcbiAgICAgICAgICAgICAgICB0ZXh0OlxuICAgICAgICAgICAgICAgICAgICBcIkEgc2ltcGxlIHRvIHVzZSBMb3JlbSBJcHN1bSBnZW5lcmF0b3IuIEEgc2ltcGxlIHRvIHVzZSBMb3JlbSBJcHN1bSBnZW5lcmF0b3IuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGltYWdlOiBcInRpbWVsaW5lLTAzLmpwZ1wiLFxuICAgICAgICAgICAgICAgIHllYXI6IFwiMjAxNlwiLFxuICAgICAgICAgICAgICAgIHRpdGxlOiBcIlJpbWFjIGhhcyAxOTE0SFAuXCIsXG4gICAgICAgICAgICAgICAgdGV4dDpcbiAgICAgICAgICAgICAgICAgICAgXCJJdCdzIGJhc2VkIG9uIHRoZSBMb2xpdGEgZnJhbWV3b3JrLiBBIHNpbXBsZSB0byB1c2UgTG9yZW0gSXBzdW0gZ2VuZXJhdG9yLlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMS5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMTdcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJMb3JlbSBpcHN1bSBkb2xvciBzaXQuXCIsXG4gICAgICAgICAgICAgICAgdGV4dDpcbiAgICAgICAgICAgICAgICAgICAgXCJNYWtlcyBleGFtcGxlIHBvc3RzLCBwYWdlcywgY3VzdG9tIHRlcm1zLCBoZWxwcyB0byBzdHlsZSBhbmQgZGV2ZWxvcCBuZXcgYW5kIGN1cnJlbnQgdGhlbWVzLlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMi5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMThcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJSaW1hYyBncm93cyB0byBvdmVyIDEwMCBlbXBsb3llZXMuXCIsXG4gICAgICAgICAgICAgICAgdGV4dDpcbiAgICAgICAgICAgICAgICAgICAgXCJBIHNpbXBsZSB0byB1c2UgTG9yZW0gSXBzdW0gZ2VuZXJhdG9yLiBBIHNpbXBsZSB0byB1c2UgTG9yZW0gSXBzdW0gZ2VuZXJhdG9yLlwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBpbWFnZTogXCJ0aW1lbGluZS0wMy5qcGdcIixcbiAgICAgICAgICAgICAgICB5ZWFyOiBcIjIwMTlcIixcbiAgICAgICAgICAgICAgICB0aXRsZTogXCJSaW1hYyBoYXMgMTkxNEhQLlwiLFxuICAgICAgICAgICAgICAgIHRleHQ6XG4gICAgICAgICAgICAgICAgICAgIFwiSXQncyBiYXNlZCBvbiB0aGUgTG9saXRhIGZyYW1ld29yay4gQSBzaW1wbGUgdG8gdXNlIExvcmVtIElwc3VtIGdlbmVyYXRvci5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaW1hZ2U6IFwidGltZWxpbmUtMDEuanBnXCIsXG4gICAgICAgICAgICAgICAgeWVhcjogXCIyMDIwXCIsXG4gICAgICAgICAgICAgICAgdGl0bGU6IFwiTG9yZW0gaXBzdW0gZG9sb3Igc2l0LlwiLFxuICAgICAgICAgICAgICAgIHRleHQ6XG4gICAgICAgICAgICAgICAgICAgIFwiTWFrZXMgZXhhbXBsZSBwb3N0cywgcGFnZXMsIGN1c3RvbSB0ZXJtcywgaGVscHMgdG8gc3R5bGUgYW5kIGRldmVsb3AgbmV3IGFuZCBjdXJyZW50IHRoZW1lcy5cIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgIF07XG5cbiAgICAgICAgLy8gdGhpcy50aW1lbGluZVNsaWRlclByZXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxuICAgICAgICAvLyAgICAgdGhpcy5ET00udGltZWxpbmVTbGlkZXJQcmV2LFxuICAgICAgICAvLyApO1xuICAgICAgICAvLyB0aGlzLnRpbWVsaW5lU2xpZGVyTmV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICAgIC8vICAgICB0aGlzLkRPTS50aW1lbGluZVNsaWRlck5leHQsXG4gICAgICAgIC8vICk7XG5cbiAgICAgICAgdGhpcy5jYW1lcmEgPSBudWxsO1xuICAgICAgICB0aGlzLnNjZW5lID0gbnVsbDtcbiAgICAgICAgdGhpcy5yZW5kZXJlciA9IG51bGw7XG4gICAgICAgIHRoaXMucG9zdHByb2Nlc3NpbmcgPSB7fTtcbiAgICAgICAgdGhpcy5oZWxpeEl0ZW1zID0gW107XG5cbiAgICAgICAgdGhpcy5pbml0KCk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJUaW1lbGluZVNsaWRlciBpbml0KClcIik7XG5cbiAgICAgICAgdGhpcy5zY2VuZSA9IG5ldyBUSFJFRS5TY2VuZSgpO1xuXG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICBjYW1lcmE6IHtcbiAgICAgICAgICAgICAgICBmb3Y6IDYwLFxuICAgICAgICAgICAgICAgIG5lYXI6IDEwLFxuICAgICAgICAgICAgICAgIGZhcjogMzAwMCxcbiAgICAgICAgICAgICAgICBwb3NYOiAtMTgwLFxuICAgICAgICAgICAgICAgIHBvc1k6IDEwMCxcbiAgICAgICAgICAgICAgICBwb3NaOiAxMDgwLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmNhbWVyYSA9IG5ldyBUSFJFRS5QZXJzcGVjdGl2ZUNhbWVyYShcbiAgICAgICAgICAgIG9wdGlvbnMuY2FtZXJhLmZvdixcbiAgICAgICAgICAgIHRoaXMud2luV2lkdGggLyB0aGlzLndpbkhlaWdodCxcbiAgICAgICAgICAgIG9wdGlvbnMuY2FtZXJhLm5lYXIsXG4gICAgICAgICAgICBvcHRpb25zLmNhbWVyYS5mYXIsXG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5pdGVtUmFkaXVzT2Zmc2V0ID0gMC44NTtcblxuICAgICAgICB0aGlzLmluaXRpYWxDYW1lcmFaUG9zaXRpb24gPSAxMDIwO1xuXG4gICAgICAgIHRoaXMuY2FtZXJhLmxvb2tBdCgwLCAwLCAwKTtcblxuICAgICAgICB0aGlzLmNhbWVyYS5wb3NpdGlvbi54ID0gMDtcbiAgICAgICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueSA9IDA7XG4gICAgICAgIHRoaXMuY2FtZXJhLnBvc2l0aW9uLnogPSB0aGlzLmluaXRpYWxDYW1lcmFaUG9zaXRpb247XG5cbiAgICAgICAgdGhpcy5pbml0aWFsQ2FtZXJhV3JhcHBlclBvc2l0aW9uID0gNTUwO1xuICAgICAgICB0aGlzLmluaXRpYWxDYW1lcmFXcmFwcGVyUm90YXRpb24gPSAzLjE1O1xuXG4gICAgICAgIHRoaXMuY2FtZXJhV3JhcHBlciA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xuICAgICAgICB0aGlzLmNhbWVyYVdyYXBwZXIucG9zaXRpb24uc2V0KFxuICAgICAgICAgICAgMCxcbiAgICAgICAgICAgIHRoaXMuaW5pdGlhbENhbWVyYVdyYXBwZXJQb3NpdGlvbixcbiAgICAgICAgICAgIDAsXG4gICAgICAgICk7XG4gICAgICAgIHRoaXMuY2FtZXJhV3JhcHBlci5yb3RhdGlvbi55ID0gdGhpcy5pbml0aWFsQ2FtZXJhV3JhcHBlclJvdGF0aW9uO1xuICAgICAgICB0aGlzLmNhbWVyYVdyYXBwZXIubmFtZSA9IFwiY2FtZXJhIHdyYXBwZXJcIjtcbiAgICAgICAgdGhpcy5jYW1lcmFXcmFwcGVyLmFkZCh0aGlzLmNhbWVyYSk7XG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKHRoaXMuY2FtZXJhV3JhcHBlcik7XG5cbiAgICAgICAgdGhpcy52ZWN0b3IgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuXG4gICAgICAgIGNvbnN0IHBsYW5lQmFja01hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcbiAgICAgICAgICAgIGNvbG9yOiAweDMzMzMzMyxcbiAgICAgICAgICAgIHRyYW5zcGFyZW50OiB0cnVlLFxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLmdlb21ldHJ5QXNwZWN0UmF0aW8gPSAxNiAvIDk7XG4gICAgICAgIGNvbnN0IHBsYW5lR2VvbWV0cnkgPSBuZXcgVEhSRUUuUGxhbmVHZW9tZXRyeSgzMzAsIDE4NiwgMSwgMSk7XG4gICAgICAgIGxldCBwbGFuZUdlb21ldHJ5QmFjayA9IHBsYW5lR2VvbWV0cnkuY2xvbmUoKTtcbiAgICAgICAgcGxhbmVHZW9tZXRyeUJhY2suYXBwbHlNYXRyaXgoXG4gICAgICAgICAgICBuZXcgVEhSRUUuTWF0cml4NCgpLm1ha2VSb3RhdGlvblkoTWF0aC5QSSksXG4gICAgICAgICk7XG5cbiAgICAgICAgLy8gY3JlYXRlIGl0ZW1zXG4gICAgICAgIGZvciAobGV0IGkgPSAwLCBsID0gdGhpcy50aW1lbGluZUl0ZW1zLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICAgICAgdGhpcy5jcmV0YXRlSXRlbShcbiAgICAgICAgICAgICAgICBpLFxuICAgICAgICAgICAgICAgIHRoaXMudGltZWxpbmVJdGVtc1tpXSxcbiAgICAgICAgICAgICAgICBwbGFuZUdlb21ldHJ5QmFjayxcbiAgICAgICAgICAgICAgICBwbGFuZUJhY2tNYXRlcmlhbCxcbiAgICAgICAgICAgICAgICBwbGFuZUdlb21ldHJ5LFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IHRvcE9mVGhlSGVsaXggPSB0aGlzLmhlbGl4SXRlbXNbMF0ucG9zaXRpb24ueTtcbiAgICAgICAgY29uc3QgYm90dG9tT2ZUaGVIZWxpeCA9IHRoaXMuaGVsaXhJdGVtc1t0aGlzLmhlbGl4SXRlbXMubGVuZ3RoIC0gMV0ucG9zaXRpb24ueTtcbiAgICAgICAgY29uc3QgaGVsaXhIZWlnaHQgPVxuICAgICAgICAgICAgTWF0aC5hYnMoYm90dG9tT2ZUaGVIZWxpeCkgKyBNYXRoLmFicyh0b3BPZlRoZUhlbGl4KTtcbiAgICAgICAgdGhpcy5oZWxpeE9mZnNldEJ5SXRlbSA9XG4gICAgICAgICAgICBoZWxpeEhlaWdodCAvICh0aGlzLmhlbGl4SXRlbXMubGVuZ3RoIC0gMSk7XG5cbiAgICAgICAgLy8gY2FudmFzIHJlbmRlcmVyXG4gICAgICAgIHRoaXMuY2FudmFzUmVuZGVyZXIgPSBuZXcgVEhSRUUuV2ViR0xSZW5kZXJlcigpO1xuICAgICAgICB0aGlzLmNhbnZhc1JlbmRlcmVyLnNldFBpeGVsUmF0aW8od2luZG93LmRldmljZVBpeGVsUmF0aW8pO1xuICAgICAgICB0aGlzLmNhbnZhc1JlbmRlcmVyLnNldFNpemUodGhpcy53aW5XaWR0aCwgdGhpcy53aW5IZWlnaHQpO1xuICAgICAgICB0aGlzLnRpbWVsaW5lLmFwcGVuZENoaWxkKHRoaXMuY2FudmFzUmVuZGVyZXIuZG9tRWxlbWVudCk7XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXG4gICAgICAgICAgICBcInJlc2l6ZVwiLFxuICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMub25XaW5kb3dSZXNpemU7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZmFsc2UsXG4gICAgICAgICk7XG5cbiAgICAgICAgdGhpcy5kb2YoKTtcblxuICAgICAgICAvLyBEQVQgZ3VpIGNvbnRyb2xzXG4gICAgICAgIGNvbnN0IGVmZmVjdENvbnRyb2xsZXIgPSB7XG4gICAgICAgICAgICBmb2N1czogMzYwLFxuICAgICAgICAgICAgYXBlcnR1cmU6IDQuNyxcbiAgICAgICAgICAgIG1heGJsdXI6IDAuMDA3LFxuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBtYXRDaGFuZ2VyID0gKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5wb3N0cHJvY2Vzc2luZy5ib2tlaC51bmlmb3Jtc1tcImZvY3VzXCJdLnZhbHVlID1cbiAgICAgICAgICAgICAgICBlZmZlY3RDb250cm9sbGVyLmZvY3VzO1xuICAgICAgICAgICAgdGhpcy5wb3N0cHJvY2Vzc2luZy5ib2tlaC51bmlmb3Jtc1tcImFwZXJ0dXJlXCJdLnZhbHVlID1cbiAgICAgICAgICAgICAgICBlZmZlY3RDb250cm9sbGVyLmFwZXJ0dXJlICogMC4wMDAwMTtcbiAgICAgICAgICAgIHRoaXMucG9zdHByb2Nlc3NpbmcuYm9rZWgudW5pZm9ybXNbXCJtYXhibHVyXCJdLnZhbHVlID1cbiAgICAgICAgICAgICAgICBlZmZlY3RDb250cm9sbGVyLm1heGJsdXI7XG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgZ3VpID0gbmV3IEdVSSgpO1xuICAgICAgICBndWkuYWRkKGVmZmVjdENvbnRyb2xsZXIsIFwiZm9jdXNcIiwgMTAuMCwgMzAwMC4wLCAxMCkub25DaGFuZ2UoXG4gICAgICAgICAgICBtYXRDaGFuZ2VyLFxuICAgICAgICApO1xuICAgICAgICBndWkuYWRkKGVmZmVjdENvbnRyb2xsZXIsIFwiYXBlcnR1cmVcIiwgMCwgMTAsIDAuMSkub25DaGFuZ2UobWF0Q2hhbmdlcik7XG4gICAgICAgIGd1aS5hZGQoZWZmZWN0Q29udHJvbGxlciwgXCJtYXhibHVyXCIsIDAuMCwgMC4wMSwgMC4wMDEpLm9uQ2hhbmdlKFxuICAgICAgICAgICAgbWF0Q2hhbmdlcixcbiAgICAgICAgKTtcbiAgICAgICAgZ3VpLmNsb3NlKCk7XG5cbiAgICAgICAgbWF0Q2hhbmdlcigpO1xuICAgICAgICAvLyBlbmQgREFUIGd1aSBjb250cm9sc1xuXG4gICAgICAgIHRoaXMuYW5pbWF0ZSgpO1xuICAgICAgICB0aGlzLm1vdXNlTW92ZSgpO1xuXG4gICAgICAgIC8vIGJhY2tncm91bmRcbiAgICAgICAgdGhpcy5hZGRCZ0ltYWdlKCk7XG5cbiAgICAgICAgdGhpcy5zd2lwZXJJbml0KCk7XG5cbiAgICAgICAgdGhpcy5wb3B1cENvbnRyb2xsZXIoKTtcbiAgICB9XG5cbiAgICBvbldpbmRvd1Jlc2l6ZSgpIHtcbiAgICAgICAgdGhpcy5jYW1lcmEuYXNwZWN0ID0gdGhpcy53aW5XaWR0aCAvIHRoaXMud2luSGVpZ2h0O1xuICAgICAgICB0aGlzLmNhbWVyYS51cGRhdGVQcm9qZWN0aW9uTWF0cml4KCk7XG4gICAgICAgIHRoaXMucG9zdHByb2Nlc3NpbmcuY29tcG9zZXIuc2V0U2l6ZSh0aGlzLndpbldpZHRoLCB0aGlzLndpbkhlaWdodCk7XG4gICAgfVxuXG4gICAgYW5pbWF0ZSgpIHtcbiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpID0+IHRoaXMuYW5pbWF0ZSgpKTtcbiAgICAgICAgdGhpcy5wb3N0cHJvY2Vzc2luZy5jb21wb3Nlci5yZW5kZXIoMC4xKTtcbiAgICB9XG5cbiAgICBjcmV0YXRlSXRlbShcbiAgICAgICAgaSxcbiAgICAgICAgdGltZWxpbmVMb29wSXRlbSxcbiAgICAgICAgcGxhbmVHZW9tZXRyeUJhY2ssXG4gICAgICAgIHBsYW5lQmFja01hdGVyaWFsLFxuICAgICAgICBwbGFuZUdlb21ldHJ5LFxuICAgICkge1xuICAgICAgICBsZXQgdGltZWxpbmVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgdGltZWxpbmVJdGVtLmNsYXNzTmFtZSA9IFwiYy10aW1lbGluZS1pdGVtIHN3aXBlci1zbGlkZVwiO1xuXG4gICAgICAgIGxldCB0aW1lbGluZUl0ZW1Jbm5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRpbWVsaW5lSXRlbUlubmVyLmNsYXNzTmFtZSA9IFwiYy10aW1lbGluZS1pdGVtX19pbm5lclwiO1xuICAgICAgICB0aW1lbGluZUl0ZW0uYXBwZW5kQ2hpbGQodGltZWxpbmVJdGVtSW5uZXIpO1xuXG4gICAgICAgIGxldCB5ZWFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgeWVhci5jbGFzc05hbWUgPSBcImMtdGltZWxpbmUtaXRlbV9feWVhclwiO1xuICAgICAgICB5ZWFyLnRleHRDb250ZW50ID0gdGltZWxpbmVMb29wSXRlbS55ZWFyO1xuICAgICAgICB0aW1lbGluZUl0ZW1Jbm5lci5hcHBlbmRDaGlsZCh5ZWFyKTtcblxuICAgICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0aXRsZS5jbGFzc05hbWUgPSBcImMtdGltZWxpbmUtaXRlbV9fdGl0bGVcIjtcbiAgICAgICAgdGl0bGUudGV4dENvbnRlbnQgPSB0aW1lbGluZUxvb3BJdGVtLnRpdGxlO1xuICAgICAgICB0aW1lbGluZUl0ZW1Jbm5lci5hcHBlbmRDaGlsZCh0aXRsZSk7XG5cbiAgICAgICAgdGhpcy5zbGlkZXJXcmFwcGVyLmFwcGVuZENoaWxkKHRpbWVsaW5lSXRlbSk7XG5cbiAgICAgICAgbGV0IHRoZXRhID0gaSAqIHRoaXMuaXRlbVJhZGl1c09mZnNldCArIE1hdGguUEk7XG4gICAgICAgIGxldCB5ID0gLShpICogMjAwKSArIDYwMDtcblxuICAgICAgICAvLyBjYW52YXNcbiAgICAgICAgY29uc3QgcGxhbmVHcm91cCA9IG5ldyBUSFJFRS5PYmplY3QzRCgpO1xuICAgICAgICBjb25zdCB0ZXh0dXJlID0gbmV3IFRIUkVFLlRleHR1cmVMb2FkZXIoKS5sb2FkKFxuICAgICAgICAgICAgdGhpcy50aW1lbGluZUl0ZW1zSW1hZ2VQYXRoICsgdGltZWxpbmVMb29wSXRlbS5pbWFnZSxcbiAgICAgICAgICAgICgpID0+IHtcbiAgICAgICAgICAgICAgICAvLyBpbWFnZSBwb3NpdGlvbiB0byBjb3ZlciB0aGUgcGxhbmVcbiAgICAgICAgICAgICAgICBjb25zdCBpbWFnZUFzcGVjdFJhdGlvID1cbiAgICAgICAgICAgICAgICAgICAgdGV4dHVyZS5pbWFnZS53aWR0aCAvIHRleHR1cmUuaW1hZ2UuaGVpZ2h0O1xuICAgICAgICAgICAgICAgIHRleHR1cmUud3JhcFQgPSBUSFJFRS5SZXBlYXRXcmFwcGluZztcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLnJlcGVhdC54ID0gdGhpcy5nZW9tZXRyeUFzcGVjdFJhdGlvIC8gaW1hZ2VBc3BlY3RSYXRpbztcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLm9mZnNldC54ID0gMC41ICogKDEgLSB0ZXh0dXJlLnJlcGVhdC54KTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICk7XG5cbiAgICAgICAgY29uc3QgcGxhbmVNYXRlcmlhbCA9IG5ldyBUSFJFRS5NZXNoQmFzaWNNYXRlcmlhbCh7XG4gICAgICAgICAgICBtYXA6IHRleHR1cmUsXG4gICAgICAgICAgICB0cmFuc3BhcmVudDogdHJ1ZSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcGxhbmVHcm91cC5wb3NpdGlvbi5zZXRGcm9tQ3lsaW5kcmljYWxDb29yZHMoNjQwLCB0aGV0YSwgeSk7XG5cbiAgICAgICAgdGhpcy52ZWN0b3IueCA9IHBsYW5lR3JvdXAucG9zaXRpb24ueCAqIDI7XG4gICAgICAgIHRoaXMudmVjdG9yLnkgPSBwbGFuZUdyb3VwLnBvc2l0aW9uLnk7XG4gICAgICAgIHRoaXMudmVjdG9yLnogPSBwbGFuZUdyb3VwLnBvc2l0aW9uLnogKiAyO1xuXG4gICAgICAgIGNvbnN0IHBsYW5lQmFjayA9IG5ldyBUSFJFRS5NZXNoKHBsYW5lR2VvbWV0cnlCYWNrLCBwbGFuZUJhY2tNYXRlcmlhbCk7XG4gICAgICAgIHBsYW5lQmFjay5uYW1lID0gXCJpdGVtIGltYWdlIGJhY2tcIjtcbiAgICAgICAgY29uc3QgaGVsaXhJdGVtID0gbmV3IFRIUkVFLk1lc2gocGxhbmVHZW9tZXRyeSwgcGxhbmVNYXRlcmlhbCk7XG4gICAgICAgIGhlbGl4SXRlbS5uYW1lID0gXCJpdGVtIGltYWdlXCI7XG4gICAgICAgIHBsYW5lR3JvdXAubmFtZSA9IGBjYW52YXMtcGxhbmUtJHt0aW1lbGluZUxvb3BJdGVtLnRpdGxlfSwgaW5kZXg6ICR7aX1gO1xuXG4gICAgICAgIHBsYW5lR3JvdXAuYWRkKGhlbGl4SXRlbSk7XG4gICAgICAgIHBsYW5lR3JvdXAuYWRkKHBsYW5lQmFjayk7XG4gICAgICAgIHRoaXMuc2NlbmUuYWRkKHBsYW5lR3JvdXApO1xuXG4gICAgICAgIHBsYW5lR3JvdXAucG9zaXRpb24uc2V0RnJvbUN5bGluZHJpY2FsQ29vcmRzKDY0MCwgdGhldGEsIHkpO1xuXG4gICAgICAgIHBsYW5lR3JvdXAubG9va0F0KHRoaXMudmVjdG9yKTtcbiAgICAgICAgdGhpcy5oZWxpeEl0ZW1zLnB1c2gocGxhbmVHcm91cCk7XG4gICAgfVxuXG4gICAgc3dpcGVySW5pdCgpIHtcbiAgICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XG4gICAgICAgIGxldCBwcm9ncmVzc1dpZHRoID0gdGhpcy5wcm9ncmVzc1dyYXBwZXIuY2xpZW50V2lkdGg7XG5cbiAgICAgICAgdGhpcy5zd2lwZXIgPSBuZXcgU3dpcGVyKHRoaXMuc2xpZGVyLCB7XG4gICAgICAgICAgICBsb29wOiBmYWxzZSxcbiAgICAgICAgICAgIHNsaWRlc1BlclZpZXc6IDEsXG4gICAgICAgICAgICAvLyBkaXJlY3Rpb246IFwidmVydGljYWxcIixcbiAgICAgICAgICAgIGNlbnRlcmVkU2xpZGVzOiB0cnVlLFxuICAgICAgICAgICAgc3BlZWQ6IDgwMCxcbiAgICAgICAgICAgIGdyYWJDdXJzb3I6IHRydWUsXG4gICAgICAgICAgICB3YXRjaFNsaWRlc1Byb2dyZXNzOiB0cnVlLFxuICAgICAgICAgICAgbW91c2V3aGVlbENvbnRyb2w6IHRydWUsXG4gICAgICAgICAgICBtb3VzZXdoZWVsOiB0cnVlLFxuICAgICAgICAgICAgLy8gVE9ETzogQFRvbW8g4oCUIHByb3VjaXQgbWFsbyBrYWogaSBrYWsgcmFkZSBvdmkgb3B0aW9uaSB6YSBmcmVlTW9kZVxuICAgICAgICAgICAgZnJlZU1vZGU6IHRydWUsXG4gICAgICAgICAgICBmcmVlTW9kZVN0aWNreTogdHJ1ZSxcbiAgICAgICAgICAgIGZyZWVNb2RlTW9tZW50dW06IHRydWUsXG4gICAgICAgICAgICBmcmVlTW9kZU1vbWVudHVtUmF0aW86IDEsXG4gICAgICAgICAgICBmcmVlTW9kZU1vbWVudHVtVmVsb2NpdHlSYXRpbzogMSxcbiAgICAgICAgICAgIGZyZWVNb2RlTW9tZW50dW1Cb3VuY2U6IHRydWUsXG4gICAgICAgICAgICBmcmVlTW9kZU1vbWVudHVtQm91bmNlUmF0aW86IDEsXG4gICAgICAgICAgICBmcmVlTW9kZU1pbmltdW1WZWxvY2l0eTogMC4wMixcbiAgICAgICAgICAgIC8vIGVmZmVjdDogXCJmYWRlXCIsXG4gICAgICAgICAgICAvLyBmYWRlRWZmZWN0OiB7XG4gICAgICAgICAgICAvLyAgICAgY3Jvc3NGYWRlOiB0cnVlLFxuICAgICAgICAgICAgLy8gfSxcbiAgICAgICAgICAgIC8vIG5hdmlnYXRpb246IHtcbiAgICAgICAgICAgIC8vICAgICBuZXh0RWw6IHRoaXMudGltZWxpbmVTbGlkZXJOZXh0LFxuICAgICAgICAgICAgLy8gICAgIHByZXZFbDogdGhpcy50aW1lbGluZVNsaWRlclByZXYsXG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICAgICAgICAgIGVsOiAnLmpzLXRpbWVsaW5lLXBhZ2luYXRpb24nLFxuICAgICAgICAgICAgICAgIGNsaWNrYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZW5kZXJCdWxsZXQ6IChpbmRleCwgY2xhc3NOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBgPHNwYW4gY2xhc3M9XCJjLXRpbWVsaW5lX19wYWdpbmF0aW9uLWJ1bGxldCAke2NsYXNzTmFtZX1cIj4ke3RoaXMudGltZWxpbmVJdGVtc1tpbmRleF0ueWVhcn08L3NwYW4+YDtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgcHJvZ3Jlc3M6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IHN3aXBlciA9IHRoaXM7XG5cbiAgICAgICAgICAgICAgICAgICAgZ3NhcC50byhzZWxmLnByb2dyZXNzRG90LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiBzd2lwZXIucHJvZ3Jlc3MgKiBwcm9ncmVzc1dpZHRoLFxuICAgICAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgICAgICAgICBnc2FwLnRvKHNlbGYuY2FtZXJhV3JhcHBlci5yb3RhdGlvbiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDAuOCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGVhc2U6IFwicG93ZXIyLm91dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeTpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAoc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKSAqXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5pdGVtUmFkaXVzT2Zmc2V0ICpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzd2lwZXIucHJvZ3Jlc3MgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaW5pdGlhbENhbWVyYVdyYXBwZXJSb3RhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICAgICAgZ3NhcC50byhzZWxmLmNhbWVyYVdyYXBwZXIucG9zaXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgZWFzZTogXCJwb3dlcjIub3V0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB5OlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaW5pdGlhbENhbWVyYVdyYXBwZXJQb3NpdGlvbiAtXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKHN3aXBlci5zbGlkZXMubGVuZ3RoIC0gMSkgKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuaGVsaXhPZmZzZXRCeUl0ZW0gKlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN3aXBlci5wcm9ncmVzcyxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBpbml0OiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHRyZWJhbW8gdGltZW91dCB6Ym9nIGRvbWEgKGRvayBzZSBuZSBzdHZvciBpIHBhZ2luYWNpYSlcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9ncmVzc1dpZHRoID0gdGhpcy5wcm9ncmVzc1dyYXBwZXIuY2xpZW50V2lkdGg7XG4gICAgICAgICAgICAgICAgICAgIH0sIDMwMCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGRvZigpIHtcbiAgICAgICAgdmFyIHJlbmRlclBhc3MgPSBuZXcgUmVuZGVyUGFzcyh0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSk7XG5cbiAgICAgICAgdmFyIGJva2VoUGFzcyA9IG5ldyBCb2tlaFBhc3ModGhpcy5zY2VuZSwgdGhpcy5jYW1lcmEsIHtcbiAgICAgICAgICAgIHdpZHRoOiB0aGlzLndpbldpZHRoLFxuICAgICAgICAgICAgaGVpZ2h0OiB0aGlzLndpbkhlaWdodCxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgY29tcG9zZXIgPSBuZXcgRWZmZWN0Q29tcG9zZXIodGhpcy5jYW52YXNSZW5kZXJlcik7XG5cbiAgICAgICAgY29tcG9zZXIuYWRkUGFzcyhyZW5kZXJQYXNzKTtcbiAgICAgICAgY29tcG9zZXIuYWRkUGFzcyhib2tlaFBhc3MpO1xuXG4gICAgICAgIHRoaXMucG9zdHByb2Nlc3NpbmcuY29tcG9zZXIgPSBjb21wb3NlcjtcbiAgICAgICAgdGhpcy5wb3N0cHJvY2Vzc2luZy5ib2tlaCA9IGJva2VoUGFzcztcbiAgICB9XG5cbiAgICBtb3VzZU1vdmUoKSB7XG4gICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIChldikgPT4ge1xuICAgICAgICAgICAgdGhpcy5tb3VzZS54ID1cbiAgICAgICAgICAgICAgICAoMjAgLyB0aGlzLndpbldpZHRoKSAqIChldi5jbGllbnRYIC0gdGhpcy53aW5XaWR0aCAvIDIpO1xuICAgICAgICAgICAgdGhpcy5tb3VzZS55ID1cbiAgICAgICAgICAgICAgICAoMjAgLyB0aGlzLndpbkhlaWdodCkgKiAoZXYuY2xpZW50WSAtIHRoaXMud2luSGVpZ2h0IC8gMik7XG5cbiAgICAgICAgICAgIGdzYXAudG8odGhpcy5jYW1lcmEucG9zaXRpb24sIHtcbiAgICAgICAgICAgICAgICB4OiB0aGlzLm1vdXNlLngsXG4gICAgICAgICAgICAgICAgeTogdGhpcy5tb3VzZS55LFxuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxLjUsXG4gICAgICAgICAgICAgICAgZWFzZTogXCJwb3dlcjMub3V0XCIsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZ3NhcC50byh0aGlzLnNsaWRlciwge1xuICAgICAgICAgICAgICAgIHg6IC10aGlzLm1vdXNlLnggKiAzLFxuICAgICAgICAgICAgICAgIHk6IHRoaXMubW91c2UueSAqIDMsXG4gICAgICAgICAgICAgICAgZHVyYXRpb246IDEsXG4gICAgICAgICAgICAgICAgZWFzZTogXCJwb3dlcjMub3V0XCIsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgYWRkQmdJbWFnZSgpIHtcbiAgICAgICAgbGV0IHRleHR1cmUgPSBuZXcgVEhSRUUuVGV4dHVyZUxvYWRlcigpLmxvYWQoXG4gICAgICAgICAgICB0aGlzLnRpbWVsaW5lSXRlbXNJbWFnZVBhdGggKyBcInRpbWVsaW5lLWJhY2tncm91bmQucG5nXCIsXG4gICAgICAgICAgICAoKSA9PiB7XG4gICAgICAgICAgICAgICAgLy8gaW1hZ2UgcG9zaXRpb24gdG8gY292ZXIgdGhlIHBsYW5lXG4gICAgICAgICAgICAgICAgY29uc3QgaW1hZ2VBc3BlY3RSYXRpbyA9XG4gICAgICAgICAgICAgICAgICAgIHRleHR1cmUuaW1hZ2Uud2lkdGggLyB0ZXh0dXJlLmltYWdlLmhlaWdodDtcbiAgICAgICAgICAgICAgICB0ZXh0dXJlLndyYXBUID0gVEhSRUUuUmVwZWF0V3JhcHBpbmc7XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5yZXBlYXQueCA9IHRoaXMuZ2VvbWV0cnlBc3BlY3RSYXRpbyAvIGltYWdlQXNwZWN0UmF0aW87XG4gICAgICAgICAgICAgICAgdGV4dHVyZS5vZmZzZXQueCA9IDAuNSAqICgxIC0gdGV4dHVyZS5yZXBlYXQueCk7XG4gICAgICAgICAgICB9LFxuICAgICAgICApO1xuXG4gICAgICAgIGxldCBiZ01hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hCYXNpY01hdGVyaWFsKHtcbiAgICAgICAgICAgIG1hcDogdGV4dHVyZSxcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgYmdHZW9tZXRyeSA9IG5ldyBUSFJFRS5QbGFuZUdlb21ldHJ5KDY0MDAsIDM2MDAsIDEsIDEpO1xuICAgICAgICBjb25zdCBiZyA9IG5ldyBUSFJFRS5NZXNoKGJnR2VvbWV0cnksIGJnTWF0ZXJpYWwpO1xuICAgICAgICBiZy5wb3NpdGlvbi5zZXQoMCwgMjAwLCAtMTAwMCk7XG4gICAgICAgIHRoaXMuY2FtZXJhV3JhcHBlci5hZGQoYmcpO1xuICAgIH1cblxuICAgIHBvcHVwQ29udHJvbGxlcigpIHtcbiAgICAgICAgaWYgKHRoaXMuc3dpcGVyID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zd2lwZXIuc2xpZGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB0aGlzLnN3aXBlci5zbGlkZXNbaV0uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMucG9wdXBPcGVuZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5zbGlkZVpvb20oKTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlSGVsaXhJdGVtcyh0aGlzLnN3aXBlci5zbGlkZXNbaV0sIGkpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5Qb3B1cChpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucG9wdXBDbG9zZS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMucG9wdXBPcGVuZWQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnNsaWRlWm9vbSgpO1xuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VQb3B1cCgpO1xuICAgICAgICAgICAgICAgIHRoaXMuc2hvd0hlbGl4SXRlbXMoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCAoZXYpID0+IHtcbiAgICAgICAgICAgIGlmIChldi5rZXkgPT09IFwiRXNjYXBlXCIgJiYgdGhpcy5wb3B1cE9wZW5lZCkge1xuICAgICAgICAgICAgICAgIHRoaXMuc2xpZGVab29tKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZVBvcHVwKCk7XG4gICAgICAgICAgICAgICAgdGhpcy5zaG93SGVsaXhJdGVtcygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBvcGVuUG9wdXAoaW5kZXgpIHtcbiAgICAgICAgdGhpcy5wb3B1cE9wZW5lZCA9IHRydWU7XG4gICAgICAgIGdzYXAudG8odGhpcy5wb3B1cCwge1xuICAgICAgICAgICAgYXV0b0FscGhhOiAxLFxuICAgICAgICAgICAgZGVsYXk6IDAuNSxcbiAgICAgICAgICAgIG9uQ29tcGxldGU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnBvcHVwLmNsYXNzTGlzdC5hZGQoXCJpcy1hY3RpdmVcIik7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcblxuICAgICAgICB0aGlzLnBvcHVwWWVhci5pbm5lclRleHQgPSB0aGlzLnRpbWVsaW5lSXRlbXNbaW5kZXhdLnllYXI7XG4gICAgICAgIHRoaXMucG9wdXBUaXRsZS5pbm5lclRleHQgPSB0aGlzLnRpbWVsaW5lSXRlbXNbaW5kZXhdLnRpdGxlO1xuICAgICAgICB0aGlzLnBvcHVwQ29udGVudC5pbm5lclRleHQgPSB0aGlzLnRpbWVsaW5lSXRlbXNbaW5kZXhdLnRleHQ7XG5cbiAgICAgICAgZ3NhcC50byhbXCIuanMtdGltZWxpbmUtcGFnaW5hdGlvblwiLCBcIi5qcy1iYWNrLWJ0blwiLCB0aGlzLnN3aXBlci5zbGlkZXMsIHRoaXMucHJvZ3Jlc3NXcmFwcGVyXSwge1xuICAgICAgICAgICAgYXV0b0FscGhhOiAwLFxuICAgICAgICAgICAgZHVyYXRpb246IDAuMixcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY2xvc2VQb3B1cCgpIHtcbiAgICAgICAgdGhpcy5wb3B1cE9wZW5lZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLnBvcHVwWWVhci5pbm5lclRleHQgPSBcIlwiO1xuICAgICAgICB0aGlzLnBvcHVwVGl0bGUuaW5uZXJUZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy5wb3B1cENvbnRlbnQuaW5uZXJUZXh0ID0gXCJcIjtcbiAgICAgICAgdGhpcy5wb3B1cC5jbGFzc0xpc3QucmVtb3ZlKFwiaXMtYWN0aXZlXCIpO1xuXG4gICAgICAgIGdzYXAudG8odGhpcy5wb3B1cCwge1xuICAgICAgICAgICAgYXV0b0FscGhhOiAwLFxuICAgICAgICB9KTtcblxuICAgICAgICBnc2FwLnRvKFtcIi5qcy10aW1lbGluZS1wYWdpbmF0aW9uXCIsIFwiLmpzLWJhY2stYnRuXCIsIHRoaXMuc3dpcGVyLnNsaWRlcywgdGhpcy5wcm9ncmVzc1dyYXBwZXJdLCB7XG4gICAgICAgICAgICBhdXRvQWxwaGE6IDEsXG4gICAgICAgICAgICBkdXJhdGlvbjogMC4yLFxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBzbGlkZVpvb20oKSB7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRDYW1lcmFXcmFwcGVyWVBvc2l0aW9uID0gdGhpcy5pbml0aWFsQ2FtZXJhV3JhcHBlclBvc2l0aW9uIC0gKHRoaXMuc3dpcGVyLnNsaWRlcy5sZW5ndGggLSAxKSAqIHRoaXMuaGVsaXhPZmZzZXRCeUl0ZW0gKiB0aGlzLnN3aXBlci5wcm9ncmVzcztcblxuICAgICAgICBpZiAodGhpcy5wb3B1cE9wZW5lZCkge1xuICAgICAgICAgICAgZ3NhcC50byh0aGlzLmNhbWVyYS5wb3NpdGlvbiwge1xuICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAwLjgsXG4gICAgICAgICAgICAgICAgejogdGhpcy5pbml0aWFsQ2FtZXJhWlBvc2l0aW9uLFxuICAgICAgICAgICAgICAgIGVhc2U6IFwicG93ZXI0LmluT3V0XCIsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZ3NhcC50byh0aGlzLmNhbWVyYVdyYXBwZXIucG9zaXRpb24sIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMC44LFxuICAgICAgICAgICAgICAgIHk6IGN1cnJlbnRDYW1lcmFXcmFwcGVyWVBvc2l0aW9uLFxuICAgICAgICAgICAgICAgIGVhc2U6IFwicG93ZXI0LmluT3V0XCIsXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgZ3NhcC50byh0aGlzLnBvc3Rwcm9jZXNzaW5nLmJva2VoLnVuaWZvcm1zW1wiZm9jdXNcIl0sIHtcbiAgICAgICAgICAgICAgICBkdXJhdGlvbjogMC44LFxuICAgICAgICAgICAgICAgIHZhbHVlOiAzNjAsXG4gICAgICAgICAgICAgICAgZWFzZTogXCJwb3dlcjQuaW5PdXRcIixcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICBnc2FwLnRvKHRoaXMuY2FtZXJhLnBvc2l0aW9uLCB7XG4gICAgICAgICAgICBkdXJhdGlvbjogMC44LFxuICAgICAgICAgICAgejogODUwLFxuICAgICAgICAgICAgZWFzZTogXCJwb3dlcjQub3V0XCIsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGdzYXAudG8odGhpcy5jYW1lcmFXcmFwcGVyLnBvc2l0aW9uLCB7XG4gICAgICAgICAgICBkdXJhdGlvbjogMC44LFxuICAgICAgICAgICAgeTogY3VycmVudENhbWVyYVdyYXBwZXJZUG9zaXRpb24gKyA1MCxcbiAgICAgICAgICAgIGVhc2U6IFwicG93ZXI0Lm91dFwiLFxuICAgICAgICB9KTtcblxuICAgICAgICBnc2FwLnRvKHRoaXMucG9zdHByb2Nlc3NpbmcuYm9rZWgudW5pZm9ybXNbXCJmb2N1c1wiXSwge1xuICAgICAgICAgICAgZHVyYXRpb246IDAuOCxcbiAgICAgICAgICAgIHZhbHVlOiAyMDAsXG4gICAgICAgICAgICBlYXNlOiBcInBvd2VyNC5vdXRcIixcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgaGlkZUhlbGl4SXRlbXMoc2xpZGUsIGluZGV4KSB7XG4gICAgICAgIHRoaXMuaGVsaXhJdGVtcy5mb3JFYWNoKChwbGFuZSwgaSkgPT4ge1xuICAgICAgICAgICAgaWYgKGkgIT09IGluZGV4KSB7XG4gICAgICAgICAgICAgICAgaWYgKHBsYW5lLmNoaWxkcmVuWzBdKSB7XG4gICAgICAgICAgICAgICAgICAgIGdzYXAudG8ocGxhbmUuY2hpbGRyZW5bMF0ubWF0ZXJpYWwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDAsXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIGlmIChwbGFuZS5jaGlsZHJlblsxXSkge1xuICAgICAgICAgICAgICAgICAgICBnc2FwLnRvKHBsYW5lLmNoaWxkcmVuWzFdLm1hdGVyaWFsLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHNob3dIZWxpeEl0ZW1zKCkge1xuICAgICAgICB0aGlzLmhlbGl4SXRlbXMuZm9yRWFjaCgocGxhbmUpID0+IHtcbiAgICAgICAgICAgIGlmIChwbGFuZS5jaGlsZHJlblswXSkge1xuICAgICAgICAgICAgICAgIGdzYXAudG8ocGxhbmUuY2hpbGRyZW5bMF0ubWF0ZXJpYWwsIHtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgaWYgKHBsYW5lLmNoaWxkcmVuWzFdKSB7XG4gICAgICAgICAgICAgICAgZ3NhcC50byhwbGFuZS5jaGlsZHJlblsxXS5tYXRlcmlhbCwge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCJpbXBvcnQgeyBnc2FwIH0gZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5cbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZGVvU2NydWIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgIHZpZGVvOiBcIi5qcy12aWRlby1zY3J1YlwiLFxuICAgICAgICAgICAgcGFnZTogXCIjdmlkZW8tc2NydWJcIixcbiAgICAgICAgICAgIHZpZGVvU2NydWJUcmlnZ2VyOiBcIi5qcy12aWRlby1zY3J1Yi10cmlnZ2VyXCIsXG4gICAgICAgICAgICBzdGF0ZXM6IHtcbiAgICAgICAgICAgICAgICBpc1BsYXlpbmc6IFwiaXMtdmlkZW8tcGxheWluZ1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLnZpZGVvID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLkRPTS52aWRlbyk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJWaWRlb1NjcnViIGluaXQoKVwiKTtcbiAgICAgICAgdGhpcy5nc2FwU2Nyb2xsVHJpZ2dlclZpZGVvUGxheSgpO1xuICAgIH1cbiAgICBnc2FwU2Nyb2xsVHJpZ2dlclZpZGVvUGxheSgpIHtcbiAgICAgICAgdGhpcy52aWRlby5hZGRFdmVudExpc3RlbmVyKFwibG9hZGVkZGF0YVwiLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnZpZGVvLnBhdXNlKCk7XG5cbiAgICAgICAgICAgIGxldCB2aWRlb1NjcnViID0gZ3NhcC50byh0aGlzLnZpZGVvLCB7XG4gICAgICAgICAgICAgICAgZHVyYXRpb246IHRoaXMudmlkZW8uZHVyYXRpb24sXG4gICAgICAgICAgICAgICAgY3VycmVudFRpbWU6IHRoaXMudmlkZW8uZHVyYXRpb24sXG4gICAgICAgICAgICAgICAgZWFzZTogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgb3ZlcndyaXRlOiB0cnVlLFxuICAgICAgICAgICAgICAgIHBhdXNlOiB0cnVlLFxuICAgICAgICAgICAgICAgIG9uVXBkYXRlOiAoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMudmlkZW8uY3VycmVudFRpbWUpO1xuICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnZpZGVvLmR1cmF0aW9uKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcbiAgICAgICAgICAgICAgICAvLyB0cmlnZ2VyOiB0aGlzLkRPTS52aWRlb1NjcnViVHJpZ2dlcixcbiAgICAgICAgICAgICAgICAvLyBtYXJrZXJzOiB0cnVlLFxuICAgICAgICAgICAgICAgIGFuaW1hdGlvbjogdmlkZW9TY3J1YixcbiAgICAgICAgICAgICAgICBzY3J1YjogMC4xLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIERhcmtNb2RlSGVscGVyIHtcbiAgICAvKipcbiAgICAgKlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLkRPTSA9IHtcbiAgICAgICAgICAgIGJvZHk6IFwiYm9keVwiLFxuICAgICAgICAgICAgc3RhdGVzOiB7XG4gICAgICAgICAgICAgICAgaXNMaWdodDogXCJpcy1saWdodFwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBjb25zb2xlTG9nU3R5bGUgPSBbXG4gICAgICAgICAgICBcImJhY2tncm91bmQtY29sb3I6ICNhNmE2YTZcIixcbiAgICAgICAgICAgIFwiY29sb3I6IGJsYWNrXCIsXG4gICAgICAgICAgICBcImRpc3BsYXk6IGJsb2NrXCIsXG4gICAgICAgICAgICBcImxpbmUtaGVpZ2h0OiAyNHB4XCIsXG4gICAgICAgICAgICBcInRleHQtYWxpZ246IGNlbnRlclwiLFxuICAgICAgICAgICAgXCJib3JkZXI6IDFweCBzb2xpZCAjZmZmZmZmXCIsXG4gICAgICAgICAgICBcImZvbnQtd2VpZ2h0OiBib2xkXCIsXG4gICAgICAgIF0uam9pbihcIjtcIik7XG5cbiAgICAgICAgdGhpcy5ib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUodGhpcy5ET00uYm9keSlbMF07XG5cbiAgICAgICAgY29uc29sZS5pbmZvKFwidG9nZ2xlIGRhcmsgbW9kZTogJWMgQWx0L09wdGlvbiArIEQgXCIsIGNvbnNvbGVMb2dTdHlsZSk7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCJEYXJrTW9kZUhlbHBlciBpbml0KClcIik7XG4gICAgICAgIHRoaXMudG9nZ2xlRGFya01vZGUoKTtcbiAgICB9XG5cbiAgICB0b2dnbGVEYXJrTW9kZSgpIHtcbiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIChldikgPT4ge1xuICAgICAgICAgICAgaWYgKGV2LmtleUNvZGUgPT09IDY4ICYmIGV2LmFsdEtleSkge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmJvZHkuY2xhc3NMaXN0LmNvbnRhaW5zKHRoaXMuRE9NLnN0YXRlcy5pc0xpZ2h0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmJvZHkuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLkRPTS5zdGF0ZXMuaXNMaWdodCk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ib2R5LmNsYXNzTGlzdC5hZGQodGhpcy5ET00uc3RhdGVzLmlzTGlnaHQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JpZEhlbHBlciB7XG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ET00gPSB7XG4gICAgICAgICAgICBncmlkOiBcImdyaWRcIixcbiAgICAgICAgfTtcblxuICAgICAgICB0aGlzLmdyaWRPcHRpb25zID0ge1xuICAgICAgICAgICAgaW5pdGlhbERpc3BsYXk6IFwibm9uZVwiLCAvL1wiZmxleFwiIG9yIFwibm9uZVwiXG4gICAgICAgICAgICBncmlkV2lkdGg6IDE0NDAsIC8vIHB4XG4gICAgICAgICAgICBjb2x1bW5Db3VudDogMjQsXG4gICAgICAgICAgICBncmlkQ29sb3I6IFwicmdiKDI1NSwgMCwgMjU1LCAwLjE1KVwiLFxuICAgICAgICAgICAgY29sdW1uQmdDb2xvcjogXCJyZ2IoMjU1LCAwLCAyNTUsIDAuMDI1KVwiLFxuICAgICAgICAgICAgZ3V0dGVyV2lkdGg6IDAsIC8vIHB4XG4gICAgICAgICAgICBndXR0ZXJGaXhlZDogZmFsc2UsXG4gICAgICAgIH07XG5cbiAgICAgICAgY29uc3QgY29uc29sZUxvZ1N0eWxlID0gW1xuICAgICAgICAgICAgXCJiYWNrZ3JvdW5kLWNvbG9yOiAjYTZhNmE2XCIsXG4gICAgICAgICAgICBcImNvbG9yOiBibGFja1wiLFxuICAgICAgICAgICAgXCJkaXNwbGF5OiBibG9ja1wiLFxuICAgICAgICAgICAgXCJsaW5lLWhlaWdodDogMjRweFwiLFxuICAgICAgICAgICAgXCJ0ZXh0LWFsaWduOiBjZW50ZXJcIixcbiAgICAgICAgICAgIFwiYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZlwiLFxuICAgICAgICAgICAgXCJmb250LXdlaWdodDogYm9sZFwiLFxuICAgICAgICBdLmpvaW4oXCI7XCIpO1xuXG4gICAgICAgIGNvbnNvbGUuaW5mbyhcInRvZ2dsZSBncmlkOiAlYyBBbHQvT3B0aW9uICsgRyBcIiwgY29uc29sZUxvZ1N0eWxlKTtcblxuICAgICAgICB0aGlzLmdyaWQgPSBudWxsO1xuXG4gICAgICAgIHRoaXMuY29sdW1uV2lkdGggPVxuICAgICAgICAgICAgKHRoaXMuZ3JpZE9wdGlvbnMuZ3JpZFdpZHRoIC1cbiAgICAgICAgICAgICAgICAodGhpcy5ncmlkT3B0aW9ucy5jb2x1bW5Db3VudCAtIDEpICpcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCkgL1xuICAgICAgICAgICAgdGhpcy5ncmlkT3B0aW9ucy5jb2x1bW5Db3VudDtcblxuICAgICAgICB0aGlzLmNvbHVtbldpZHRoUGVyY2VudGFnZSA9IGAke1xuICAgICAgICAgICAgKHRoaXMuY29sdW1uV2lkdGggLyB0aGlzLmdyaWRPcHRpb25zLmdyaWRXaWR0aCkgKiAxMDBcbiAgICAgICAgfSVgO1xuXG4gICAgICAgIHRoaXMuZ3V0dGVyV2lkdGhQZXJjZW50YWdlID0gYCR7XG4gICAgICAgICAgICAodGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCAvIHRoaXMuZ3JpZE9wdGlvbnMuZ3JpZFdpZHRoKSAqIDEwMFxuICAgICAgICB9JWA7XG4gICAgfVxuXG4gICAgaW5pdCgpIHtcbiAgICAgICAgY29uc29sZS5sb2coXCJHcmlkSGVscGVyIGluaXQoKVwiKTtcbiAgICAgICAgdGhpcy5pbml0R3JpZCgpO1xuICAgICAgICB0aGlzLmtleWJvYXJkU2hvcnRjdXQoKTtcbiAgICB9XG5cbiAgICBpbml0R3JpZCgpIHtcbiAgICAgICAgLy8gY3JlYXRlIGdyaWQgb3ZlcmxheSBlbGVtZW50XG4gICAgICAgIHRoaXMuZ3JpZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHRoaXMuZ3JpZC5pZCA9IHRoaXMuRE9NLmdyaWQ7XG5cbiAgICAgICAgLy8gc3R5bGUgZ3JpZCBlbGVtZW50XG4gICAgICAgIHRoaXMuZ3JpZC5zdHlsZS5jc3NUZXh0ID0gYFxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG4gICAgICAgICAgICBkaXNwbGF5OiAke3RoaXMuZ3JpZE9wdGlvbnMuaW5pdGlhbERpc3BsYXl9O1xuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgbWF4LXdpZHRoOiAke3RoaXMuZ3JpZE9wdGlvbnMuZ3JpZFdpZHRofXB4O1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogNTAlO1xuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgICAgICAgei1pbmRleDogOTk5O1xuICAgICAgICBgO1xuXG4gICAgICAgIGlmICghdGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuZ3JpZC5zdHlsZS5ib3JkZXJMZWZ0ID0gXCJub25lXCI7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBhZGQgZ3JpZCBjb250YWluZXIgdG8gcGFnZVxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMuZ3JpZCk7XG5cbiAgICAgICAgLy8gYWRkIGNvbHVtbnMgdG8gZ3JpZFxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuZ3JpZE9wdGlvbnMuY29sdW1uQ291bnQ7IGkrKykge1xuICAgICAgICAgICAgdmFyIGNvbHVtbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpXCIpO1xuICAgICAgICAgICAgdGhpcy5ncmlkLmFwcGVuZENoaWxkKGNvbHVtbik7XG5cbiAgICAgICAgICAgIGNvbHVtbi5zdHlsZS5jc3NUZXh0ID0gYFxuICAgICAgICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICAgICAgICBmbGV4LWdyb3c6IDE7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHt0aGlzLmdyaWRPcHRpb25zLmNvbHVtbkJnQ29sb3J9O1xuICAgICAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgJHt0aGlzLmdyaWRPcHRpb25zLmdyaWRDb2xvcn07XG4gICAgICAgICAgICBgO1xuXG4gICAgICAgICAgICBpZiAodGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4uc3R5bGUuYm9yZGVyUmlnaHQgPSBgMXB4IHNvbGlkICR7dGhpcy5ncmlkT3B0aW9ucy5ncmlkQ29sb3J9YDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5ncmlkLnN0eWxlLmJvcmRlclJpZ2h0ID0gYDFweCBzb2xpZCAke3RoaXMuZ3JpZE9wdGlvbnMuZ3JpZENvbG9yfWA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICh0aGlzLmdyaWRPcHRpb25zLmd1dHRlckZpeGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29sdW1uLnN0eWxlLm1hcmdpblJpZ2h0ID0gYCR7dGhpcy5ncmlkT3B0aW9ucy5ndXR0ZXJXaWR0aH1weGA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbHVtbi5zdHlsZS5tYXJnaW5SaWdodCA9IHRoaXMuZ3V0dGVyV2lkdGhQZXJjZW50YWdlO1xuICAgICAgICAgICAgICAgIGNvbHVtbi5zdHlsZS53aWR0aCA9IHRoaXMuY29sdW1uV2lkdGhQZXJjZW50YWdlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5ncmlkLmxhc3RDaGlsZC5zdHlsZS5tYXJnaW5SaWdodCA9IDA7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgICBrZXlib2FyZFNob3J0Y3V0KCkge1xuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgKGV2KSA9PiB7XG4gICAgICAgICAgICBpZiAoZXYua2V5Q29kZSA9PT0gNzEgJiYgZXYuYWx0S2V5KSB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZ3JpZC5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIikge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmdyaWQuc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZ3JpZC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59XG4iLCJpbXBvcnQgR3JpZEhlbHBlciBmcm9tIFwiLi9oZWxwZXJzL0dyaWRIZWxwZXJcIjtcbmltcG9ydCBEYXJrTW9kZUhlbHBlciBmcm9tIFwiLi9oZWxwZXJzL0RhcmtNb2RlSGVscGVyXCI7XG5pbXBvcnQgTmF2aWdhdGlvbkNvbnRyb2xsZXIgZnJvbSBcIi4vY29tcG9uZW50cy9OYXZpZ2F0aW9uQ29udHJvbGxlclwiO1xuaW1wb3J0IFRpbWVsaW5lU2xpZGVyIGZyb20gXCIuL2NvbXBvbmVudHMvVGltZWxpbmVTbGlkZXJcIjtcbmltcG9ydCBWaWRlb1NjcnViIGZyb20gXCIuL2NvbXBvbmVudHMvVmlkZW9TY3J1YlwiO1xuaW1wb3J0IFNjcm9sbFByb2dyZXNzIGZyb20gXCIuL2NvbXBvbmVudHMvU2Nyb2xsUHJvZ3Jlc3NcIjtcbmltcG9ydCBEdW1teSBmcm9tIFwiLi9jb21wb25lbnRzL0R1bW15XCI7XG5pbXBvcnQgR3JhZGllbnRCZyBmcm9tIFwiLi9jb21wb25lbnRzL0dyYWRpZW50QmdcIjtcblxuY29uc3QgcmVhZHkgPSAoY2FsbGJhY2tGdW5jKSA9PiB7XG4gICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBEb2N1bWVudCBpcyBhbHJlYWR5IHJlYWR5LCBjYWxsIHRoZSBjYWxsYmFjayBkaXJlY3RseVxuICAgICAgICAgKi9cbiAgICAgICAgY2FsbGJhY2tGdW5jKCk7XG4gICAgfSBlbHNlIGlmIChkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBBbGwgbW9kZXJuIGJyb3dzZXJzIHRvIHJlZ2lzdGVyIERPTUNvbnRlbnRMb2FkZWRcbiAgICAgICAgICovXG4gICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJET01Db250ZW50TG9hZGVkXCIsIGNhbGxiYWNrRnVuYyk7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE9sZCBJRSBicm93c2Vyc1xuICAgICAgICAgKi9cbiAgICAgICAgZG9jdW1lbnQuYXR0YWNoRXZlbnQoXCJvbnJlYWR5c3RhdGVjaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgaWYgKGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIikge1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrRnVuYygpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG4vKipcbiAqIERvY3VtZW50IHJlYWR5IGNhbGxiYWNrXG4gKi9cbnJlYWR5KCgpID0+IHtcbiAgICBjb25zdCBjcmVkaXRzID0gW1xuICAgICAgICBcImJhY2tncm91bmQtY29sb3I6ICMwMDAwMDBcIixcbiAgICAgICAgXCJjb2xvcjogd2hpdGVcIixcbiAgICAgICAgXCJkaXNwbGF5OiBibG9ja1wiLFxuICAgICAgICBcImxpbmUtaGVpZ2h0OiAyNHB4XCIsXG4gICAgICAgIFwidGV4dC1hbGlnbjogY2VudGVyXCIsXG4gICAgICAgIFwiYm9yZGVyOiAxcHggc29saWQgI2ZmZmZmZlwiLFxuICAgICAgICBcImZvbnQtd2VpZ2h0OiBib2xkXCIsXG4gICAgXS5qb2luKFwiO1wiKTtcblxuICAgIGNvbnNvbGUuaW5mbyhcImRldiBieTogJWMgQm9ybmZpZ2h0IFwiLCBjcmVkaXRzKTtcblxuICAgIGNvbnN0IGdyaWRIZWxwZXIgPSBuZXcgR3JpZEhlbHBlcigpO1xuICAgIGdyaWRIZWxwZXIuaW5pdCgpO1xuXG4gICAgY29uc3QgZGFya01vZGVIZWxwZXIgPSBuZXcgRGFya01vZGVIZWxwZXIoKTtcbiAgICBkYXJrTW9kZUhlbHBlci5pbml0KCk7XG5cbiAgICBjb25zdCBkdW1teSA9IG5ldyBEdW1teSgpO1xuICAgIGR1bW15LmluaXQoKTtcblxuICAgIGNvbnN0IG5hdmlnYXRpb24gPSBuZXcgTmF2aWdhdGlvbkNvbnRyb2xsZXIoKTtcbiAgICBuYXZpZ2F0aW9uLmluaXQoKTtcblxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRpbWVsaW5lLXNsaWRlclwiKSAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB0aW1lbGluZVNsaWRlciA9IG5ldyBUaW1lbGluZVNsaWRlcigpO1xuICAgIH1cblxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInZpZGVvLXNjcnViXCIpICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHZpZGVvU2NydWIgPSBuZXcgVmlkZW9TY3J1YigpO1xuICAgICAgICB2aWRlb1NjcnViLmluaXQoKTtcbiAgICB9XG5cbiAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzY3JvbGwtcHJvZ3Jlc3NcIikgIT09IG51bGwpIHtcbiAgICAgICAgY29uc3Qgc2Nyb2xsUHJvZ3Jlc3MgPSBuZXcgU2Nyb2xsUHJvZ3Jlc3MoKTtcbiAgICAgICAgc2Nyb2xsUHJvZ3Jlc3MuaW5pdCgpO1xuICAgIH1cblxuICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdyYWRpZW50XCIpICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IGdyYWRpZW50QmcgPSBuZXcgR3JhZGllbnRCZygpO1xuICAgICAgICBncmFkaWVudEJnLmluaXQoKTtcbiAgICB9XG59KTtcbiJdfQ=="}