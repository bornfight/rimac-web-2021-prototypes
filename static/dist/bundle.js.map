{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/Dummy.js","static/js/components/NavigationController.js","static/js/components/TimelineSlider.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class Dummy {\n    constructor() {}\n\n    init() {\n        console.log(\"Loaded!\");\n    }\n}\n","/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n\n        this.DOM = {\n            navigation: \".js-navigation-wrapper\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n    /**\n     *\n     */\n    init() {\n        console.log(\"Navigation init()\");\n\n        if (this.navigation !== null) {\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(\n                this.DOM.states.navigationScrolled,\n            );\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","import * as THREE from \"three\";\nimport {\n    CSS3DObject,\n    CSS3DRenderer,\n} from \"three/examples/jsm/renderers/CSS3DRenderer.js\";\n\nimport Swiper from \"swiper\";\n\nexport default class TimelineSlider {\n    constructor() {\n        this.DOM = {\n            timeline: \".js-timeline\",\n\n            timelineSlider: \".js-timeline-slider\",\n            timelineSliderNext: \".js-timeline-slider-next\",\n            timelineSliderPrev: \".js-timeline-slider-previous\",\n            states: {},\n        };\n\n        this.options = {\n            transitionSpeed: 1000,\n        };\n\n        this.timeline = document.querySelector(this.DOM.timeline);\n\n        this.timelineItemsImagePath = \"static/images/\";\n        this.timelineItems = [\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2008\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2009\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2010\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2011\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2012\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2013\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2014\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2015\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2016\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2017\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2018\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2019\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2020\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n        ];\n\n        this.timelineSlider = document.querySelector(this.DOM.timelineSlider);\n\n        this.timelineSliderPrev = document.querySelector(this.DOM.timelineSliderPrev);\n        this.timelineSliderNext = document.querySelector(this.DOM.timelineSliderNext);\n\n        this.camera = null;\n        this.scene = null;\n        this.renderer = null;\n\n        this.helixItems = [];\n\n        this.helix = null;\n\n        this.init();\n        this.initSwiper();\n    }\n\n    init() {\n        console.log(\"TimelineSlider init()\");\n\n        this.scene = new THREE.Scene();\n\n        const options = {\n            camera: {\n                fov: 60,\n                near: 10,\n                far: 3000,\n                posX: -180,\n                posY: 100,\n                posZ: 1080,\n            }\n        };\n\n        this.camera = new THREE.PerspectiveCamera(\n            options.camera.fov,\n            window.innerWidth / window.innerHeight,\n            options.camera.near,\n            options.camera.far,\n        );\n\n        this.camera.lookAt(0, 0, 0);\n\n        this.camera.position.x = 0;\n        this.camera.position.y = 275;\n        this.camera.position.z = 1020;\n\n\n        this.cameraWrapper = new THREE.Object3D();\n        this.cameraWrapper.position.set(0, 275, 0);\n        this.cameraWrapper.rotation.y = 3.150;\n        this.cameraWrapper.name = \"camera wrapper\";\n        this.cameraWrapper.add(this.camera);\n        this.scene.add(this.cameraWrapper);\n\n        const vector = new THREE.Vector3();\n\n        for (let i = 0, l = this.timelineItems.length; i < l; i++) {\n            let timelineItem = document.createElement(\"div\");\n            timelineItem.className = \"c-timeline-item\";\n\n            let timelineItemImage = document.createElement(\"i\");\n            timelineItemImage.className = \"c-timeline-item__img\";\n            timelineItemImage.style.backgroundImage = `url(${\n                this.timelineItemsImagePath + this.timelineItems[i].image\n            })`;\n            timelineItem.appendChild(timelineItemImage);\n\n            let timelineItemInner = document.createElement(\"div\");\n            timelineItemInner.className = \"c-timeline-item__inner\";\n            timelineItem.appendChild(timelineItemInner);\n\n            let year = document.createElement(\"div\");\n            year.className = \"c-timeline-item__year\";\n            year.textContent = this.timelineItems[i].year;\n            timelineItemInner.appendChild(year);\n\n            let title = document.createElement(\"div\");\n            title.className = \"c-timeline-item__title\";\n            title.textContent = this.timelineItems[i].title;\n            timelineItemInner.appendChild(title);\n\n            this.helix = new CSS3DObject(timelineItem);\n            this.helix.name = `${this.timelineItems[i].title}, index: ${i}`;\n\n            this.scene.add(this.helix);\n\n            let theta = i * 0.5 + Math.PI;\n            let y = -(i * 48) + 600;\n\n            this.helix.position.setFromCylindricalCoords(640, theta, y);\n\n            vector.x = this.helix.position.x * 2;\n            vector.y = this.helix.position.y;\n            vector.z = this.helix.position.z * 2;\n\n            this.helix.lookAt(vector);\n\n            this.helixItems.push(this.helix);\n        }\n\n        this.renderer = new CSS3DRenderer();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.timeline.appendChild(this.renderer.domElement);\n\n        window.addEventListener(\n            \"resize\",\n            () => {\n                this.onWindowResize;\n            },\n            false,\n        );\n\n        this.animate();\n        this.helixNavigation();\n    }\n\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n    }\n\n    animate() {\n        requestAnimationFrame(() => this.animate());\n        this.renderer.render(this.scene, this.camera);\n    }\n\n    helixNavigation() {\n        // TODO: tu ces trebati jos i y poziciju i lookAt mjenjati ovisno o pozici planea (ako sam dobro skuzio to imas na 212 liniji)\n        // TODO: rotaciju ces dobiti (Math.PI * 2) / broj poligona u punom krugu - iako realno moze ostati zahartkodirano\n\n        // this.timelineSliderPrev.addEventListener(\"click\", () => {\n        //     console.log(\"click Prev\");\n        //     gsap.to(this.cameraWrapper.rotation, {\n        //         duration: 1,\n        //         y: \"-=0.5\",\n        //         onStart: () => {\n        //             document.documentElement.classList.add(\"is-rotating-right\");\n        //         },\n        //         onComplete: () => {\n        //             document.documentElement.classList.remove(\"is-rotating-right\");\n        //         }\n        //     });\n        //     gsap.to(this.cameraWrapper.position, {\n        //         duration: 1,\n        //         y: \"+=50\",\n        //     });\n        // });\n\n        // this.timelineSliderNext.addEventListener(\"click\", () => {\n        //     console.log(\"click Next\");\n        //\n        //     gsap.to(this.cameraWrapper.rotation, {\n        //         duration: 1,\n        //         y: \"+=0.5\",\n        //         onStart: () => {\n        //             document.documentElement.classList.add(\"is-rotating-left\");\n        //         },\n        //         onComplete: () => {\n        //             document.documentElement.classList.remove(\"is-rotating-left\");\n        //         }\n        //     });\n        //\n        //     gsap.to(this.cameraWrapper.position, {\n        //         duration: 1,\n        //         y: \"-=50\",\n        //     });\n        // });\n    }\n\n    initSwiper() {\n\n        let timelineSlider = new Swiper(this.DOM.timelineSlider, {\n            init: false,\n            slidesPerView: 13,\n            speed: this.options.transitionSpeed,\n            navigation: {\n                nextEl: this.DOM.timelineSliderNext,\n                prevEl: this.DOM.timelineSliderPrev,\n            },\n        });\n\n        timelineSlider.on(\"init\", () => {\n        });\n\n        timelineSlider.on(\"slideNextTransitionStart\", () => {\n\n        });\n\n        timelineSlider.on(\"slidePrevTransitionStart\", () => {\n\n        });\n\n        timelineSlider.init();\n    }\n}\n","export default class GridHelper {\n    /**\n     *\n     */\n    constructor() {\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        this.gridOptions = {\n            initialDisplay: \"none\", //\"flex\" or \"none\"\n            gridWidth: 1440, // px\n            columnCount: 24,\n            gridColor: \"rgb(255, 0, 255, 0.15)\",\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n            gutterWidth: 0, // px\n            gutterFixed: false,\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth -\n                (this.gridOptions.columnCount - 1) *\n                    this.gridOptions.gutterWidth) /\n            this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${\n            (this.columnWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n\n        this.gutterWidthPercentage = `${\n            (this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            max-width: ${this.gridOptions.gridWidth}px;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    /**\n     *\n     */\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","import GridHelper from \"./helpers/GridHelper\";\nimport NavigationController from \"./components/NavigationController\";\nimport TimelineSlider from \"./components/TimelineSlider\";\nimport Dummy from \"./components/Dummy\";\n\nconst ready = (callbackFunc) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callbackFunc();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callbackFunc);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callbackFunc();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n\n    console.info(\"dev by: %c Bornfight \", credits);\n\n    const gridHelper = new GridHelper();\n    gridHelper.init();\n\n    const dummy = new Dummy();\n    dummy.init();\n\n    const navigation = new NavigationController();\n    navigation.init();\n\n    if (document.getElementById(\"timeline-slider\") !== null) {\n        const timelineSlider = new TimelineSlider();\n    }\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}