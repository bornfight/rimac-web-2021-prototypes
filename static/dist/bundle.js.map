{"version":3,"sources":["node_modules/browser-pack/_prelude.js","static/js/components/Dummy.js","static/js/components/GradientBg.js","static/js/components/HomeVerticalSlider.js","static/js/components/NavigationController.js","static/js/components/PerlinGradient.js","static/js/components/ScrollProgress.js","static/js/components/TimelineSlider.js","static/js/components/VideoScrub.js","static/js/helpers/DarkModeHelper.js","static/js/helpers/EqualHeight.js","static/js/helpers/GridHelper.js","static/js/index.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","export default class Dummy {\n    constructor() {}\n\n    init() {\n        console.log(\"Loaded!\");\n    }\n}\n","import {gsap} from \"gsap\";\nimport {ScrollTrigger} from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class GradientBg {\n    constructor() {\n        this.DOM = {\n            bgContainer: \".js-page-bg\",\n            bg: \".js-page-bg-bg\",\n            bgGradientMouseMove: \".js-page-bg-gradient-mousemove\",\n            bgChangeTrigger: \".js-page-bg-change-trigger\",\n            canvasGradient: \".js-perlin-gradient\",\n            states: {},\n        };\n\n        this.bg = document.querySelector(this.DOM.bg);\n        this.canvasGradient = document.querySelector(this.DOM.canvasGradient);\n        this.bgChangeTrigger = document.querySelectorAll(\n            this.DOM.bgChangeTrigger,\n        );\n        this.bgGradientMouseMove = document.querySelector(\n            this.DOM.bgGradientMouseMove,\n        );\n    }\n\n    init() {\n        console.log(\"GradientBg init()\");\n\n        this.bgColorChange();\n        // this.onMouseMove();\n    }\n\n    bgColorChange() {\n        for (let i = 0, l = this.bgChangeTrigger.length; i < l; i++) {\n            let bgChange = gsap.to(this.bg, {\n                duration: 0.8,\n                autoAlpha: this.bgChangeTrigger[i].getAttribute(\n                    \"data-bg-opacity\",\n                ),\n                ease: \"none\",\n                onStart: () => {\n                },\n                onUpdate: () => {\n                },\n            });\n\n            ScrollTrigger.create({\n                trigger: this.bgChangeTrigger[i],\n                animation: bgChange,\n                // markers: true,\n                start: \"top bottom\",\n                end: \"top top\",\n                scrub: true,\n                onEnter: () => {\n                    console.log(\"enter\");\n                },\n                onEnterBack: () => {\n                    console.log(\"enterBack\");\n\n                    if (this.canvasGradient) {\n                        this.canvasGradient.style.display = \"\";\n                    }\n                },\n                onLeave: () => {\n                    console.log(\"leave\");\n\n                    if (this.canvasGradient) {\n                        this.canvasGradient.style.display = \"none\";\n                    }\n                },\n                onLeaveBack: () => {\n                    console.log(\"leaveBack\");\n                },\n            });\n        }\n    }\n\n    onMouseMove() {\n        document.addEventListener(\"mousemove\", (ev) => {\n\n            const mouseScale = 0.25;\n\n            const x = ev.offsetX / innerWidth * 100 - 50;\n            const y = ev.offsetY / innerHeight * 100 - 50;\n\n            gsap.to(\"html\", {\n                duration: 1.4,\n                \"--mouseX\": `${(x * mouseScale).toFixed(3)}%`,\n                ease: \"power3.easIn\",\n            });\n\n            gsap.to(\"html\", {\n                duration: 1.4,\n                \"--mouseY\": `${(y * mouseScale).toFixed(3)}%`,\n                ease: \"power3.easIn\",\n            });\n\n            gsap.to(this.bgGradientMouseMove, {\n                duration: 1.4,\n                rotationY: 5 * y,\n                x: 50 * decimalX,\n                rotationX: 2.5 * x,\n                y: -100 * decimalY,\n                ease: \"quad.easOut\",\n                transformPerspective: 700,\n                transformOrigin: \"center\",\n            });\n        });\n    }\n}\n","import * as THREE from \"three\";\nimport {OrbitControls} from \"three/examples/jsm/controls/OrbitControls\";\nimport {EffectComposer} from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\nimport {BokehPass} from \"three/examples/jsm/postprocessing/BokehPass\";\n\nimport {GUI} from \"three/examples/jsm/libs/dat.gui.module.js\";\n\nimport {gsap} from \"gsap\";\n\nimport Swiper from \"swiper\";\n\nexport default class HomeVerticalSlider {\n    constructor() {\n        this.DOM = {\n            sliderWrapper: \".js-video-slider\",\n            canvasWrapper: \".js-canvas-wrapper\",\n\n            slider: \".js-slider\",\n            slidesWrapper: \".js-slider-wrapper\",\n            sliderPagination: \".js-pagination-wrapper\",\n            sliderProgress: \".js-pagination-progress\",\n        };\n\n        this.videoSliderWrapper = document.querySelector(this.DOM.sliderWrapper);\n\n        this.mouse = {\n            x: 0,\n            y: 0,\n        };\n\n        if (this.videoSliderWrapper == null) {\n            return;\n        }\n\n        this.videoPlayers = [];\n\n        this.isZoomingIn = false;\n        this.isZoomingOut = false;\n\n        this.postprocessing = {};\n\n        this.winWidth = window.innerWidth;\n        this.winHeight = window.innerHeight;\n\n        this.slider = document.querySelector(this.DOM.slider);\n        this.slidesWrapper = document.querySelector(this.DOM.slidesWrapper);\n        this.sliderProgress = document.querySelector(this.DOM.sliderProgress);\n        this.sliderPagination = document.querySelector(this.DOM.sliderPagination);\n\n        this.canvasWrapper = document.querySelector(this.DOM.canvasWrapper);\n\n        this.renderer = undefined;\n        this.camera = undefined;\n\n        this.slides = new THREE.Object3D();\n\n        this.dataPath = \"static/video/\";\n        this.data = [\n            {\n                title: \"nevera\",\n                content: \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n                linkTitle: \"link\",\n                link: \"#\",\n                video: \"c_two.mp4\",\n            },\n            {\n                title: \"technology\",\n                content: \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n                linkTitle: \"link\",\n                link: \"#\",\n                video: \"technology.mp4\",\n            },\n            {\n                title: \"about us\",\n                content: \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n                linkTitle: \"link\",\n                link: \"#\",\n                video: \"about.mp4\",\n            },\n            {\n                title: \"developmet\",\n                content: \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n                linkTitle: \"link\",\n                link: \"#\",\n                video: \"video-scrub-02.mp4\",\n            }\n        ];\n\n        this.slidesLength = this.data.length;\n        this.paginationHeight = 0;\n\n        this.init();\n    }\n\n    init() {\n        // scene setup\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x010d10);\n\n        this.scene.add(this.slides);\n\n        this.initCamera();\n        this.initRenderer();\n        this.createCanvas();\n        // this.addControls();\n        this.addPlanes();\n        this.dof();\n\n        const effectController = {\n            focus: 180,\n            aperture: 10,\n            maxblur: 0.01,\n        };\n\n        const matChanger = () => {\n            this.postprocessing.bokeh.uniforms[\"focus\"].value =\n                effectController.focus;\n            this.postprocessing.bokeh.uniforms[\"aperture\"].value =\n                effectController.aperture * 0.00001;\n            this.postprocessing.bokeh.uniforms[\"maxblur\"].value =\n                effectController.maxblur;\n        };\n\n        const gui = new GUI();\n        gui.add(effectController, \"focus\", 40, 200, 1).onChange(\n            matChanger,\n        );\n        gui.add(effectController, \"aperture\", 0, 10, 0.1).onChange(matChanger);\n        gui.add(effectController, \"maxblur\", 0.0, 0.01, 0.001).onChange(\n            matChanger,\n        );\n        gui.close();\n\n        matChanger();\n\n        for (let i = 0; i < this.data.length; i++) {\n            this.addSlides(i, this.data[i]);\n        }\n\n        this.initSlider();\n\n        this.mouseMove();\n\n        this.render();\n        window.addEventListener(\"resize\", () => {\n            this.onWindowResize();\n        }, false);\n    }\n\n    addControls() {\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.update();\n    }\n\n    createCanvas() {\n        // add canvas to dom\n        this.canvasWrapper.appendChild(this.renderer.domElement);\n    }\n\n    initRenderer() {\n        // WebGL renderer\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: false,\n        });\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.winWidth, this.winHeight);\n    }\n\n    initCamera() {\n        // camera setup\n        this.camera = new THREE.PerspectiveCamera(50, this.winWidth / this.winHeight, 1, 800);\n        this.camera.position.z = 245;\n        this.camera.position.y = 0;\n    }\n\n    render() {\n        this.postprocessing.composer.render();\n        this.updatePlaneLookAt();\n        requestAnimationFrame(() => this.render());\n    }\n\n    // canvas size update\n    onWindowResize() {\n        this.camera.aspect = this.winWidth / this.winHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(this.winWidth, this.winHeight);\n        this.postprocessing.composer.setSize(this.winWidth, this.winHeight);\n    }\n\n    addPlanes() {\n        for (let i = 0; i < this.data.length; i++) {\n            this.addPlane(this.data[i], i);\n        }\n    }\n\n    addPlane(data, index) {\n        const promise = new Promise((resolve, reject) => {\n            this.createVideo(index, resolve);\n        });\n\n        promise.then(() => {\n            const texture = new THREE.VideoTexture(document.querySelectorAll('.js-home-slider-video')[index]);\n            texture.minFilter = THREE.LinearFilter;\n            texture.magFilter = THREE.LinearFilter;\n            texture.format = THREE.RGBFormat;\n            const geometry = new THREE.PlaneGeometry(160, 90, 1, 1);\n\n            const material = new THREE.MeshBasicMaterial({\n                map: texture,\n            });\n\n            const plane = new THREE.Mesh(geometry, material);\n\n            const offset = ((2 * Math.PI) / this.data.length) * index + (Math.PI / 2);\n\n            plane.position.set(\n                0,\n                Math.cos(offset) * 150,\n                Math.sin(offset) * 150,\n            );\n\n            plane.lookAt(this.camera.position);\n\n            this.slides.add(plane);\n        });\n    }\n\n    createVideo(index, resolve) {\n        const video = document.createElement(\"video\");\n        const sourceMP4 = document.createElement(\"source\");\n        sourceMP4.type = \"video/mp4\";\n        sourceMP4.src = this.dataPath + this.data[index].video;\n        video.appendChild(sourceMP4);\n        video.dataset.index = index;\n        video.muted = true;\n        video.loop = true;\n        this.videoSliderWrapper.appendChild(video);\n        video.classList.add(\"js-home-slider-video\", \"c-homepage__video\");\n        this.videoPlayers.push(video);\n\n        if (index === 0) {\n            // play only first video\n            setTimeout(() => {\n                video.play();\n            }, 1000);\n        }\n\n        resolve();\n    }\n\n    updatePlaneLookAt() {\n        for (let i = 0; i < this.slides.children.length; i++) {\n            this.slides.children[i].lookAt(this.camera.position);\n        }\n    }\n\n    dof() {\n        const renderPass = new RenderPass(this.scene, this.camera);\n\n        const bokehPass = new BokehPass(this.scene, this.camera, {\n            width: this.winWidth,\n            height: this.winHeight,\n        });\n\n        const composer = new EffectComposer(this.renderer);\n\n        composer.addPass(renderPass);\n        composer.addPass(bokehPass);\n\n        this.postprocessing.composer = composer;\n        this.postprocessing.bokeh = bokehPass;\n    }\n\n    progressController(swiper, fullCircleOffset, currentProgress) {\n        gsap.to(this.slides.rotation, {\n            duration: 0.8,\n            ease: \"power2.out\",\n            x: -currentProgress * fullCircleOffset,\n        });\n    }\n\n    addSlides(index, itemData) {\n        let item = document.createElement(\"div\");\n        item.className = \"c-home-slider-item swiper-slide\";\n\n        let itemInner = document.createElement(\"div\");\n        itemInner.className = \"c-home-slider-item__inner\";\n        item.appendChild(itemInner);\n\n        let title = document.createElement(\"p\");\n        title.className = \"c-home-slider-item__title u-a7 u-uppercase\";\n        title.textContent = itemData.title;\n        itemInner.appendChild(title);\n\n        let content = document.createElement(\"p\");\n        content.className = \"c-home-slider-item__content\";\n        content.textContent = itemData.content;\n        itemInner.appendChild(content);\n\n        let link = document.createElement(\"a\");\n        link.className = \"c-home-slider-item__link\";\n        link.href = itemData.link;\n        link.textContent = itemData.linkTitle;\n        itemInner.appendChild(link);\n\n        this.slidesWrapper.appendChild(item);\n    }\n\n    initSlider() {\n        const fullCircleOffset = ((Math.PI * 2) / this.data.length) * (this.data.length - 1);\n        let progress = 0;\n        const self = this;\n\n        this.swiper = new Swiper(this.slider, {\n            loop: false,\n            slidesPerView: 1,\n            direction: \"vertical\",\n            centeredSlides: true,\n            speed: 1000,\n            grabCursor: true,\n            watchSlidesProgress: true,\n            mousewheelControl: true,\n            mousewheel: true,\n            freeMode: true,\n            freeModeSticky: true,\n            freeModeMomentum: false,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumVelocityRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeMinimumVelocity: 0.02,\n            pagination: {\n                el: this.DOM.sliderPagination,\n                clickable: true,\n                renderBullet: (index, className) => {\n                    return `<span class=\"u-uppercase u-b0 u-fw-bold c-homepage__pagination-bullet ${className}\">\n                                <i></i>\n                                ${this.data[index].title}\n                            </span>`;\n                },\n            },\n            on: {\n                progress: function () {\n                    const swiper = this;\n                    const currentProgress = swiper.progress;\n\n                    self.progressCircle(swiper, currentProgress);\n\n                    self.progressController(swiper, fullCircleOffset, currentProgress);\n\n                    progress = self.progressCalculation(currentProgress);\n\n                    if (progress === 0 && !self.isZoomingIn) {\n                        self.zoomIn();\n                    } else if (progress < 0.99 && !self.isZoomingOut) {\n                        self.zoomOut();\n                    } else if (!self.isZoomingIn) {\n                        self.zoomIn();\n                    }\n                },\n                init: () => {\n                    this.zoomIn();\n                    setTimeout(() => {\n                        if (this.paginationHeight !== this.sliderPagination.clientHeight) {\n                            this.paginationHeight = this.sliderPagination.clientHeight;\n                        }\n                    }, 500);\n\n                    setTimeout(() => {\n                        if (this.paginationHeight !== this.sliderPagination.clientHeight) {\n                            this.paginationHeight = this.sliderPagination.clientHeight;\n                        }\n                    }, 1000);\n                },\n                slideChange: function () {\n                    const swiper = this;\n                    if (self.videoPlayers[swiper.activeIndex] != null) {\n                        setTimeout(() => {\n                            self.videoController(swiper);\n                        }, 1500);\n                    }\n\n                    if (self.paginationHeight !== self.sliderPagination.clientHeight) {\n                        self.paginationHeight = self.sliderPagination.clientHeight;\n                    }\n                },\n            },\n        });\n    }\n\n    progressCalculation(currentProgress) {\n        return (((this.slidesLength - 1) / 10) * (currentProgress * 10)) % 1;\n    }\n\n    progressCircle(swiper, currentProgress) {\n        gsap.to(this.sliderProgress, {\n            duration: 0.8,\n            y: ((currentProgress / this.slidesLength) * (this.slidesLength - 1)) * this.paginationHeight,\n            ease: \"elastic.out(1, 0.5)\",\n        });\n    }\n\n    zoomOut() {\n        this.isAnimating = true;\n        gsap.to(this.camera.position, {\n            duration: 0.8,\n            ease: \"power1.out\",\n            z: 330,\n            onComplete: () => {\n                this.isAnimating = false;\n            },\n        });\n\n        gsap.to(this.postprocessing.bokeh.uniforms[\"focus\"], {\n            duration: 0.8,\n            ease: \"power1.out\",\n            value: 180,\n        });\n    }\n\n    zoomIn() {\n        this.isAnimating = true;\n        gsap.to(this.camera.position, {\n            duration: 0.8,\n            ease: \"power4.in\",\n            z: 245,\n            onComplete: () => {\n                this.isAnimating = false;\n            },\n        });\n\n        gsap.to(this.postprocessing.bokeh.uniforms[\"focus\"], {\n            duration: 0.8,\n            ease: \"power4.in\",\n            value: 90,\n        });\n    }\n\n    mouseMove() {\n        window.addEventListener(\"mousemove\", (ev) => {\n            this.mouse.x =\n                (0.05 / this.winWidth) * (ev.clientX - this.winWidth / 2);\n            this.mouse.y =\n                (0.05 / this.winHeight) * (ev.clientY - this.winHeight / 2);\n\n            gsap.to(this.camera.rotation, {\n                x: -this.mouse.y,\n                y: -this.mouse.x,\n                duration: 1.5,\n                ease: \"power3.out\",\n            });\n\n            gsap.to(this.slider, {\n                x: -this.mouse.x * 300,\n                y: this.mouse.y * 300,\n                duration: 1,\n                ease: \"power3.out\",\n            });\n        });\n    }\n\n    videoController(swiper) {\n        const index = swiper.activeIndex;\n        this.videoPlayers.forEach((video) => {\n            if (parseInt(video.dataset.index) === index) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    }\n}\n","/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nexport default class NavigationController {\n    constructor() {\n        /**\n         * Navigation DOM selectors\n         * Navigation DOM state CSS classes\n         * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n         */\n\n        this.DOM = {\n            navigation: \".js-navigation-wrapper\",\n            states: {\n                navigationScrolled: \"has-scrolled\",\n                navigationFixed: \"is-fixed\",\n                navigationSlideUp: \"slide-up\",\n            },\n        };\n\n        /**\n         * flag, state variable for scrolling event\n         * @type {boolean}\n         */\n        this.scrolling = false;\n        /**\n         * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n         * @type {number}\n         */\n        this.scrollNavigationOffset = 200;\n        /**\n         * variable for storing amount of scroll from top position value\n         * @type {number}\n         */\n        this.previousTop = 0;\n        /**\n         * variable for storing current scroll position value\n         * @type {number}\n         */\n        this.currentTop = 0;\n        this.scrollDelta = 0;\n        this.scrollOffset = 0;\n\n        /**\n         * fetch navigation element DOM element\n         * @type {Element}\n         */\n        this.navigation = document.querySelector(this.DOM.navigation);\n    }\n\n    //region methods\n    /**\n     *\n     */\n    init() {\n        console.log(\"Navigation init()\");\n\n        if (this.navigation !== null) {\n            this.navigationController();\n        } else {\n            console.error(`${this.DOM.navigation} does not exist in the DOM!`);\n        }\n    }\n\n    /**\n     *\n     */\n    navigationController() {\n        document.addEventListener(\"scroll\", () => {\n            if (!this.scrolling) {\n                this.scrolling = true;\n\n                if (!window.requestAnimationFrame) {\n                    setTimeout(this.checkScroll(), 250);\n                } else {\n                    requestAnimationFrame(() => this.checkScroll());\n                }\n            }\n        });\n    }\n\n    /**\n     *\n     */\n    checkScroll() {\n        /**\n         *\n         * @type {number}\n         */\n        let currentTop = window.pageYOffset | document.body.scrollTop;\n\n        this.changeNavigationState(currentTop);\n\n        this.previousTop = currentTop;\n        this.scrolling = false;\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    changeNavigationState(currentTop) {\n        if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationScrolled);\n        } else {\n            this.navigation.classList.remove(\n                this.DOM.states.navigationScrolled,\n            );\n        }\n\n        if (this.previousTop >= currentTop) {\n            this.scrollingUp(currentTop);\n        } else {\n            this.scrollingDown(currentTop);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingUp(currentTop) {\n        if (currentTop < this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        } else if (this.previousTop - currentTop > this.scrollDelta) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    /**\n     *\n     * @param currentTop\n     */\n    scrollingDown(currentTop) {\n        if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n            this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n        } else if (currentTop > this.scrollNavigationOffset) {\n            this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n        }\n    }\n\n    //endregion\n}\n","import * as THREE from \"three\";\n\nimport {GUI} from \"three/examples/jsm/libs/dat.gui.module.js\";\n\nimport {gsap} from \"gsap\";\n\nexport default class HomeVerticalSlider {\n    constructor() {\n        this.DOM = {\n            wrapper: \".js-perlin-gradient\",\n        };\n\n        if (document.querySelector(this.DOM.wrapper)) {\n            this.init();\n        }\n    }\n\n    init() {\n        this.primitive;\n        this.shapeGroup = new THREE.Group();\n        this.start = Date.now();\n        this.mat;\n        this.mouse = {\n            x: 0,\n            y: 0,\n        };\n\n        const self = this;\n        this.width = window.innerWidth;\n        this.height = window.innerHeight;\n\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0x292733);\n\n        this.camera = new THREE.PerspectiveCamera(35, this.width / this.height, 1, 1000);\n        this.camera.position.set(0, 0, 16);\n\n        this.renderer = new THREE.WebGLRenderer({\n            antialias: true,\n            alpha: false,\n        });\n        this.renderer.setSize(this.width, this.height);\n        this.renderer.shadowMap.enabled = true;\n\n        document.querySelector(self.DOM.wrapper).appendChild(this.renderer.domElement);\n\n        this.options = {\n            perlin: {\n                speed: 0.00003,\n                size: 0.5,\n                perlins: 2.0,\n                decay: 1.5,\n                displace: 0.1,\n                complex: 0.1,\n                waves: 5,\n                eqcolor: 3.0,\n                r_color: this.getColorValue(46),\n                g_color: this.getColorValue(74),\n                b_color: this.getColorValue(85),\n                fragment: false,\n                redhell: false,\n            },\n        };\n\n        this.createGUI();\n        this.createPrimitive();\n        this.animation();\n        this.colorChange();\n        this.mouseMove();\n    }\n\n    colorChange() {\n        const duration = 3;\n        const tl = gsap\n            .timeline({\n                onComplete: () => {\n                    if (tl.reversed()) {\n                        tl.play();\n                    } else {\n                        tl.reverse();\n                    }\n                },\n            })\n            .add(\"light\")\n            .to(\n                this.options.perlin,\n                {\n                    r_color: this.getColorValue(46),\n                    g_color: this.getColorValue(74),\n                    b_color: this.getColorValue(85),\n                    duration: duration,\n                    ease: \"none\",\n                },\n                \"light\",\n            )\n            .add(\"medium\")\n            .to(\n                this.options.perlin,\n                {\n                    r_color: this.getColorValue(24),\n                    g_color: this.getColorValue(52),\n                    b_color: this.getColorValue(63),\n                    duration: duration,\n                    ease: \"none\",\n                },\n                \"medium\",\n            )\n            .add(\"dark\")\n            .to(\n                this.options.perlin,\n                {\n                    r_color: this.getColorValue(0),\n                    g_color: this.getColorValue(20),\n                    b_color: this.getColorValue(29),\n                    duration: duration,\n                    ease: \"none\",\n                },\n                \"dark\",\n            );\n    }\n\n    createGUI() {\n        this.gui = new GUI();\n\n        const perlinGUI = this.gui.addFolder(\"Shape Setup\");\n        perlinGUI\n            .add(this.options.perlin, \"speed\", 0.00001, 0.0001)\n            .name(\"Speed\")\n            .listen();\n        perlinGUI\n            .add(this.options.perlin, \"size\", 0.0, 3.0)\n            .name(\"Size\")\n            .listen();\n        perlinGUI\n            .add(this.options.perlin, \"waves\", 0.0, 20.0)\n            .name(\"Waves\")\n            .listen();\n        perlinGUI\n            .add(this.options.perlin, \"complex\", 0.1, 1.0)\n            .name(\"Complex\")\n            .listen();\n        perlinGUI\n            .add(this.options.perlin, \"displace\", 0.1, 2.5)\n            .name(\"Displacement\")\n            .listen();\n\n        const colorGUI = this.gui.addFolder(\"Color\");\n        colorGUI\n            .add(this.options.perlin, \"eqcolor\", 0.0, 30.0)\n            .name(\"Hue\")\n            .listen();\n        colorGUI\n            .add(this.options.perlin, \"r_color\", 0.0, 2.55)\n            .name(\"R\")\n            .listen();\n        colorGUI\n            .add(this.options.perlin, \"g_color\", 0.0, 2.55)\n            .name(\"G\")\n            .listen();\n        colorGUI\n            .add(this.options.perlin, \"b_color\", 0.0, 2.55)\n            .name(\"B\")\n            .listen();\n        colorGUI.add(this.options.perlin, \"redhell\", true).name(\"Electroflow\");\n    }\n\n    animation() {\n        this.mat.uniforms[\"size\"].value = this.options.perlin.size;\n        this.mat.uniforms[\"displace\"].value = this.options.perlin.displace;\n        this.mat.uniforms[\"redhell\"].value = this.options.perlin.redhell;\n        this.mat.uniforms[\"time\"].value =\n            this.options.perlin.speed * (Date.now() - this.start);\n        this.mat.uniforms[\"pointscale\"].value = this.options.perlin.perlins;\n        this.mat.uniforms[\"decay\"].value = this.options.perlin.decay;\n        this.mat.uniforms[\"complex\"].value = this.options.perlin.complex;\n        this.mat.uniforms[\"waves\"].value = this.options.perlin.waves;\n        this.mat.uniforms[\"eqcolor\"].value = this.options.perlin.eqcolor;\n        this.mat.uniforms[\"fragment\"].value = this.options.perlin.fragment;\n        this.mat.uniforms[\"r_color\"].value = this.options.perlin.r_color;\n        this.mat.uniforms[\"g_color\"].value = this.options.perlin.g_color;\n        this.mat.uniforms[\"b_color\"].value = this.options.perlin.b_color;\n        //---\n        this.renderer.render(this.scene, this.camera);\n        requestAnimationFrame(() => this.animation());\n    }\n\n    createPrimitive() {\n        const self = this;\n        const primitiveElement = function () {\n            this.mesh = new THREE.Object3D();\n            self.mat = new THREE.ShaderMaterial({\n                side: THREE.DoubleSide,\n                uniforms: {\n                    time: {\n                        type: \"f\",\n                        value: 1.0,\n                    },\n                    pointscale: {\n                        type: \"f\",\n                        value: 1.0,\n                    },\n                    decay: {\n                        type: \"f\",\n                        value: 2.0,\n                    },\n                    complex: {\n                        type: \"f\",\n                        value: 2.0,\n                    },\n                    waves: {\n                        type: \"f\",\n                        value: 3.0,\n                    },\n                    eqcolor: {\n                        type: \"f\",\n                        value: 3.0,\n                    },\n                    fragment: {\n                        type: \"i\",\n                        value: false,\n                    },\n                    dnoise: {\n                        type: \"f\",\n                        value: 0.0,\n                    },\n                    qnoise: {\n                        type: \"f\",\n                        value: 4.0,\n                    },\n                    r_color: {\n                        type: \"f\",\n                        value: 0.0,\n                    },\n                    g_color: {\n                        type: \"f\",\n                        value: 0.0,\n                    },\n                    b_color: {\n                        type: \"f\",\n                        value: 0.0,\n                    },\n                    size: {\n                        type: \"f\",\n                        value: 0.3,\n                    },\n                    displace: {\n                        type: \"f\",\n                        value: 0.3,\n                    },\n                    redhell: {\n                        type: \"i\",\n                        value: true,\n                    },\n                },\n                vertexShader: document.getElementById(\"vertexShader\")\n                    .textContent,\n                fragmentShader: document.getElementById(\"fragmentShader\")\n                    .textContent,\n            });\n\n            console.log(self.mat);\n\n            const geo = new THREE.IcosahedronBufferGeometry(4, 7);\n            self.shape = new THREE.Mesh(geo, self.mat);\n\n            self.shapeGroup.add(self.shape);\n            self.scene.add(self.shapeGroup);\n        };\n\n        this.primitive = new primitiveElement();\n    }\n\n    getColorValue(val) {\n        return 1.9 - (1.9 / 255) * val;\n    }\n\n    mouseMove() {\n        window.addEventListener(\"mousemove\", (ev) => {\n            this.mouse.x =\n                (0.5 / this.width) * (ev.clientX - this.width / 2);\n            this.mouse.y =\n                (0.5 / this.height) * (ev.clientY - this.height / 2);\n\n            gsap.to(this.camera.position, {\n                x: -this.mouse.x,\n                y: this.mouse.y,\n                duration: 1.5,\n                ease: \"power3.out\",\n            });\n        });\n    }\n}\n","import { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class ScrollProgress {\n    constructor() {\n        this.DOM = {\n            scrollProgress: \".js-scroll-progress\",\n            scrollProgressItem: \".js-scroll-progress-item\",\n            scrollProgressTrigger: \".js-scroll-progress-trigger\",\n            states: {\n                isActive: \"is-active\",\n            },\n        };\n\n        this.scrollProgress = document.querySelector(this.DOM.scrollProgress);\n        this.scrollProgressItems = document.querySelectorAll(\n            this.DOM.scrollProgressItem,\n        );\n        this.scrollProgressTriggers = document.querySelectorAll(\n            this.DOM.scrollProgressTrigger,\n        );\n    }\n\n    init() {\n        console.log(\"ScrollProgress init()\");\n\n        for (let i = 0, l = this.scrollProgressItems.length; i < l; i++) {\n            let progress = gsap.to(this.scrollProgressItems[i], {\n                duration: 1,\n                scaleY: 1,\n                ease: \"none\",\n                onUpdate: () => {\n                    // console.log(\"tutu\");\n                },\n            });\n\n            ScrollTrigger.create({\n                trigger: this.scrollProgressTriggers[i],\n                // markers: true,\n                start: \"top bottom\",\n                end: \"bottom bottom\",\n                animation: progress,\n                scrub: 0.4,\n            });\n        }\n    }\n}\n\nclass EqualHeight {\n\n    constructor() {\n        this.DOM = {\n            element: \".js-list-item h3\",\n            states: {},\n        };\n\n        this.elements = document.querySelectorAll(this.DOM.element);\n\n        this.init();\n    }\n\n    init() {\n        this.setHeights(this.elements);\n    }\n\n    setHeights(elements) {\n        for (let i = 0, l = elements.legth; i < l; i++) {\n            console.log(elements[i]);\n        }\n    }\n}\n\nnew EqualHeight();\n","import * as THREE from \"three\";\n\nimport {EffectComposer} from \"three/examples/jsm/postprocessing/EffectComposer\";\nimport {RenderPass} from \"three/examples/jsm/postprocessing/RenderPass\";\nimport {BokehPass} from \"three/examples/jsm/postprocessing/BokehPass\";\nimport {GUI} from \"three/examples/jsm/libs/dat.gui.module.js\";\n\nimport {gsap} from \"gsap\";\n\nimport Swiper from \"swiper\";\n\nexport default class TimelineSlider {\n    constructor() {\n        this.DOM = {\n            timeline: \".js-timeline\",\n\n            timelineSlider: \".js-timeline-slider\",\n            timelineSliderWrapper: \".js-timeline-slider-wrapper\",\n            timelineSliderNext: \".js-timeline-slider-next\",\n            timelineSliderPrev: \".js-timeline-slider-previous\",\n            timelineProgressDot: \".js-timeline-pagination-progress-dot\",\n            timelineProgressWrapper: \".js-timeline-pagination-progress-wrapper\",\n\n            popup: \".js-timeline-popup\",\n            popupClose: \".js-timeline-popup-close\",\n            popupYear: \".js-timeline-popup-year\",\n            popupTitle: \".js-timeline-popup-title\",\n            popupContent: \".js-timeline-popup-content\",\n            popupProgressWrapper: \".js-timeline-popup-progress-wrapper\",\n            popupProgressIndicator: \".js-timeline-popup-progress-indicator\",\n            states: {},\n        };\n\n        this.options = {\n            transitionSpeed: 1000,\n        };\n\n        this.mouse = {\n            x: 0,\n            y: 0,\n        };\n\n        this.winWidth = window.innerWidth;\n        this.winHeight = window.innerHeight;\n\n        this.activeIndex = 0;\n\n        this.timeline = document.querySelector(this.DOM.timeline);\n        this.slider = document.querySelector(this.DOM.timelineSlider);\n        this.progressDot = document.querySelector(this.DOM.timelineProgressDot);\n        this.progressWrapper = document.querySelector(\n            this.DOM.timelineProgressWrapper,\n        );\n        this.sliderWrapper = document.querySelector(\n            this.DOM.timelineSliderWrapper,\n        );\n\n        this.popup = document.querySelector(this.DOM.popup);\n        this.popupClose = document.querySelector(this.DOM.popupClose);\n        this.popupYear = document.querySelector(this.DOM.popupYear);\n        this.popupTitle = document.querySelector(this.DOM.popupTitle);\n        this.popupContent = document.querySelector(this.DOM.popupContent);\n        this.popupProgressIndicator = document.querySelector(this.DOM.popupProgressIndicator);\n        this.popupProgressWrapper = document.querySelector(this.DOM.popupProgressWrapper);\n        this.popupProgressWrapperWidth = this.popupProgressWrapper.clientWidth;\n\n        this.swiper = null;\n        this.popupOpened = false;\n\n        this.timelineItemsImagePath = \"static/images/\";\n        this.timelineItems = [\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2008\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2009\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2010\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2011\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2012\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2013\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2014\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2015\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2016\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2017\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n            {\n                image: \"timeline-02.jpg\",\n                year: \"2018\",\n                title: \"Rimac grows to over 100 employees.\",\n                text:\n                    \"A simple to use Lorem Ipsum generator. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-03.jpg\",\n                year: \"2019\",\n                title: \"Rimac has 1914HP.\",\n                text:\n                    \"It's based on the Lolita framework. A simple to use Lorem Ipsum generator.\",\n            },\n            {\n                image: \"timeline-01.jpg\",\n                year: \"2020\",\n                title: \"Lorem ipsum dolor sit.\",\n                text:\n                    \"Makes example posts, pages, custom terms, helps to style and develop new and current themes.\",\n            },\n        ];\n\n        this.timelineSliderPrev = document.querySelector(\n            this.DOM.timelineSliderPrev,\n        );\n        this.timelineSliderNext = document.querySelector(\n            this.DOM.timelineSliderNext,\n        );\n\n        this.camera = null;\n        this.scene = null;\n        this.renderer = null;\n        this.postprocessing = {};\n        this.helixItems = [];\n\n        this.init();\n    }\n\n    init() {\n        console.log(\"TimelineSlider init()\");\n\n        this.scene = new THREE.Scene();\n\n        const options = {\n            camera: {\n                fov: 60,\n                near: 10,\n                far: 3000,\n                posX: -180,\n                posY: 100,\n                posZ: 1080,\n            },\n        };\n\n        this.camera = new THREE.PerspectiveCamera(\n            options.camera.fov,\n            this.winWidth / this.winHeight,\n            options.camera.near,\n            options.camera.far,\n        );\n\n        this.itemRadiusOffset = 0.85;\n\n        this.initialCameraZPosition = 1020;\n\n        this.camera.lookAt(0, 0, 0);\n\n        this.camera.position.x = 0;\n        this.camera.position.y = 0;\n        this.camera.position.z = this.initialCameraZPosition;\n\n        this.initialCameraWrapperPosition = 550;\n        this.initialCameraWrapperRotation = 3.15;\n\n        this.cameraWrapper = new THREE.Object3D();\n        this.cameraWrapper.position.set(\n            0,\n            this.initialCameraWrapperPosition,\n            0,\n        );\n        this.cameraWrapper.rotation.y = this.initialCameraWrapperRotation;\n        this.cameraWrapper.name = \"camera wrapper\";\n        this.cameraWrapper.add(this.camera);\n        this.scene.add(this.cameraWrapper);\n\n        this.vector = new THREE.Vector3();\n\n        const planeBackMaterial = new THREE.MeshBasicMaterial({\n            color: 0x333333,\n            transparent: true,\n        });\n\n        this.geometryAspectRatio = 16 / 9;\n        const planeGeometry = new THREE.PlaneGeometry(330, 186, 1, 1);\n        let planeGeometryBack = planeGeometry.clone();\n        planeGeometryBack.applyMatrix(\n            new THREE.Matrix4().makeRotationY(Math.PI),\n        );\n\n        // create items\n        for (let i = 0, l = this.timelineItems.length; i < l; i++) {\n            this.createItem(\n                i,\n                this.timelineItems[i],\n                planeGeometryBack,\n                planeBackMaterial,\n                planeGeometry,\n            );\n        }\n\n        const topOfTheHelix = this.helixItems[0].position.y;\n        const bottomOfTheHelix = this.helixItems[this.helixItems.length - 1]\n            .position.y;\n        const helixHeight =\n            Math.abs(bottomOfTheHelix) + Math.abs(topOfTheHelix);\n        this.helixOffsetByItem = helixHeight / (this.helixItems.length - 1);\n\n        // canvas renderer\n        this.canvasRenderer = new THREE.WebGLRenderer();\n        this.canvasRenderer.setPixelRatio(window.devicePixelRatio);\n        this.canvasRenderer.setSize(this.winWidth, this.winHeight);\n        this.timeline.appendChild(this.canvasRenderer.domElement);\n\n        window.addEventListener(\n            \"resize\",\n            () => {\n                this.onWindowResize;\n            },\n            false,\n        );\n\n        this.dof();\n\n        // DAT gui controls\n        const effectController = {\n            focus: 360,\n            aperture: 4.7,\n            maxblur: 0.007,\n        };\n\n        const matChanger = () => {\n            this.postprocessing.bokeh.uniforms[\"focus\"].value =\n                effectController.focus;\n            this.postprocessing.bokeh.uniforms[\"aperture\"].value =\n                effectController.aperture * 0.00001;\n            this.postprocessing.bokeh.uniforms[\"maxblur\"].value =\n                effectController.maxblur;\n        };\n\n        const gui = new GUI();\n        gui.add(effectController, \"focus\", 10.0, 3000.0, 10).onChange(\n            matChanger,\n        );\n        gui.add(effectController, \"aperture\", 0, 10, 0.1).onChange(matChanger);\n        gui.add(effectController, \"maxblur\", 0.0, 0.01, 0.001).onChange(\n            matChanger,\n        );\n        gui.close();\n\n        matChanger();\n        // end DAT gui controls\n\n        this.animate();\n        this.mouseMove();\n\n        // background\n        this.addBgImage();\n\n        this.swiperInit();\n\n        this.popupController();\n    }\n\n    onWindowResize() {\n        this.camera.aspect = this.winWidth / this.winHeight;\n        this.camera.updateProjectionMatrix();\n        this.postprocessing.composer.setSize(this.winWidth, this.winHeight);\n    }\n\n    animate() {\n        requestAnimationFrame(() => this.animate());\n        this.postprocessing.composer.render(0.1);\n    }\n\n    createItem(\n        i,\n        timelineLoopItem,\n        planeGeometryBack,\n        planeBackMaterial,\n        planeGeometry,\n    ) {\n        let timelineItem = document.createElement(\"div\");\n        timelineItem.className = \"c-timeline-item swiper-slide\";\n\n        let timelineItemInner = document.createElement(\"div\");\n        timelineItemInner.className = \"c-timeline-item__inner\";\n        timelineItem.appendChild(timelineItemInner);\n\n        let year = document.createElement(\"div\");\n        year.className = \"c-timeline-item__year\";\n        year.textContent = timelineLoopItem.year;\n        timelineItemInner.appendChild(year);\n\n        let title = document.createElement(\"div\");\n        title.className = \"c-timeline-item__title\";\n        title.textContent = timelineLoopItem.title;\n        timelineItemInner.appendChild(title);\n\n        this.sliderWrapper.appendChild(timelineItem);\n\n        let theta = i * this.itemRadiusOffset + Math.PI;\n        let y = -(i * 200) + 600;\n\n        // canvas\n        const planeGroup = new THREE.Object3D();\n        const texture = new THREE.TextureLoader().load(\n            this.timelineItemsImagePath + timelineLoopItem.image,\n            () => {\n                // image position to cover the plane\n                const imageAspectRatio =\n                    texture.image.width / texture.image.height;\n                texture.wrapT = THREE.RepeatWrapping;\n                texture.repeat.x = this.geometryAspectRatio / imageAspectRatio;\n                texture.offset.x = 0.5 * (1 - texture.repeat.x);\n            },\n        );\n\n        const planeMaterial = new THREE.MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n        });\n\n        planeGroup.position.setFromCylindricalCoords(640, theta, y);\n\n        this.vector.x = planeGroup.position.x * 2;\n        this.vector.y = planeGroup.position.y;\n        this.vector.z = planeGroup.position.z * 2;\n\n        const planeBack = new THREE.Mesh(planeGeometryBack, planeBackMaterial);\n        planeBack.name = \"item image back\";\n        const helixItem = new THREE.Mesh(planeGeometry, planeMaterial);\n        helixItem.name = \"item image\";\n        planeGroup.name = `canvas-plane-${timelineLoopItem.title}, index: ${i}`;\n\n        planeGroup.add(helixItem);\n        planeGroup.add(planeBack);\n        this.scene.add(planeGroup);\n\n        planeGroup.position.setFromCylindricalCoords(640, theta, y);\n\n        planeGroup.lookAt(this.vector);\n        this.helixItems.push(planeGroup);\n    }\n\n    swiperInit() {\n        const self = this;\n        let progressWidth = this.progressWrapper.clientWidth;\n\n        this.swiper = new Swiper(this.slider, {\n            loop: false,\n            slidesPerView: 1,\n            // direction: \"vertical\",\n            centeredSlides: true,\n            speed: 800,\n            grabCursor: true,\n            watchSlidesProgress: true,\n            mousewheelControl: true,\n            mousewheel: {\n                invert: false,\n            },\n            // TODO: @Tomo — proucit malo kaj i kak rade ovi optioni za freeMode\n            freeMode: true,\n            freeModeSticky: true,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumVelocityRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeMinimumVelocity: 0.02,\n            navigation: {\n                nextEl: this.timelineSliderNext,\n                prevEl: this.timelineSliderPrev,\n            },\n            pagination: {\n                el: \".js-timeline-pagination\",\n                clickable: true,\n                renderBullet: (index, className) => {\n                    return `<span class=\"c-timeline__pagination-bullet ${className}\">${this.timelineItems[index].year}</span>`;\n                },\n            },\n            on: {\n                progress: function () {\n                    let swiper = this;\n                    gsap.to(self.progressDot, {\n                        x: swiper.progress * progressWidth,\n                    });\n\n                    if (!self.popupOpened) {\n                        self.progressController(swiper);\n                    } else {\n                        self.hideAllHelixItems();\n                        self.progressController(swiper);\n                    }\n                },\n                slideChange: function () {\n                    let swiper = this;\n                    if (self.popupOpened) {\n                        self.changePopupContent(swiper.activeIndex);\n                        setTimeout(() => {\n                            self.showHelixItem(swiper.activeIndex);\n                        }, 500);\n                    }\n                },\n                init: function () {\n                    let swiper = this;\n                    // trebamo timeout zbog dom-a (dok se ne stvori paginacija)\n                    setTimeout(() => {\n                        progressWidth = self.progressWrapper.clientWidth;\n                        self.popupProgressIndicator.style.width = `${self.popupProgressWrapperWidth / swiper.slides.length}px`;\n                    }, 300);\n                },\n            },\n        });\n    }\n\n    progressController(swiper) {\n        let delay = 0;\n\n        if (this.popupOpened) {\n            delay = 0.5;\n        }\n\n        gsap.to(this.cameraWrapper.rotation, {\n            duration: this.popupOpened ? 0 : 0.8,\n            delay: delay,\n            ease: \"power2.out\",\n            y:\n                (swiper.slides.length - 1) *\n                this.itemRadiusOffset *\n                swiper.progress +\n                this.initialCameraWrapperRotation,\n        });\n\n        if (!this.popupOpened) {\n            gsap.to(this.cameraWrapper.position, {\n                duration: 1,\n                ease: \"power2.out\",\n                y:\n                    this.initialCameraWrapperPosition -\n                    (swiper.slides.length - 1) *\n                    this.helixOffsetByItem *\n                    swiper.progress,\n            });\n        } else {\n            gsap.to(this.cameraWrapper.position, {\n                duration: 0,\n                ease: \"power2.out\",\n                delay: delay,\n                y:\n                    this.initialCameraWrapperPosition -\n                    (swiper.slides.length - 1) *\n                    this.helixOffsetByItem *\n                    swiper.progress +\n                    50,\n            });\n        }\n    }\n\n    changePopupContent(index) {\n        const popupItems = [this.popupYear, this.popupTitle, this.popupContent];\n\n        gsap.to(popupItems, {\n            autoAlpha: 0,\n            duration: 0.2,\n            onComplete: () => {\n                this.popupYear.innerText = this.timelineItems[index].year;\n                this.popupTitle.innerText = this.timelineItems[index].title;\n                this.popupContent.innerText = this.timelineItems[index].text;\n\n                gsap.to(popupItems, {\n                    autoAlpha: 1,\n                    duration: 0.4,\n                });\n            },\n        });\n\n        this.setPopupProgress(index);\n    }\n\n    dof() {\n        const renderPass = new RenderPass(this.scene, this.camera);\n\n        const bokehPass = new BokehPass(this.scene, this.camera, {\n            width: this.winWidth,\n            height: this.winHeight,\n        });\n\n        const composer = new EffectComposer(this.canvasRenderer);\n\n        composer.addPass(renderPass);\n        composer.addPass(bokehPass);\n\n        this.postprocessing.composer = composer;\n        this.postprocessing.bokeh = bokehPass;\n    }\n\n    mouseMove() {\n        window.addEventListener(\"mousemove\", (ev) => {\n            this.mouse.x =\n                (20 / this.winWidth) * (ev.clientX - this.winWidth / 2);\n            this.mouse.y =\n                (20 / this.winHeight) * (ev.clientY - this.winHeight / 2);\n\n            gsap.to(this.camera.position, {\n                x: this.mouse.x,\n                y: this.mouse.y,\n                duration: 1.5,\n                ease: \"power3.out\",\n            });\n\n            gsap.to(this.slider, {\n                x: -this.mouse.x * 3,\n                y: this.mouse.y * 3,\n                duration: 1,\n                ease: \"power3.out\",\n            });\n        });\n    }\n\n    addBgImage() {\n        // let texture = new THREE.TextureLoader().load(\n        //     this.timelineItemsImagePath + \"timeline-background.png\",\n        //     () => {\n        //         // image position to cover the plane\n        //         const imageAspectRatio =\n        //             texture.image.width / texture.image.height;\n        //         texture.wrapT = THREE.RepeatWrapping;\n        //         texture.repeat.x = this.geometryAspectRatio / imageAspectRatio;\n        //         texture.offset.x = 0.5 * (1 - texture.repeat.x);\n        //     },\n        // );\n\n        let bgMaterial = new THREE.MeshBasicMaterial({\n            color: 0x010d10,\n        });\n\n        const bgGeometry = new THREE.PlaneGeometry(6400, 3600, 1, 1);\n        const bg = new THREE.Mesh(bgGeometry, bgMaterial);\n        bg.position.set(0, 200, -1000);\n        this.cameraWrapper.add(bg);\n    }\n\n    popupController() {\n        if (this.swiper == null) {\n            return;\n        }\n\n        for (let i = 0; i < this.swiper.slides.length; i++) {\n            this.swiper.slides[i].addEventListener(\"click\", () => {\n                if (!this.popupOpened) {\n                    this.slideZoom();\n                    this.hideHelixItems(i);\n                    this.openPopup(i);\n                }\n            });\n        }\n\n        this.popupClose.addEventListener(\"click\", () => {\n            if (this.popupOpened) {\n                this.closePopup();\n            }\n        });\n\n        window.addEventListener(\"keyup\", (ev) => {\n            if (ev.key === \"Escape\" && this.popupOpened) {\n                this.closePopup();\n            }\n        });\n    }\n\n    openPopup(index) {\n        this.popupOpened = true;\n        document.documentElement.classList.add(\"is-popup-opened\");\n\n        gsap.timeline()\n            .to(this.timeline, {\n                duration: 0.4,\n                scale: 0.5,\n                x: \"-25%\",\n                ease: \"power3.out\",\n            })\n            .to(this.popup, {\n                autoAlpha: 1,\n                delay: 0.5,\n                onComplete: () => {\n                    this.popup.classList.add(\"is-active\");\n                },\n            });\n\n        this.popupYear.innerText = this.timelineItems[index].year;\n        this.popupTitle.innerText = this.timelineItems[index].title;\n        this.popupContent.innerText = this.timelineItems[index].text;\n\n        gsap.to(\n            [\n                \".js-timeline-pagination\",\n                \".js-back-btn\",\n                this.swiper.slides,\n                this.progressWrapper,\n            ],\n            {\n                autoAlpha: 0,\n                duration: 0.2,\n            },\n        );\n\n        this.setPopupProgress(index);\n    }\n\n    closePopup() {\n        document.documentElement.classList.remove(\"is-popup-opened\");\n        this.popup.classList.remove(\"is-active\");\n\n        gsap.timeline({\n            onComplete: () => {\n                this.popupYear.innerText = \"\";\n                this.popupTitle.innerText = \"\";\n                this.popupContent.innerText = \"\";\n                this.showHelixItems();\n                this.popupOpened = false;\n            },\n        })\n            .to(this.popup, {\n                autoAlpha: 0,\n            })\n            .to(\n                this.timeline,\n                {\n                    duration: 0.3,\n                    x: \"0%\",\n                    ease: \"power3.out\",\n                    onComplete: () => {\n                        this.slideZoom();\n                    },\n                },\n                \"-=0.3\",\n            )\n            .to(\n                this.timeline,\n                {\n                    duration: 0.3,\n                    scale: 1,\n                    ease: \"power3.out\",\n                },\n                \"-=0.3\",\n            )\n            .to(\n                [\n                    \".js-timeline-pagination\",\n                    \".js-back-btn\",\n                    this.swiper.slides,\n                    this.progressWrapper,\n                ],\n                {\n                    autoAlpha: 1,\n                    duration: 0.2,\n                    delay: 0.2,\n                },\n            );\n    }\n\n    setPopupProgress(index) {\n        gsap.to(this.popupProgressIndicator, {\n            duration: 0.5,\n            transformOrigin: \"left\",\n            left: (this.popupProgressWrapperWidth / this.timelineItems.length) * index,\n            ease: \"power4.inOut\",\n        });\n    }\n\n    slideZoom() {\n        const currentCameraWrapperYPosition =\n            this.initialCameraWrapperPosition -\n            (this.swiper.slides.length - 1) *\n            this.helixOffsetByItem *\n            this.swiper.progress;\n\n        if (this.popupOpened) {\n            gsap.timeline({})\n                .add(\"start\")\n                .to(\n                    this.camera.position,\n                    {\n                        duration: 0.8,\n                        z: this.initialCameraZPosition,\n                        ease: \"power4.inOut\",\n                    },\n                    \"start\",\n                )\n                .to(\n                    this.cameraWrapper.position,\n                    {\n                        duration: 0.8,\n                        y: currentCameraWrapperYPosition,\n                        ease: \"power4.inOut\",\n                    },\n                    \"start\",\n                )\n                .to(\n                    this.postprocessing.bokeh.uniforms[\"focus\"],\n                    {\n                        duration: 0.8,\n                        value: 360,\n                        ease: \"power4.inOut\",\n                    },\n                    \"start\",\n                );\n\n            return;\n        }\n\n        gsap.to(this.camera.position, {\n            duration: 0.8,\n            z: 850,\n            ease: \"power4.out\",\n        });\n\n        gsap.to(this.cameraWrapper.position, {\n            duration: 0.8,\n            y: currentCameraWrapperYPosition + 50,\n            ease: \"power4.out\",\n        });\n\n        gsap.to(this.postprocessing.bokeh.uniforms[\"focus\"], {\n            duration: 0.8,\n            value: 200,\n            ease: \"power4.out\",\n        });\n    }\n\n    hideHelixItems(index) {\n        this.helixItems.forEach((plane, i) => {\n            if (i !== index) {\n                if (plane.children[0]) {\n                    gsap.to(plane.children[0].material, {\n                        opacity: 0,\n                    });\n                }\n\n                if (plane.children[1]) {\n                    gsap.to(plane.children[1].material, {\n                        opacity: 0,\n                    });\n                }\n            }\n        });\n    }\n\n    hideAllHelixItems() {\n        this.helixItems.forEach((plane) => {\n            if (plane.children[0]) {\n                gsap.to(plane.children[0].material, {\n                    duration: 0.2,\n                    opacity: 0,\n                });\n            }\n\n            if (plane.children[1]) {\n                gsap.to(plane.children[1].material, {\n                    duration: 0.2,\n                    opacity: 0,\n                });\n            }\n        });\n    }\n\n    showHelixItems() {\n        this.helixItems.forEach((plane) => {\n            if (plane.children[0]) {\n                gsap.to(plane.children[0].material, {\n                    opacity: 1,\n                });\n            }\n\n            if (plane.children[1]) {\n                gsap.to(plane.children[1].material, {\n                    opacity: 1,\n                });\n            }\n        });\n    }\n\n    showHelixItem(index) {\n        if (this.helixItems[index].children[0]) {\n            gsap.to(this.helixItems[index].children[0].material, {\n                opacity: 1,\n            });\n        }\n\n        // if (this.helixItems[index].children[1]) {\n            // gsap.to(this.helixItems[index].children[1].material, {\n            //     opacity: 1,\n            // });\n        // }\n    }\n}\n","import { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\ngsap.registerPlugin(ScrollTrigger);\n\nexport default class VideoScrub {\n    constructor() {\n        this.DOM = {\n            video: \".js-video-scrub\",\n            page: \"#video-scrub\",\n            videoScrubTrigger: \".js-video-scrub-trigger\",\n            states: {\n                isPlaying: \"is-video-playing\",\n            },\n        };\n\n        this.video = document.querySelector(this.DOM.video);\n    }\n\n    init() {\n        console.log(\"VideoScrub init()\");\n        this.gsapScrollTriggerVideoPlay();\n    }\n    gsapScrollTriggerVideoPlay() {\n        this.video.addEventListener(\"loadeddata\", () => {\n            this.video.pause();\n\n            let videoScrub = gsap.to(this.video, {\n                duration: this.video.duration,\n                currentTime: this.video.duration,\n                ease: \"none\",\n                overwrite: true,\n                pause: true,\n                onUpdate: () => {\n                    // console.log(this.video.currentTime);\n                    // console.log(this.video.duration);\n                },\n            });\n\n            ScrollTrigger.create({\n                // trigger: this.DOM.videoScrubTrigger,\n                // markers: true,\n                animation: videoScrub,\n                scrub: 0.1,\n            });\n        });\n    }\n}\n","export default class DarkModeHelper {\n    /**\n     *\n     */\n    constructor() {\n        this.DOM = {\n            body: \"body\",\n            states: {\n                isLight: \"is-light\",\n            },\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        this.body = document.getElementsByTagName(this.DOM.body)[0];\n\n        console.info(\"toggle dark mode: %c Alt/Option + D \", consoleLogStyle);\n    }\n\n    init() {\n        // console.log(\"DarkModeHelper init()\");\n        this.toggleDarkMode();\n    }\n\n    toggleDarkMode() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 68 && ev.altKey) {\n                if (this.body.classList.contains(this.DOM.states.isLight)) {\n                    this.body.classList.remove(this.DOM.states.isLight);\n                } else {\n                    this.body.classList.add(this.DOM.states.isLight);\n                }\n            }\n        });\n    }\n}\n","export default class EqualHeight {\n    constructor() {\n        this.DOM = {\n            element: \".js-list-item\",\n            elementContent: \"h3\",\n            states: {}\n        };\n\n        this.elements = document.querySelectorAll(this.DOM.element);\n        this.height = 0;\n\n        this.init();\n    }\n\n    init() {\n        this.getHeight(this.elements);\n    }\n\n    getHeight() {\n        for (let i = 0, l = this.elements.length; i < l; i++) {\n            const height = this.elements[i].querySelector(this.DOM.elementContent).offsetHeight;\n\n            if (height > this.height) {\n                this.height = height;\n            }\n        }\n        this.setEqualHeights(this.height);\n    }\n\n    setEqualHeights(height) {\n        for (let i = 0, l = this.elements.length; i < l; i++) {\n            this.elements[i].style.minHeight = `${height}px`;\n        }\n    }\n}\n","export default class GridHelper {\n    /**\n     *\n     */\n    constructor() {\n        this.DOM = {\n            grid: \"grid\",\n        };\n\n        this.gridOptions = {\n            initialDisplay: \"none\", //\"flex\" or \"none\"\n            gridWidth: 1440, // px\n            columnCount: 24,\n            gridColor: \"rgb(255, 0, 255, 0.15)\",\n            columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n            gutterWidth: 0, // px\n            gutterFixed: false,\n        };\n\n        const consoleLogStyle = [\n            \"background-color: #a6a6a6\",\n            \"color: black\",\n            \"display: block\",\n            \"line-height: 24px\",\n            \"text-align: center\",\n            \"border: 1px solid #ffffff\",\n            \"font-weight: bold\",\n        ].join(\";\");\n\n        console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n\n        this.grid = null;\n\n        this.columnWidth =\n            (this.gridOptions.gridWidth -\n                (this.gridOptions.columnCount - 1) *\n                    this.gridOptions.gutterWidth) /\n            this.gridOptions.columnCount;\n\n        this.columnWidthPercentage = `${\n            (this.columnWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n\n        this.gutterWidthPercentage = `${\n            (this.gridOptions.gutterWidth / this.gridOptions.gridWidth) * 100\n        }%`;\n    }\n\n    init() {\n        console.log(\"GridHelper init()\");\n        this.initGrid();\n        this.keyboardShortcut();\n    }\n\n    initGrid() {\n        // create grid overlay element\n        this.grid = document.createElement(\"div\");\n        this.grid.id = this.DOM.grid;\n\n        // style grid element\n        this.grid.style.cssText = `\n            pointer-events: none;\n            display: ${this.gridOptions.initialDisplay};\n            flex-direction: row;\n            width: 100%;\n            max-width: ${this.gridOptions.gridWidth}px;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 999;\n        `;\n\n        if (!this.gridOptions.gutterWidth > 0) {\n            this.grid.style.borderLeft = \"none\";\n        }\n\n        // add grid container to page\n        document.body.appendChild(this.grid);\n\n        // add columns to grid\n        for (var i = 0; i < this.gridOptions.columnCount; i++) {\n            var column = document.createElement(\"i\");\n            this.grid.appendChild(column);\n\n            column.style.cssText = `\n                height: auto;\n                flex-grow: 1;\n                background-color: ${this.gridOptions.columnBgColor};\n                border-left: 1px solid ${this.gridOptions.gridColor};\n            `;\n\n            if (this.gridOptions.gutterWidth > 0) {\n                column.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            } else {\n                this.grid.style.borderRight = `1px solid ${this.gridOptions.gridColor}`;\n            }\n\n            if (this.gridOptions.gutterFixed === true) {\n                column.style.marginRight = `${this.gridOptions.gutterWidth}px`;\n            } else {\n                column.style.marginRight = this.gutterWidthPercentage;\n                column.style.width = this.columnWidthPercentage;\n            }\n        }\n\n        this.grid.lastChild.style.marginRight = 0;\n    }\n\n    /**\n     *\n     */\n    keyboardShortcut() {\n        document.addEventListener(\"keyup\", (ev) => {\n            if (ev.keyCode === 71 && ev.altKey) {\n                if (this.grid.style.display === \"none\") {\n                    this.grid.style.display = \"flex\";\n                } else {\n                    this.grid.style.display = \"none\";\n                }\n            }\n        });\n    }\n}\n","import GridHelper from \"./helpers/GridHelper\";\nimport EqualHeight from \"./helpers/EqualHeight\";\nimport DarkModeHelper from \"./helpers/DarkModeHelper\";\nimport NavigationController from \"./components/NavigationController\";\nimport TimelineSlider from \"./components/TimelineSlider\";\nimport VideoScrub from \"./components/VideoScrub\";\nimport ScrollProgress from \"./components/ScrollProgress\";\nimport Dummy from \"./components/Dummy\";\nimport GradientBg from \"./components/GradientBg\";\nimport HomeVerticalSlider from \"./components/HomeVerticalSlider\";\nimport PerlinGradient from \"./components/PerlinGradient\";\n\nconst ready = (callbackFunc) => {\n    if (document.readyState !== \"loading\") {\n        /**\n         * Document is already ready, call the callback directly\n         */\n        callbackFunc();\n    } else if (document.addEventListener) {\n        /**\n         * All modern browsers to register DOMContentLoaded\n         */\n        document.addEventListener(\"DOMContentLoaded\", callbackFunc);\n    } else {\n        /**\n         * Old IE browsers\n         */\n        document.attachEvent(\"onreadystatechange\", function () {\n            if (document.readyState === \"complete\") {\n                callbackFunc();\n            }\n        });\n    }\n};\n\n/**\n * Document ready callback\n */\nready(() => {\n    const credits = [\n        \"background-color: #000000\",\n        \"color: white\",\n        \"display: block\",\n        \"line-height: 24px\",\n        \"text-align: center\",\n        \"border: 1px solid #ffffff\",\n        \"font-weight: bold\",\n    ].join(\";\");\n\n    console.info(\"dev by: %c Bornfight \", credits);\n\n    const gridHelper = new GridHelper();\n    gridHelper.init();\n\n    const darkModeHelper = new DarkModeHelper();\n    darkModeHelper.init();\n\n    const dummy = new Dummy();\n    dummy.init();\n\n    const navigation = new NavigationController();\n    navigation.init();\n\n    const equalHeight = new EqualHeight();\n\n    const perlinGradient = new PerlinGradient();\n\n    const homeVerticalSlider = new HomeVerticalSlider();\n\n    if (document.getElementById(\"timeline-slider\") !== null) {\n        const timelineSlider = new TimelineSlider();\n    }\n\n    if (document.getElementById(\"video-scrub\") !== null) {\n        const videoScrub = new VideoScrub();\n        videoScrub.init();\n    }\n\n    if (document.getElementById(\"scroll-progress\") !== null) {\n        const scrollProgress = new ScrollProgress();\n        scrollProgress.init();\n    }\n\n    if (document.getElementById(\"gradient\") !== null) {\n        const gradientBg = new GradientBg();\n        gradientBg.init();\n    }\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}