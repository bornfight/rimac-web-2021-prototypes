{"version":3,"names":[],"mappings":"","sources":["bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Dummy = /*#__PURE__*/function () {\n  function Dummy() {\n    _classCallCheck(this, Dummy);\n  }\n\n  _createClass(Dummy, [{\n    key: \"init\",\n    value: function init() {\n      console.log(\"Loaded!\");\n    }\n  }]);\n\n  return Dummy;\n}();\n\nexports.default = Dummy;\n\n},{}],2:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * \"smart\" navigation which goes off screen when scrolling down for a better overview of content and UX\n * navigation appears when scrolling up\n */\nvar NavigationController = /*#__PURE__*/function () {\n  function NavigationController() {\n    _classCallCheck(this, NavigationController);\n\n    /**\n     * Navigation DOM selectors\n     * Navigation DOM state CSS classes\n     * @type {{navigation: string, states: {navigationSlideUp: string, navigationScrolled: string, navigationFixed: string}}}\n     */\n    this.DOM = {\n      navigation: \".js-navigation-wrapper\",\n      states: {\n        navigationScrolled: \"has-scrolled\",\n        navigationFixed: \"is-fixed\",\n        navigationSlideUp: \"slide-up\"\n      }\n    };\n    /**\n     * flag, state variable for scrolling event\n     * @type {boolean}\n     */\n\n    this.scrolling = false;\n    /**\n     * amount of pixels to scroll from top for adding \"has-scrolled\" state class\n     * @type {number}\n     */\n\n    this.scrollNavigationOffset = 200;\n    /**\n     * variable for storing amount of scroll from top position value\n     * @type {number}\n     */\n\n    this.previousTop = 0;\n    /**\n     * variable for storing current scroll position value\n     * @type {number}\n     */\n\n    this.currentTop = 0;\n    this.scrollDelta = 0;\n    this.scrollOffset = 0;\n    /**\n     * fetch navigation element DOM element\n     * @type {Element}\n     */\n\n    this.navigation = document.querySelector(this.DOM.navigation);\n  } //region methods\n\n  /**\n   *\n   */\n\n\n  _createClass(NavigationController, [{\n    key: \"init\",\n    value: function init() {\n      console.log(\"Navigation init()\");\n\n      if (this.navigation !== null) {\n        this.navigationController();\n      } else {\n        console.error(\"\".concat(this.DOM.navigation, \" does not exist in the DOM!\"));\n      }\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"navigationController\",\n    value: function navigationController() {\n      var _this = this;\n\n      document.addEventListener(\"scroll\", function () {\n        if (!_this.scrolling) {\n          _this.scrolling = true;\n\n          if (!window.requestAnimationFrame) {\n            setTimeout(_this.checkScroll(), 250);\n          } else {\n            requestAnimationFrame(function () {\n              return _this.checkScroll();\n            });\n          }\n        }\n      });\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"checkScroll\",\n    value: function checkScroll() {\n      /**\n       *\n       * @type {number}\n       */\n      var currentTop = window.pageYOffset | document.body.scrollTop;\n      this.changeNavigationState(currentTop);\n      this.previousTop = currentTop;\n      this.scrolling = false;\n    }\n    /**\n     *\n     * @param currentTop\n     */\n\n  }, {\n    key: \"changeNavigationState\",\n    value: function changeNavigationState(currentTop) {\n      if (currentTop > this.scrollNavigationOffset) {\n        this.navigation.classList.add(this.DOM.states.navigationScrolled);\n      } else {\n        this.navigation.classList.remove(this.DOM.states.navigationScrolled);\n      }\n\n      if (this.previousTop >= currentTop) {\n        this.scrollingUp(currentTop);\n      } else {\n        this.scrollingDown(currentTop);\n      }\n    }\n    /**\n     *\n     * @param currentTop\n     */\n\n  }, {\n    key: \"scrollingUp\",\n    value: function scrollingUp(currentTop) {\n      if (currentTop < this.scrollNavigationOffset) {\n        this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n      } else if (this.previousTop - currentTop > this.scrollDelta) {\n        this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n      }\n    }\n    /**\n     *\n     * @param currentTop\n     */\n\n  }, {\n    key: \"scrollingDown\",\n    value: function scrollingDown(currentTop) {\n      if (currentTop > this.scrollNavigationOffset + this.scrollOffset) {\n        this.navigation.classList.add(this.DOM.states.navigationSlideUp);\n      } else if (currentTop > this.scrollNavigationOffset) {\n        this.navigation.classList.remove(this.DOM.states.navigationSlideUp);\n      }\n    } //endregion\n\n  }]);\n\n  return NavigationController;\n}();\n\nexports.default = NavigationController;\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar GridHelper = /*#__PURE__*/function () {\n  /**\n   *\n   */\n  function GridHelper() {\n    _classCallCheck(this, GridHelper);\n\n    this.DOM = {\n      grid: \"grid\"\n    };\n    this.gridOptions = {\n      initialDisplay: \"none\",\n      //\"flex\" or \"none\"\n      gridWidth: 1440,\n      // px\n      columnCount: 24,\n      gridColor: \"rgb(255, 0, 255, 0.15)\",\n      columnBgColor: \"rgb(255, 0, 255, 0.025)\",\n      gutterWidth: 0,\n      // px\n      gutterFixed: false\n    };\n    var consoleLogStyle = [\"background-color: #a6a6a6\", \"color: black\", \"display: block\", \"line-height: 24px\", \"text-align: center\", \"border: 1px solid #ffffff\", \"font-weight: bold\"].join(\";\");\n    console.info(\"toggle grid: %c Alt/Option + G \", consoleLogStyle);\n    this.grid = null;\n    this.columnWidth = (this.gridOptions.gridWidth - (this.gridOptions.columnCount - 1) * this.gridOptions.gutterWidth) / this.gridOptions.columnCount;\n    this.columnWidthPercentage = \"\".concat(this.columnWidth / this.gridOptions.gridWidth * 100, \"%\");\n    this.gutterWidthPercentage = \"\".concat(this.gridOptions.gutterWidth / this.gridOptions.gridWidth * 100, \"%\");\n  }\n\n  _createClass(GridHelper, [{\n    key: \"init\",\n    value: function init() {\n      console.log(\"GridHelper init()\");\n      this.initGrid();\n      this.keyboardShortcut();\n    }\n  }, {\n    key: \"initGrid\",\n    value: function initGrid() {\n      // create grid overlay element\n      this.grid = document.createElement(\"div\");\n      this.grid.id = this.DOM.grid; // style grid element\n\n      this.grid.style.cssText = \"\\n            pointer-events: none;\\n            display: \".concat(this.gridOptions.initialDisplay, \";\\n            flex-direction: row;\\n            width: 100%;\\n            max-width: \").concat(this.gridOptions.gridWidth, \"px;\\n            height: 100%;\\n            position: absolute;\\n            top: 0;\\n            left: 50%;\\n            transform: translateX(-50%);\\n            z-index: 999;\\n        \");\n\n      if (!this.gridOptions.gutterWidth > 0) {\n        this.grid.style.borderLeft = \"none\";\n      } // add grid container to page\n\n\n      document.body.appendChild(this.grid); // add columns to grid\n\n      for (var i = 0; i < this.gridOptions.columnCount; i++) {\n        var column = document.createElement(\"i\");\n        this.grid.appendChild(column);\n        column.style.cssText = \"\\n                height: auto;\\n                flex-grow: 1;\\n                background-color: \".concat(this.gridOptions.columnBgColor, \";\\n                border-left: 1px solid \").concat(this.gridOptions.gridColor, \";\\n            \");\n\n        if (this.gridOptions.gutterWidth > 0) {\n          column.style.borderRight = \"1px solid \".concat(this.gridOptions.gridColor);\n        } else {\n          this.grid.style.borderRight = \"1px solid \".concat(this.gridOptions.gridColor);\n        }\n\n        if (this.gridOptions.gutterFixed === true) {\n          column.style.marginRight = \"\".concat(this.gridOptions.gutterWidth, \"px\");\n        } else {\n          column.style.marginRight = this.gutterWidthPercentage;\n          column.style.width = this.columnWidthPercentage;\n        }\n      }\n\n      this.grid.lastChild.style.marginRight = 0;\n    }\n    /**\n     *\n     */\n\n  }, {\n    key: \"keyboardShortcut\",\n    value: function keyboardShortcut() {\n      var _this = this;\n\n      document.addEventListener(\"keyup\", function (ev) {\n        if (ev.keyCode === 71 && ev.altKey) {\n          if (_this.grid.style.display === \"none\") {\n            _this.grid.style.display = \"flex\";\n          } else {\n            _this.grid.style.display = \"none\";\n          }\n        }\n      });\n    }\n  }]);\n\n  return GridHelper;\n}();\n\nexports.default = GridHelper;\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nvar _GridHelper = _interopRequireDefault(require(\"./helpers/GridHelper\"));\n\nvar _NavigationController = _interopRequireDefault(require(\"./components/NavigationController\"));\n\nvar _Dummy = _interopRequireDefault(require(\"./components/Dummy\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ready = function ready(callbackFunc) {\n  if (document.readyState !== \"loading\") {\n    /**\n     * Document is already ready, call the callback directly\n     */\n    callbackFunc();\n  } else if (document.addEventListener) {\n    /**\n     * All modern browsers to register DOMContentLoaded\n     */\n    document.addEventListener(\"DOMContentLoaded\", callbackFunc);\n  } else {\n    /**\n     * Old IE browsers\n     */\n    document.attachEvent(\"onreadystatechange\", function () {\n      if (document.readyState === \"complete\") {\n        callbackFunc();\n      }\n    });\n  }\n};\n/**\n * Document ready callback\n */\n\n\nready(function () {\n  var credits = [\"background-color: #000000\", \"color: white\", \"display: block\", \"line-height: 24px\", \"text-align: center\", \"border: 1px solid #ffffff\", \"font-weight: bold\"].join(\";\");\n  console.info(\"dev by: %c Bornfight \", credits);\n  var gridHelper = new _GridHelper.default();\n  gridHelper.init();\n  var dummy = new _Dummy.default();\n  dummy.init();\n  var navigation = new _NavigationController.default();\n  navigation.init();\n});\n\n},{\"./components/Dummy\":1,\"./components/NavigationController\":2,\"./helpers/GridHelper\":3}]},{},[4]);\n"],"file":"bundle.js"}